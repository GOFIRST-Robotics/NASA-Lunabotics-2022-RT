ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.align	2
  21              	.LC2:
  22 000c 6163686F 		.ascii	"achooController\000"
  22      6F436F6E 
  22      74726F6C 
  22      6C657200 
  23              		.align	2
  24              	.LC4:
  25 001c 63616E52 		.ascii	"canRxDispatch\000"
  25      78446973 
  25      70617463 
  25      6800
  26 002a 0000     		.align	2
  27              	.LC6:
  28 002c 67657375 		.ascii	"gesundheitTask\000"
  28      6E646865 
  28      69745461 
  28      736B00
  29 003b 00       		.align	2
  30              	.LC8:
  31 003c 736E6565 		.ascii	"sneezeControl\000"
  31      7A65436F 
  31      6E74726F 
  31      6C00
  32 004a 0000     		.align	2
  33              	.LC10:
  34 004c 64726976 		.ascii	"drivetrainTask\000"
  34      65747261 
  34      696E5461 
  34      736B00
  35              		.text
  36              	.Ltext0:
  37              		.cfi_sections	.debug_frame
  38              		.section	.text.MX_GPIO_Init,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 2


  41              		.thumb
  42              		.thumb_func
  44              	MX_GPIO_Init:
  45              	.LFB143:
  46              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "cmsis_os.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include "VESC.h"
  29:Src/main.c    **** #include "can_manager.h"
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** ADC_HandleTypeDef hadc1;
  48:Src/main.c    **** 
  49:Src/main.c    **** CAN_HandleTypeDef hcan;
  50:Src/main.c    **** 
  51:Src/main.c    **** UART_HandleTypeDef huart2;
  52:Src/main.c    **** 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 3


  53:Src/main.c    **** osThreadId defaultTaskHandle;
  54:Src/main.c    **** uint32_t defaultTaskBuffer[ 128 ];
  55:Src/main.c    **** osStaticThreadDef_t defaultTaskControlBlock;
  56:Src/main.c    **** osThreadId achooControllerHandle;
  57:Src/main.c    **** uint32_t achooControllerBuffer[ 128 ];
  58:Src/main.c    **** osStaticThreadDef_t achooControllerControlBlock;
  59:Src/main.c    **** osThreadId canRxDispatchHandle;
  60:Src/main.c    **** uint32_t canRxDispatchBuffer[ 128 ];
  61:Src/main.c    **** osStaticThreadDef_t canRxDispatchControlBlock;
  62:Src/main.c    **** osThreadId gesundheitTaskHandle;
  63:Src/main.c    **** uint32_t gesundheitTaskBuffer[ 128 ];
  64:Src/main.c    **** osStaticThreadDef_t gesundheitTaskControlBlock;
  65:Src/main.c    **** osThreadId sneezeControlHandle;
  66:Src/main.c    **** uint32_t sneezeControlBuffer[ 128 ];
  67:Src/main.c    **** osStaticThreadDef_t sneezeControlControlBlock;
  68:Src/main.c    **** osThreadId drivetrainTaskHandle;
  69:Src/main.c    **** uint32_t drivetrainTaskBuffer[ 128 ];
  70:Src/main.c    **** osStaticThreadDef_t drivetrainTaskControlBlock;
  71:Src/main.c    **** osMutexId canTxMutexHandle;
  72:Src/main.c    **** osStaticMutexDef_t canTxMutexControlBlock;
  73:Src/main.c    **** /* USER CODE BEGIN PV */
  74:Src/main.c    **** QueueHandle_t xCanRxQueue;
  75:Src/main.c    **** /* USER CODE END PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** void SystemClock_Config(void);
  79:Src/main.c    **** static void MX_GPIO_Init(void);
  80:Src/main.c    **** static void MX_USART2_UART_Init(void);
  81:Src/main.c    **** static void MX_CAN_Init(void);
  82:Src/main.c    **** static void MX_ADC1_Init(void);
  83:Src/main.c    **** void StartDefaultTask(void const * argument);
  84:Src/main.c    **** extern void achooControllerFunc(void const * argument);
  85:Src/main.c    **** extern void canRxDispatchTask(void const * argument);
  86:Src/main.c    **** extern void gesundheitControllerFunc(void const * argument);
  87:Src/main.c    **** extern void sneezeControllerFunc(void const * argument);
  88:Src/main.c    **** extern void drivetrain_loop(void const * argument);
  89:Src/main.c    **** 
  90:Src/main.c    **** /* USER CODE BEGIN PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* USER CODE END PFP */
  93:Src/main.c    **** 
  94:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  95:Src/main.c    **** /* USER CODE BEGIN 0 */
  96:Src/main.c    **** /* USER CODE END 0 */
  97:Src/main.c    **** 
  98:Src/main.c    **** /**
  99:Src/main.c    ****   * @brief  The application entry point.
 100:Src/main.c    ****   * @retval int
 101:Src/main.c    ****   */
 102:Src/main.c    **** int main(void)
 103:Src/main.c    **** {
 104:Src/main.c    ****   /* USER CODE BEGIN 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 1 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 4


 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_USART2_UART_Init();
 127:Src/main.c    ****   MX_CAN_Init();
 128:Src/main.c    ****   MX_ADC1_Init();
 129:Src/main.c    ****   /* USER CODE BEGIN 2 */
 130:Src/main.c    ****   vesc_system_init();
 131:Src/main.c    ****   /* USER CODE END 2 */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Create the mutex(es) */
 134:Src/main.c    ****   /* definition and creation of canTxMutex */
 135:Src/main.c    ****   osMutexStaticDef(canTxMutex, &canTxMutexControlBlock);
 136:Src/main.c    ****   canTxMutexHandle = osMutexCreate(osMutex(canTxMutex));
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 139:Src/main.c    ****   /* add mutexes, ... */
 140:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 143:Src/main.c    ****   /* add semaphores, ... */
 144:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 147:Src/main.c    ****   /* start timers, add new ones, ... */
 148:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 151:Src/main.c    ****   xCanRxQueue = xQueueCreate(8, sizeof(rmc_can_msg));
 152:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 153:Src/main.c    **** 
 154:Src/main.c    ****   /* Create the thread(s) */
 155:Src/main.c    ****   /* definition and creation of defaultTask */
 156:Src/main.c    ****   osThreadStaticDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128, defaultTaskBuffer, &de
 157:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* definition and creation of achooController */
 160:Src/main.c    ****   osThreadStaticDef(achooController, achooControllerFunc, osPriorityNormal, 0, 128, achooController
 161:Src/main.c    ****   achooControllerHandle = osThreadCreate(osThread(achooController), NULL);
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* definition and creation of canRxDispatch */
 164:Src/main.c    ****   osThreadStaticDef(canRxDispatch, canRxDispatchTask, osPriorityAboveNormal, 0, 128, canRxDispatchB
 165:Src/main.c    ****   canRxDispatchHandle = osThreadCreate(osThread(canRxDispatch), NULL);
 166:Src/main.c    **** 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 5


 167:Src/main.c    ****   /* definition and creation of gesundheitTask */
 168:Src/main.c    ****   osThreadStaticDef(gesundheitTask, gesundheitControllerFunc, osPriorityNormal, 0, 128, gesundheitT
 169:Src/main.c    ****   gesundheitTaskHandle = osThreadCreate(osThread(gesundheitTask), NULL);
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* definition and creation of sneezeControl */
 172:Src/main.c    ****   osThreadStaticDef(sneezeControl, sneezeControllerFunc, osPriorityNormal, 0, 128, sneezeControlBuf
 173:Src/main.c    ****   sneezeControlHandle = osThreadCreate(osThread(sneezeControl), NULL);
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* definition and creation of drivetrainTask */
 176:Src/main.c    ****   osThreadStaticDef(drivetrainTask, drivetrain_loop, osPriorityNormal, 0, 128, drivetrainTaskBuffer
 177:Src/main.c    ****   drivetrainTaskHandle = osThreadCreate(osThread(drivetrainTask), NULL);
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 180:Src/main.c    ****   /* add threads, ... */
 181:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* Start scheduler */
 184:Src/main.c    ****   osKernelStart();
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* Infinite loop */
 189:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 190:Src/main.c    ****   while (1) {
 191:Src/main.c    ****     /* USER CODE END WHILE */
 192:Src/main.c    **** 
 193:Src/main.c    ****     /* USER CODE BEGIN 3 */
 194:Src/main.c    ****   }
 195:Src/main.c    ****   /* USER CODE END 3 */
 196:Src/main.c    **** }
 197:Src/main.c    **** 
 198:Src/main.c    **** /**
 199:Src/main.c    ****   * @brief System Clock Configuration
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** void SystemClock_Config(void)
 203:Src/main.c    **** {
 204:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 207:Src/main.c    **** 
 208:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 209:Src/main.c    ****   */
 210:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 211:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 212:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 217:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 218:Src/main.c    ****   {
 219:Src/main.c    ****     Error_Handler();
 220:Src/main.c    ****   }
 221:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 222:Src/main.c    ****   */
 223:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 6


 224:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 225:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 226:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 228:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229:Src/main.c    **** 
 230:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 231:Src/main.c    ****   {
 232:Src/main.c    ****     Error_Handler();
 233:Src/main.c    ****   }
 234:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC12;
 235:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 236:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****   * @brief ADC1 Initialization Function
 245:Src/main.c    ****   * @param None
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** static void MX_ADC1_Init(void)
 249:Src/main.c    **** {
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 254:Src/main.c    **** 
 255:Src/main.c    ****   ADC_MultiModeTypeDef multimode = {0};
 256:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 257:Src/main.c    **** 
 258:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 261:Src/main.c    ****   /** Common config
 262:Src/main.c    ****   */
 263:Src/main.c    ****   hadc1.Instance = ADC1;
 264:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 265:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 266:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 267:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 268:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 269:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 270:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 271:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 272:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 273:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 274:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 275:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 276:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 277:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 278:Src/main.c    ****   {
 279:Src/main.c    ****     Error_Handler();
 280:Src/main.c    ****   }
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 7


 281:Src/main.c    ****   /** Configure the ADC multi-mode
 282:Src/main.c    ****   */
 283:Src/main.c    ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 284:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 285:Src/main.c    ****   {
 286:Src/main.c    ****     Error_Handler();
 287:Src/main.c    ****   }
 288:Src/main.c    ****   /** Configure Regular Channel
 289:Src/main.c    ****   */
 290:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 291:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 292:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 293:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 294:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 295:Src/main.c    ****   sConfig.Offset = 0;
 296:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 297:Src/main.c    ****   {
 298:Src/main.c    ****     Error_Handler();
 299:Src/main.c    ****   }
 300:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 303:Src/main.c    **** 
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** /**
 307:Src/main.c    ****   * @brief CAN Initialization Function
 308:Src/main.c    ****   * @param None
 309:Src/main.c    ****   * @retval None
 310:Src/main.c    ****   */
 311:Src/main.c    **** static void MX_CAN_Init(void)
 312:Src/main.c    **** {
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 321:Src/main.c    ****   hcan.Instance = CAN;
 322:Src/main.c    ****   hcan.Init.Prescaler = 3;
 323:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 324:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 325:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 326:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 327:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 328:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 329:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 330:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 331:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 332:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 333:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 334:Src/main.c    ****   {
 335:Src/main.c    ****     Error_Handler();
 336:Src/main.c    ****   }
 337:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 8


 338:Src/main.c    ****   CAN_FilterTypeDef sFilterConfig;
 339:Src/main.c    ****   sFilterConfig.FilterBank = 0;
 340:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 341:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 342:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 343:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
 344:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 345:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 346:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 347:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 348:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 349:Src/main.c    **** 
 350:Src/main.c    ****   if (HAL_CAN_ConfigFilter(&hcan, &sFilterConfig) != HAL_OK) {
 351:Src/main.c    ****     Error_Handler();
 352:Src/main.c    ****   }
 353:Src/main.c    ****   if (HAL_CAN_Start(&hcan) != HAL_OK) {
 354:Src/main.c    ****     /* Start Error */
 355:Src/main.c    ****     Error_Handler();
 356:Src/main.c    ****   }
 357:Src/main.c    **** 
 358:Src/main.c    ****   if (HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING) !=
 359:Src/main.c    ****       HAL_OK) {
 360:Src/main.c    ****     Error_Handler();
 361:Src/main.c    ****   }
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 364:Src/main.c    **** 
 365:Src/main.c    **** }
 366:Src/main.c    **** 
 367:Src/main.c    **** /**
 368:Src/main.c    ****   * @brief USART2 Initialization Function
 369:Src/main.c    ****   * @param None
 370:Src/main.c    ****   * @retval None
 371:Src/main.c    ****   */
 372:Src/main.c    **** static void MX_USART2_UART_Init(void)
 373:Src/main.c    **** {
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 376:Src/main.c    **** 
 377:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 378:Src/main.c    **** 
 379:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 382:Src/main.c    ****   huart2.Instance = USART2;
 383:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 384:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 385:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 386:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 387:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 388:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 389:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 390:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 391:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 392:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 393:Src/main.c    ****   {
 394:Src/main.c    ****     Error_Handler();
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 9


 395:Src/main.c    ****   }
 396:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 399:Src/main.c    **** 
 400:Src/main.c    **** }
 401:Src/main.c    **** 
 402:Src/main.c    **** /**
 403:Src/main.c    ****   * @brief GPIO Initialization Function
 404:Src/main.c    ****   * @param None
 405:Src/main.c    ****   * @retval None
 406:Src/main.c    ****   */
 407:Src/main.c    **** static void MX_GPIO_Init(void)
 408:Src/main.c    **** {
  47              		.loc 1 408 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 40
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 20
  54              		.cfi_offset 4, -20
  55              		.cfi_offset 5, -16
  56              		.cfi_offset 6, -12
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 8BB0     		sub	sp, sp, #44
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 64
 409:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  62              		.loc 1 409 3 view .LVU1
  63              		.loc 1 409 20 is_stmt 0 view .LVU2
  64 0004 0024     		movs	r4, #0
  65 0006 0594     		str	r4, [sp, #20]
  66 0008 0694     		str	r4, [sp, #24]
  67 000a 0794     		str	r4, [sp, #28]
  68 000c 0894     		str	r4, [sp, #32]
  69 000e 0994     		str	r4, [sp, #36]
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* GPIO Ports Clock Enable */
 412:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 412 3 is_stmt 1 view .LVU3
  71              	.LBB2:
  72              		.loc 1 412 3 view .LVU4
  73              		.loc 1 412 3 view .LVU5
  74 0010 404B     		ldr	r3, .L3
  75 0012 5A69     		ldr	r2, [r3, #20]
  76 0014 42F40022 		orr	r2, r2, #524288
  77 0018 5A61     		str	r2, [r3, #20]
  78              		.loc 1 412 3 view .LVU6
  79 001a 5A69     		ldr	r2, [r3, #20]
  80 001c 02F40022 		and	r2, r2, #524288
  81 0020 0192     		str	r2, [sp, #4]
  82              		.loc 1 412 3 view .LVU7
  83 0022 019A     		ldr	r2, [sp, #4]
  84              	.LBE2:
  85              		.loc 1 412 3 view .LVU8
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 10


 413:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  86              		.loc 1 413 3 view .LVU9
  87              	.LBB3:
  88              		.loc 1 413 3 view .LVU10
  89              		.loc 1 413 3 view .LVU11
  90 0024 5A69     		ldr	r2, [r3, #20]
  91 0026 42F48002 		orr	r2, r2, #4194304
  92 002a 5A61     		str	r2, [r3, #20]
  93              		.loc 1 413 3 view .LVU12
  94 002c 5A69     		ldr	r2, [r3, #20]
  95 002e 02F48002 		and	r2, r2, #4194304
  96 0032 0292     		str	r2, [sp, #8]
  97              		.loc 1 413 3 view .LVU13
  98 0034 029A     		ldr	r2, [sp, #8]
  99              	.LBE3:
 100              		.loc 1 413 3 view .LVU14
 414:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 101              		.loc 1 414 3 view .LVU15
 102              	.LBB4:
 103              		.loc 1 414 3 view .LVU16
 104              		.loc 1 414 3 view .LVU17
 105 0036 5A69     		ldr	r2, [r3, #20]
 106 0038 42F40032 		orr	r2, r2, #131072
 107 003c 5A61     		str	r2, [r3, #20]
 108              		.loc 1 414 3 view .LVU18
 109 003e 5A69     		ldr	r2, [r3, #20]
 110 0040 02F40032 		and	r2, r2, #131072
 111 0044 0392     		str	r2, [sp, #12]
 112              		.loc 1 414 3 view .LVU19
 113 0046 039A     		ldr	r2, [sp, #12]
 114              	.LBE4:
 115              		.loc 1 414 3 view .LVU20
 415:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 116              		.loc 1 415 3 view .LVU21
 117              	.LBB5:
 118              		.loc 1 415 3 view .LVU22
 119              		.loc 1 415 3 view .LVU23
 120 0048 5A69     		ldr	r2, [r3, #20]
 121 004a 42F48022 		orr	r2, r2, #262144
 122 004e 5A61     		str	r2, [r3, #20]
 123              		.loc 1 415 3 view .LVU24
 124 0050 5B69     		ldr	r3, [r3, #20]
 125 0052 03F48023 		and	r3, r3, #262144
 126 0056 0493     		str	r3, [sp, #16]
 127              		.loc 1 415 3 view .LVU25
 128 0058 049B     		ldr	r3, [sp, #16]
 129              	.LBE5:
 130              		.loc 1 415 3 view .LVU26
 416:Src/main.c    **** 
 417:Src/main.c    ****   /*Configure GPIO pin Output Level */
 418:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|R_GESUNDR_RV_Pin, GPIO_PIN_RESET);
 131              		.loc 1 418 3 view .LVU27
 132 005a 2246     		mov	r2, r4
 133 005c 48F22001 		movw	r1, #32800
 134 0060 4FF09040 		mov	r0, #1207959552
 135 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 136              	.LVL0:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 11


 419:Src/main.c    **** 
 420:Src/main.c    ****   /*Configure GPIO pin Output Level */
 421:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, R_DOOR_RV_Pin|R_DOOR_FW_Pin|R_GESUNDEXT_RV_Pin|R_GESUNDEXT_FW_Pin, GPIO_
 137              		.loc 1 421 3 view .LVU28
 138 0068 2B4F     		ldr	r7, .L3+4
 139 006a 2246     		mov	r2, r4
 140 006c 43F23001 		movw	r1, #12336
 141 0070 3846     		mov	r0, r7
 142 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL1:
 422:Src/main.c    **** 
 423:Src/main.c    ****   /*Configure GPIO pin Output Level */
 424:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, R_GESUNDR_FW_Pin|R_GESUNDL_RV_Pin|R_GESUNDL_FW_Pin, GPIO_PIN_RESET);
 144              		.loc 1 424 3 view .LVU29
 145 0076 294D     		ldr	r5, .L3+8
 146 0078 2246     		mov	r2, r4
 147 007a 4FF4E051 		mov	r1, #7168
 148 007e 2846     		mov	r0, r5
 149 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 150              	.LVL2:
 425:Src/main.c    **** 
 426:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 427:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 151              		.loc 1 427 3 view .LVU30
 152              		.loc 1 427 23 is_stmt 0 view .LVU31
 153 0084 4FF40053 		mov	r3, #8192
 154 0088 0593     		str	r3, [sp, #20]
 428:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 155              		.loc 1 428 3 is_stmt 1 view .LVU32
 156              		.loc 1 428 24 is_stmt 0 view .LVU33
 157 008a 254B     		ldr	r3, .L3+12
 158 008c 0693     		str	r3, [sp, #24]
 429:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 159              		.loc 1 429 3 is_stmt 1 view .LVU34
 160              		.loc 1 429 24 is_stmt 0 view .LVU35
 161 008e 0794     		str	r4, [sp, #28]
 430:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 162              		.loc 1 430 3 is_stmt 1 view .LVU36
 163 0090 05A9     		add	r1, sp, #20
 164 0092 2846     		mov	r0, r5
 165 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL3:
 431:Src/main.c    **** 
 432:Src/main.c    ****   /*Configure GPIO pins : LD2_Pin R_GESUNDR_RV_Pin */
 433:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin|R_GESUNDR_RV_Pin;
 167              		.loc 1 433 3 view .LVU37
 168              		.loc 1 433 23 is_stmt 0 view .LVU38
 169 0098 48F22003 		movw	r3, #32800
 170 009c 0593     		str	r3, [sp, #20]
 434:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 171              		.loc 1 434 3 is_stmt 1 view .LVU39
 172              		.loc 1 434 24 is_stmt 0 view .LVU40
 173 009e 0126     		movs	r6, #1
 174 00a0 0696     		str	r6, [sp, #24]
 435:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 435 3 is_stmt 1 view .LVU41
 176              		.loc 1 435 24 is_stmt 0 view .LVU42
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 12


 177 00a2 0794     		str	r4, [sp, #28]
 436:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 178              		.loc 1 436 3 is_stmt 1 view .LVU43
 179              		.loc 1 436 25 is_stmt 0 view .LVU44
 180 00a4 0894     		str	r4, [sp, #32]
 437:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 181              		.loc 1 437 3 is_stmt 1 view .LVU45
 182 00a6 05A9     		add	r1, sp, #20
 183 00a8 4FF09040 		mov	r0, #1207959552
 184 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL4:
 438:Src/main.c    **** 
 439:Src/main.c    ****   /*Configure GPIO pins : GESUNDHEIT_HallL_Pin BLESSYOU_LimitRL_Pin BLESSYOU_LimitRH_Pin SNEEZE_Hom
 440:Src/main.c    ****                            ACHOO_LimitLL_Pin */
 441:Src/main.c    ****   GPIO_InitStruct.Pin = GESUNDHEIT_HallL_Pin|BLESSYOU_LimitRL_Pin|BLESSYOU_LimitRH_Pin|SNEEZE_Home_
 186              		.loc 1 441 3 view .LVU46
 187              		.loc 1 441 23 is_stmt 0 view .LVU47
 188 00b0 4FF47873 		mov	r3, #992
 189 00b4 0593     		str	r3, [sp, #20]
 442:Src/main.c    ****                           |ACHOO_LimitLL_Pin;
 443:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 190              		.loc 1 443 3 is_stmt 1 view .LVU48
 191              		.loc 1 443 24 is_stmt 0 view .LVU49
 192 00b6 0694     		str	r4, [sp, #24]
 444:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 444 3 is_stmt 1 view .LVU50
 194              		.loc 1 444 24 is_stmt 0 view .LVU51
 195 00b8 0794     		str	r4, [sp, #28]
 445:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 196              		.loc 1 445 3 is_stmt 1 view .LVU52
 197 00ba 05A9     		add	r1, sp, #20
 198 00bc 2846     		mov	r0, r5
 199 00be FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL5:
 446:Src/main.c    **** 
 447:Src/main.c    ****   /*Configure GPIO pins : GESUNDHEIT_HallR_Pin GESUNDHEIT_LimitLI_Pin GESUNDHEIT_LimitLO_Pin GESUND
 448:Src/main.c    ****                            GESUNDHEIT_LimitRO_Pin BLESSYOU_LimitLL_Pin BLESSYOU_LimitLH_Pin */
 449:Src/main.c    ****   GPIO_InitStruct.Pin = GESUNDHEIT_HallR_Pin|GESUNDHEIT_LimitLI_Pin|GESUNDHEIT_LimitLO_Pin|GESUNDHE
 201              		.loc 1 449 3 view .LVU53
 202              		.loc 1 449 23 is_stmt 0 view .LVU54
 203 00c2 4CF60743 		movw	r3, #52231
 204 00c6 0593     		str	r3, [sp, #20]
 450:Src/main.c    ****                           |GESUNDHEIT_LimitRO_Pin|BLESSYOU_LimitLL_Pin|BLESSYOU_LimitLH_Pin;
 451:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 205              		.loc 1 451 3 is_stmt 1 view .LVU55
 206              		.loc 1 451 24 is_stmt 0 view .LVU56
 207 00c8 0694     		str	r4, [sp, #24]
 452:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 208              		.loc 1 452 3 is_stmt 1 view .LVU57
 209              		.loc 1 452 24 is_stmt 0 view .LVU58
 210 00ca 0794     		str	r4, [sp, #28]
 453:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 211              		.loc 1 453 3 is_stmt 1 view .LVU59
 212 00cc 05A9     		add	r1, sp, #20
 213 00ce 3846     		mov	r0, r7
 214 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL6:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 13


 454:Src/main.c    **** 
 455:Src/main.c    ****   /*Configure GPIO pins : R_DOOR_RV_Pin R_DOOR_FW_Pin R_GESUNDEXT_RV_Pin R_GESUNDEXT_FW_Pin */
 456:Src/main.c    ****   GPIO_InitStruct.Pin = R_DOOR_RV_Pin|R_DOOR_FW_Pin|R_GESUNDEXT_RV_Pin|R_GESUNDEXT_FW_Pin;
 216              		.loc 1 456 3 view .LVU60
 217              		.loc 1 456 23 is_stmt 0 view .LVU61
 218 00d4 43F23003 		movw	r3, #12336
 219 00d8 0593     		str	r3, [sp, #20]
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 457 3 is_stmt 1 view .LVU62
 221              		.loc 1 457 24 is_stmt 0 view .LVU63
 222 00da 0696     		str	r6, [sp, #24]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 458 3 is_stmt 1 view .LVU64
 224              		.loc 1 458 24 is_stmt 0 view .LVU65
 225 00dc 0794     		str	r4, [sp, #28]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 459 3 is_stmt 1 view .LVU66
 227              		.loc 1 459 25 is_stmt 0 view .LVU67
 228 00de 0894     		str	r4, [sp, #32]
 460:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 229              		.loc 1 460 3 is_stmt 1 view .LVU68
 230 00e0 05A9     		add	r1, sp, #20
 231 00e2 3846     		mov	r0, r7
 232 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL7:
 461:Src/main.c    **** 
 462:Src/main.c    ****   /*Configure GPIO pins : ACHOO_LimitLH_Pin ACHOO_LimitRL_Pin ACHOO_LimitRH_Pin */
 463:Src/main.c    ****   GPIO_InitStruct.Pin = ACHOO_LimitLH_Pin|ACHOO_LimitRL_Pin|ACHOO_LimitRH_Pin;
 234              		.loc 1 463 3 view .LVU69
 235              		.loc 1 463 23 is_stmt 0 view .LVU70
 236 00e8 4FF4E063 		mov	r3, #1792
 237 00ec 0593     		str	r3, [sp, #20]
 464:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 238              		.loc 1 464 3 is_stmt 1 view .LVU71
 239              		.loc 1 464 24 is_stmt 0 view .LVU72
 240 00ee 0694     		str	r4, [sp, #24]
 465:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 241              		.loc 1 465 3 is_stmt 1 view .LVU73
 242              		.loc 1 465 24 is_stmt 0 view .LVU74
 243 00f0 0794     		str	r4, [sp, #28]
 466:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 244              		.loc 1 466 3 is_stmt 1 view .LVU75
 245 00f2 05A9     		add	r1, sp, #20
 246 00f4 4FF09040 		mov	r0, #1207959552
 247 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL8:
 467:Src/main.c    **** 
 468:Src/main.c    ****   /*Configure GPIO pins : R_GESUNDR_FW_Pin R_GESUNDL_RV_Pin R_GESUNDL_FW_Pin */
 469:Src/main.c    ****   GPIO_InitStruct.Pin = R_GESUNDR_FW_Pin|R_GESUNDL_RV_Pin|R_GESUNDL_FW_Pin;
 249              		.loc 1 469 3 view .LVU76
 250              		.loc 1 469 23 is_stmt 0 view .LVU77
 251 00fc 4FF4E053 		mov	r3, #7168
 252 0100 0593     		str	r3, [sp, #20]
 470:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 253              		.loc 1 470 3 is_stmt 1 view .LVU78
 254              		.loc 1 470 24 is_stmt 0 view .LVU79
 255 0102 0696     		str	r6, [sp, #24]
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 14


 471:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 256              		.loc 1 471 3 is_stmt 1 view .LVU80
 257              		.loc 1 471 24 is_stmt 0 view .LVU81
 258 0104 0794     		str	r4, [sp, #28]
 472:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 259              		.loc 1 472 3 is_stmt 1 view .LVU82
 260              		.loc 1 472 25 is_stmt 0 view .LVU83
 261 0106 0894     		str	r4, [sp, #32]
 473:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 262              		.loc 1 473 3 is_stmt 1 view .LVU84
 263 0108 05A9     		add	r1, sp, #20
 264 010a 2846     		mov	r0, r5
 265 010c FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL9:
 474:Src/main.c    **** 
 475:Src/main.c    **** }
 267              		.loc 1 475 1 is_stmt 0 view .LVU85
 268 0110 0BB0     		add	sp, sp, #44
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 20
 271              		@ sp needed
 272 0112 F0BD     		pop	{r4, r5, r6, r7, pc}
 273              	.L4:
 274              		.align	2
 275              	.L3:
 276 0114 00100240 		.word	1073876992
 277 0118 00040048 		.word	1207960576
 278 011c 00080048 		.word	1207961600
 279 0120 00002110 		.word	270598144
 280              		.cfi_endproc
 281              	.LFE143:
 283              		.section	.text.StartDefaultTask,"ax",%progbits
 284              		.align	1
 285              		.global	StartDefaultTask
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	StartDefaultTask:
 291              	.LFB144:
 476:Src/main.c    **** 
 477:Src/main.c    **** /* USER CODE BEGIN 4 */
 478:Src/main.c    **** 
 479:Src/main.c    **** /* USER CODE END 4 */
 480:Src/main.c    **** 
 481:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 482:Src/main.c    **** /**
 483:Src/main.c    ****  * @brief  Function implementing the defaultTask thread.
 484:Src/main.c    ****  * @param  argument: Not used
 485:Src/main.c    ****  * @retval None
 486:Src/main.c    ****  */
 487:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 488:Src/main.c    **** void StartDefaultTask(void const * argument)
 489:Src/main.c    **** {
 292              		.loc 1 489 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ Volatile: function does not return.
 295              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 15


 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL10:
 298              		.loc 1 489 1 is_stmt 0 view .LVU87
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 304              	.LVL11:
 305              	.L6:
 490:Src/main.c    ****   /* USER CODE BEGIN 5 */
 491:Src/main.c    ****   /* Infinite loop */
 492:Src/main.c    ****   for (;;) {
 306              		.loc 1 492 3 is_stmt 1 discriminator 1 view .LVU88
 493:Src/main.c    ****     osDelay(1);
 307              		.loc 1 493 5 discriminator 1 view .LVU89
 308 0002 0120     		movs	r0, #1
 309 0004 FFF7FEFF 		bl	osDelay
 310              	.LVL12:
 492:Src/main.c    ****     osDelay(1);
 311              		.loc 1 492 9 discriminator 1 view .LVU90
 312 0008 FBE7     		b	.L6
 313              		.cfi_endproc
 314              	.LFE144:
 316              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 317              		.align	1
 318              		.global	HAL_TIM_PeriodElapsedCallback
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	HAL_TIM_PeriodElapsedCallback:
 324              	.LVL13:
 325              	.LFB145:
 494:Src/main.c    ****   }
 495:Src/main.c    ****   /* USER CODE END 5 */
 496:Src/main.c    **** }
 497:Src/main.c    **** 
 498:Src/main.c    **** /**
 499:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 500:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 501:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 502:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 503:Src/main.c    ****   * @param  htim : TIM handle
 504:Src/main.c    ****   * @retval None
 505:Src/main.c    ****   */
 506:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 507:Src/main.c    **** {
 326              		.loc 1 507 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		.loc 1 507 1 is_stmt 0 view .LVU92
 331 0000 08B5     		push	{r3, lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 16


 508:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 509:Src/main.c    **** 
 510:Src/main.c    ****   /* USER CODE END Callback 0 */
 511:Src/main.c    ****   if (htim->Instance == TIM1) {
 336              		.loc 1 511 3 is_stmt 1 view .LVU93
 337              		.loc 1 511 11 is_stmt 0 view .LVU94
 338 0002 0268     		ldr	r2, [r0]
 339              		.loc 1 511 6 view .LVU95
 340 0004 034B     		ldr	r3, .L12
 341 0006 9A42     		cmp	r2, r3
 342 0008 00D0     		beq	.L11
 343              	.LVL14:
 344              	.L8:
 512:Src/main.c    ****     HAL_IncTick();
 513:Src/main.c    ****   }
 514:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 515:Src/main.c    **** 
 516:Src/main.c    ****   /* USER CODE END Callback 1 */
 517:Src/main.c    **** }
 345              		.loc 1 517 1 view .LVU96
 346 000a 08BD     		pop	{r3, pc}
 347              	.LVL15:
 348              	.L11:
 512:Src/main.c    ****     HAL_IncTick();
 349              		.loc 1 512 5 is_stmt 1 view .LVU97
 350 000c FFF7FEFF 		bl	HAL_IncTick
 351              	.LVL16:
 352              		.loc 1 517 1 is_stmt 0 view .LVU98
 353 0010 FBE7     		b	.L8
 354              	.L13:
 355 0012 00BF     		.align	2
 356              	.L12:
 357 0014 002C0140 		.word	1073818624
 358              		.cfi_endproc
 359              	.LFE145:
 361              		.section	.text.Error_Handler,"ax",%progbits
 362              		.align	1
 363              		.global	Error_Handler
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	Error_Handler:
 369              	.LFB146:
 518:Src/main.c    **** 
 519:Src/main.c    **** /**
 520:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 521:Src/main.c    ****   * @retval None
 522:Src/main.c    ****   */
 523:Src/main.c    **** void Error_Handler(void)
 524:Src/main.c    **** {
 370              		.loc 1 524 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 525:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 526:Src/main.c    ****   unsigned int err = hcan.ErrorCode;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 17


 375              		.loc 1 526 3 view .LVU100
 376              		.loc 1 526 16 is_stmt 0 view .LVU101
 377 0000 014B     		ldr	r3, .L15
 378 0002 5B6A     		ldr	r3, [r3, #36]
 527:Src/main.c    ****   // for (;;);
 528:Src/main.c    **** 
 529:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 530:Src/main.c    **** }
 379              		.loc 1 530 1 view .LVU102
 380 0004 7047     		bx	lr
 381              	.L16:
 382 0006 00BF     		.align	2
 383              	.L15:
 384 0008 00000000 		.word	.LANCHOR0
 385              		.cfi_endproc
 386              	.LFE146:
 388              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	MX_USART2_UART_Init:
 395              	.LFB142:
 373:Src/main.c    **** 
 396              		.loc 1 373 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI5:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 382:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 405              		.loc 1 382 3 view .LVU104
 382:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 406              		.loc 1 382 19 is_stmt 0 view .LVU105
 407 0002 0B48     		ldr	r0, .L21
 408 0004 0B4B     		ldr	r3, .L21+4
 409 0006 0360     		str	r3, [r0]
 383:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 410              		.loc 1 383 3 is_stmt 1 view .LVU106
 383:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 411              		.loc 1 383 24 is_stmt 0 view .LVU107
 412 0008 4FF41643 		mov	r3, #38400
 413 000c 4360     		str	r3, [r0, #4]
 384:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 414              		.loc 1 384 3 is_stmt 1 view .LVU108
 384:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 415              		.loc 1 384 26 is_stmt 0 view .LVU109
 416 000e 0023     		movs	r3, #0
 417 0010 8360     		str	r3, [r0, #8]
 385:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 418              		.loc 1 385 3 is_stmt 1 view .LVU110
 385:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 419              		.loc 1 385 24 is_stmt 0 view .LVU111
 420 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 18


 386:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 421              		.loc 1 386 3 is_stmt 1 view .LVU112
 386:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 422              		.loc 1 386 22 is_stmt 0 view .LVU113
 423 0014 0361     		str	r3, [r0, #16]
 387:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 424              		.loc 1 387 3 is_stmt 1 view .LVU114
 387:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 425              		.loc 1 387 20 is_stmt 0 view .LVU115
 426 0016 0C22     		movs	r2, #12
 427 0018 4261     		str	r2, [r0, #20]
 388:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 428              		.loc 1 388 3 is_stmt 1 view .LVU116
 388:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 429              		.loc 1 388 25 is_stmt 0 view .LVU117
 430 001a 8361     		str	r3, [r0, #24]
 389:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 431              		.loc 1 389 3 is_stmt 1 view .LVU118
 389:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 432              		.loc 1 389 28 is_stmt 0 view .LVU119
 433 001c C361     		str	r3, [r0, #28]
 390:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 434              		.loc 1 390 3 is_stmt 1 view .LVU120
 390:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 435              		.loc 1 390 30 is_stmt 0 view .LVU121
 436 001e 0362     		str	r3, [r0, #32]
 391:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 437              		.loc 1 391 3 is_stmt 1 view .LVU122
 391:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 438              		.loc 1 391 38 is_stmt 0 view .LVU123
 439 0020 4362     		str	r3, [r0, #36]
 392:Src/main.c    ****   {
 440              		.loc 1 392 3 is_stmt 1 view .LVU124
 392:Src/main.c    ****   {
 441              		.loc 1 392 7 is_stmt 0 view .LVU125
 442 0022 FFF7FEFF 		bl	HAL_UART_Init
 443              	.LVL17:
 392:Src/main.c    ****   {
 444              		.loc 1 392 6 view .LVU126
 445 0026 00B9     		cbnz	r0, .L20
 446              	.L17:
 400:Src/main.c    **** 
 447              		.loc 1 400 1 view .LVU127
 448 0028 08BD     		pop	{r3, pc}
 449              	.L20:
 394:Src/main.c    ****   }
 450              		.loc 1 394 5 is_stmt 1 view .LVU128
 451 002a FFF7FEFF 		bl	Error_Handler
 452              	.LVL18:
 400:Src/main.c    **** 
 453              		.loc 1 400 1 is_stmt 0 view .LVU129
 454 002e FBE7     		b	.L17
 455              	.L22:
 456              		.align	2
 457              	.L21:
 458 0030 00000000 		.word	.LANCHOR1
 459 0034 00440040 		.word	1073759232
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 19


 460              		.cfi_endproc
 461              	.LFE142:
 463              		.section	.text.MX_CAN_Init,"ax",%progbits
 464              		.align	1
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	MX_CAN_Init:
 470              	.LFB141:
 312:Src/main.c    **** 
 471              		.loc 1 312 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 40
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 00B5     		push	{lr}
 476              	.LCFI6:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 14, -4
 479 0002 8BB0     		sub	sp, sp, #44
 480              	.LCFI7:
 481              		.cfi_def_cfa_offset 48
 321:Src/main.c    ****   hcan.Init.Prescaler = 3;
 482              		.loc 1 321 3 view .LVU131
 321:Src/main.c    ****   hcan.Init.Prescaler = 3;
 483              		.loc 1 321 17 is_stmt 0 view .LVU132
 484 0004 1F48     		ldr	r0, .L33
 485 0006 204B     		ldr	r3, .L33+4
 486 0008 0360     		str	r3, [r0]
 322:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 487              		.loc 1 322 3 is_stmt 1 view .LVU133
 322:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 488              		.loc 1 322 23 is_stmt 0 view .LVU134
 489 000a 0323     		movs	r3, #3
 490 000c 4360     		str	r3, [r0, #4]
 323:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 491              		.loc 1 323 3 is_stmt 1 view .LVU135
 323:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 492              		.loc 1 323 18 is_stmt 0 view .LVU136
 493 000e 0023     		movs	r3, #0
 494 0010 8360     		str	r3, [r0, #8]
 324:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 495              		.loc 1 324 3 is_stmt 1 view .LVU137
 324:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 496              		.loc 1 324 27 is_stmt 0 view .LVU138
 497 0012 C360     		str	r3, [r0, #12]
 325:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 498              		.loc 1 325 3 is_stmt 1 view .LVU139
 325:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 499              		.loc 1 325 22 is_stmt 0 view .LVU140
 500 0014 4FF41022 		mov	r2, #589824
 501 0018 0261     		str	r2, [r0, #16]
 326:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 502              		.loc 1 326 3 is_stmt 1 view .LVU141
 326:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 503              		.loc 1 326 22 is_stmt 0 view .LVU142
 504 001a 4361     		str	r3, [r0, #20]
 327:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 20


 505              		.loc 1 327 3 is_stmt 1 view .LVU143
 327:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 506              		.loc 1 327 31 is_stmt 0 view .LVU144
 507 001c 0122     		movs	r2, #1
 508 001e 0276     		strb	r2, [r0, #24]
 328:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 509              		.loc 1 328 3 is_stmt 1 view .LVU145
 328:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 510              		.loc 1 328 24 is_stmt 0 view .LVU146
 511 0020 4376     		strb	r3, [r0, #25]
 329:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 512              		.loc 1 329 3 is_stmt 1 view .LVU147
 329:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 513              		.loc 1 329 24 is_stmt 0 view .LVU148
 514 0022 8376     		strb	r3, [r0, #26]
 330:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 515              		.loc 1 330 3 is_stmt 1 view .LVU149
 330:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 516              		.loc 1 330 32 is_stmt 0 view .LVU150
 517 0024 C376     		strb	r3, [r0, #27]
 331:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 518              		.loc 1 331 3 is_stmt 1 view .LVU151
 331:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 519              		.loc 1 331 31 is_stmt 0 view .LVU152
 520 0026 0277     		strb	r2, [r0, #28]
 332:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 521              		.loc 1 332 3 is_stmt 1 view .LVU153
 332:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 522              		.loc 1 332 34 is_stmt 0 view .LVU154
 523 0028 4377     		strb	r3, [r0, #29]
 333:Src/main.c    ****   {
 524              		.loc 1 333 3 is_stmt 1 view .LVU155
 333:Src/main.c    ****   {
 525              		.loc 1 333 7 is_stmt 0 view .LVU156
 526 002a FFF7FEFF 		bl	HAL_CAN_Init
 527              	.LVL19:
 333:Src/main.c    ****   {
 528              		.loc 1 333 6 view .LVU157
 529 002e E8B9     		cbnz	r0, .L29
 530              	.L24:
 338:Src/main.c    ****   sFilterConfig.FilterBank = 0;
 531              		.loc 1 338 3 is_stmt 1 view .LVU158
 339:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 532              		.loc 1 339 3 view .LVU159
 339:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 533              		.loc 1 339 28 is_stmt 0 view .LVU160
 534 0030 0023     		movs	r3, #0
 535 0032 0593     		str	r3, [sp, #20]
 340:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 536              		.loc 1 340 3 is_stmt 1 view .LVU161
 340:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 537              		.loc 1 340 28 is_stmt 0 view .LVU162
 538 0034 0693     		str	r3, [sp, #24]
 341:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 539              		.loc 1 341 3 is_stmt 1 view .LVU163
 341:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 540              		.loc 1 341 29 is_stmt 0 view .LVU164
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 21


 541 0036 0122     		movs	r2, #1
 542 0038 0792     		str	r2, [sp, #28]
 342:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
 543              		.loc 1 342 3 is_stmt 1 view .LVU165
 342:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
 544              		.loc 1 342 30 is_stmt 0 view .LVU166
 545 003a 0093     		str	r3, [sp]
 343:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 546              		.loc 1 343 3 is_stmt 1 view .LVU167
 343:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 547              		.loc 1 343 29 is_stmt 0 view .LVU168
 548 003c 0193     		str	r3, [sp, #4]
 344:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 549              		.loc 1 344 3 is_stmt 1 view .LVU169
 344:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 550              		.loc 1 344 34 is_stmt 0 view .LVU170
 551 003e 0293     		str	r3, [sp, #8]
 345:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 552              		.loc 1 345 3 is_stmt 1 view .LVU171
 345:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 553              		.loc 1 345 33 is_stmt 0 view .LVU172
 554 0040 0393     		str	r3, [sp, #12]
 346:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 555              		.loc 1 346 3 is_stmt 1 view .LVU173
 346:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 556              		.loc 1 346 38 is_stmt 0 view .LVU174
 557 0042 0493     		str	r3, [sp, #16]
 347:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 558              		.loc 1 347 3 is_stmt 1 view .LVU175
 347:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 559              		.loc 1 347 34 is_stmt 0 view .LVU176
 560 0044 0892     		str	r2, [sp, #32]
 348:Src/main.c    **** 
 561              		.loc 1 348 3 is_stmt 1 view .LVU177
 348:Src/main.c    **** 
 562              		.loc 1 348 38 is_stmt 0 view .LVU178
 563 0046 0F23     		movs	r3, #15
 564 0048 0993     		str	r3, [sp, #36]
 350:Src/main.c    ****     Error_Handler();
 565              		.loc 1 350 3 is_stmt 1 view .LVU179
 350:Src/main.c    ****     Error_Handler();
 566              		.loc 1 350 7 is_stmt 0 view .LVU180
 567 004a 6946     		mov	r1, sp
 568 004c 0D48     		ldr	r0, .L33
 569 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 570              	.LVL20:
 350:Src/main.c    ****     Error_Handler();
 571              		.loc 1 350 6 view .LVU181
 572 0052 70B9     		cbnz	r0, .L30
 573              	.L25:
 353:Src/main.c    ****     /* Start Error */
 574              		.loc 1 353 3 is_stmt 1 view .LVU182
 353:Src/main.c    ****     /* Start Error */
 575              		.loc 1 353 7 is_stmt 0 view .LVU183
 576 0054 0B48     		ldr	r0, .L33
 577 0056 FFF7FEFF 		bl	HAL_CAN_Start
 578              	.LVL21:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 22


 353:Src/main.c    ****     /* Start Error */
 579              		.loc 1 353 6 view .LVU184
 580 005a 68B9     		cbnz	r0, .L31
 581              	.L26:
 358:Src/main.c    ****       HAL_OK) {
 582              		.loc 1 358 3 is_stmt 1 view .LVU185
 358:Src/main.c    ****       HAL_OK) {
 583              		.loc 1 358 7 is_stmt 0 view .LVU186
 584 005c 0221     		movs	r1, #2
 585 005e 0948     		ldr	r0, .L33
 586 0060 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 587              	.LVL22:
 358:Src/main.c    ****       HAL_OK) {
 588              		.loc 1 358 6 view .LVU187
 589 0064 58B9     		cbnz	r0, .L32
 590              	.L23:
 365:Src/main.c    **** 
 591              		.loc 1 365 1 view .LVU188
 592 0066 0BB0     		add	sp, sp, #44
 593              	.LCFI8:
 594              		.cfi_remember_state
 595              		.cfi_def_cfa_offset 4
 596              		@ sp needed
 597 0068 5DF804FB 		ldr	pc, [sp], #4
 598              	.L29:
 599              	.LCFI9:
 600              		.cfi_restore_state
 335:Src/main.c    ****   }
 601              		.loc 1 335 5 is_stmt 1 view .LVU189
 602 006c FFF7FEFF 		bl	Error_Handler
 603              	.LVL23:
 604 0070 DEE7     		b	.L24
 605              	.L30:
 351:Src/main.c    ****   }
 606              		.loc 1 351 5 view .LVU190
 607 0072 FFF7FEFF 		bl	Error_Handler
 608              	.LVL24:
 609 0076 EDE7     		b	.L25
 610              	.L31:
 355:Src/main.c    ****   }
 611              		.loc 1 355 5 view .LVU191
 612 0078 FFF7FEFF 		bl	Error_Handler
 613              	.LVL25:
 614 007c EEE7     		b	.L26
 615              	.L32:
 360:Src/main.c    ****   }
 616              		.loc 1 360 5 view .LVU192
 617 007e FFF7FEFF 		bl	Error_Handler
 618              	.LVL26:
 365:Src/main.c    **** 
 619              		.loc 1 365 1 is_stmt 0 view .LVU193
 620 0082 F0E7     		b	.L23
 621              	.L34:
 622              		.align	2
 623              	.L33:
 624 0084 00000000 		.word	.LANCHOR0
 625 0088 00640040 		.word	1073767424
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 23


 626              		.cfi_endproc
 627              	.LFE141:
 629              		.section	.text.MX_ADC1_Init,"ax",%progbits
 630              		.align	1
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 635              	MX_ADC1_Init:
 636              	.LFB140:
 249:Src/main.c    **** 
 637              		.loc 1 249 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 40
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641 0000 00B5     		push	{lr}
 642              	.LCFI10:
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 14, -4
 645 0002 8BB0     		sub	sp, sp, #44
 646              	.LCFI11:
 647              		.cfi_def_cfa_offset 48
 255:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 648              		.loc 1 255 3 view .LVU195
 255:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 649              		.loc 1 255 24 is_stmt 0 view .LVU196
 650 0004 0023     		movs	r3, #0
 651 0006 0793     		str	r3, [sp, #28]
 652 0008 0893     		str	r3, [sp, #32]
 653 000a 0993     		str	r3, [sp, #36]
 256:Src/main.c    **** 
 654              		.loc 1 256 3 is_stmt 1 view .LVU197
 256:Src/main.c    **** 
 655              		.loc 1 256 26 is_stmt 0 view .LVU198
 656 000c 0193     		str	r3, [sp, #4]
 657 000e 0293     		str	r3, [sp, #8]
 658 0010 0393     		str	r3, [sp, #12]
 659 0012 0493     		str	r3, [sp, #16]
 660 0014 0593     		str	r3, [sp, #20]
 661 0016 0693     		str	r3, [sp, #24]
 263:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 662              		.loc 1 263 3 is_stmt 1 view .LVU199
 263:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 663              		.loc 1 263 18 is_stmt 0 view .LVU200
 664 0018 1B48     		ldr	r0, .L43
 665 001a 4FF0A042 		mov	r2, #1342177280
 666 001e 0260     		str	r2, [r0]
 264:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 667              		.loc 1 264 3 is_stmt 1 view .LVU201
 264:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 668              		.loc 1 264 29 is_stmt 0 view .LVU202
 669 0020 4360     		str	r3, [r0, #4]
 265:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 670              		.loc 1 265 3 is_stmt 1 view .LVU203
 265:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 671              		.loc 1 265 25 is_stmt 0 view .LVU204
 672 0022 8360     		str	r3, [r0, #8]
 266:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 24


 673              		.loc 1 266 3 is_stmt 1 view .LVU205
 266:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 674              		.loc 1 266 27 is_stmt 0 view .LVU206
 675 0024 0361     		str	r3, [r0, #16]
 267:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 676              		.loc 1 267 3 is_stmt 1 view .LVU207
 267:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 677              		.loc 1 267 33 is_stmt 0 view .LVU208
 678 0026 4376     		strb	r3, [r0, #25]
 268:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 679              		.loc 1 268 3 is_stmt 1 view .LVU209
 268:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 680              		.loc 1 268 36 is_stmt 0 view .LVU210
 681 0028 80F82030 		strb	r3, [r0, #32]
 269:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 682              		.loc 1 269 3 is_stmt 1 view .LVU211
 269:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 683              		.loc 1 269 35 is_stmt 0 view .LVU212
 684 002c C362     		str	r3, [r0, #44]
 270:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 685              		.loc 1 270 3 is_stmt 1 view .LVU213
 270:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 686              		.loc 1 270 31 is_stmt 0 view .LVU214
 687 002e 0122     		movs	r2, #1
 688 0030 8262     		str	r2, [r0, #40]
 271:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 689              		.loc 1 271 3 is_stmt 1 view .LVU215
 271:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 690              		.loc 1 271 24 is_stmt 0 view .LVU216
 691 0032 C360     		str	r3, [r0, #12]
 272:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 692              		.loc 1 272 3 is_stmt 1 view .LVU217
 272:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 693              		.loc 1 272 30 is_stmt 0 view .LVU218
 694 0034 C261     		str	r2, [r0, #28]
 273:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 695              		.loc 1 273 3 is_stmt 1 view .LVU219
 273:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 696              		.loc 1 273 36 is_stmt 0 view .LVU220
 697 0036 80F83030 		strb	r3, [r0, #48]
 274:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 698              		.loc 1 274 3 is_stmt 1 view .LVU221
 274:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 699              		.loc 1 274 27 is_stmt 0 view .LVU222
 700 003a 0422     		movs	r2, #4
 701 003c 4261     		str	r2, [r0, #20]
 275:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 702              		.loc 1 275 3 is_stmt 1 view .LVU223
 275:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 703              		.loc 1 275 31 is_stmt 0 view .LVU224
 704 003e 0376     		strb	r3, [r0, #24]
 276:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 705              		.loc 1 276 3 is_stmt 1 view .LVU225
 276:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 706              		.loc 1 276 22 is_stmt 0 view .LVU226
 707 0040 4363     		str	r3, [r0, #52]
 277:Src/main.c    ****   {
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 25


 708              		.loc 1 277 3 is_stmt 1 view .LVU227
 277:Src/main.c    ****   {
 709              		.loc 1 277 7 is_stmt 0 view .LVU228
 710 0042 FFF7FEFF 		bl	HAL_ADC_Init
 711              	.LVL27:
 277:Src/main.c    ****   {
 712              		.loc 1 277 6 view .LVU229
 713 0046 B0B9     		cbnz	r0, .L40
 714              	.L36:
 283:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 715              		.loc 1 283 3 is_stmt 1 view .LVU230
 283:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 716              		.loc 1 283 18 is_stmt 0 view .LVU231
 717 0048 0023     		movs	r3, #0
 718 004a 0793     		str	r3, [sp, #28]
 284:Src/main.c    ****   {
 719              		.loc 1 284 3 is_stmt 1 view .LVU232
 284:Src/main.c    ****   {
 720              		.loc 1 284 7 is_stmt 0 view .LVU233
 721 004c 07A9     		add	r1, sp, #28
 722 004e 0E48     		ldr	r0, .L43
 723 0050 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 724              	.LVL28:
 284:Src/main.c    ****   {
 725              		.loc 1 284 6 view .LVU234
 726 0054 90B9     		cbnz	r0, .L41
 727              	.L37:
 290:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 728              		.loc 1 290 3 is_stmt 1 view .LVU235
 290:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 729              		.loc 1 290 19 is_stmt 0 view .LVU236
 730 0056 0123     		movs	r3, #1
 731 0058 0193     		str	r3, [sp, #4]
 291:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 732              		.loc 1 291 3 is_stmt 1 view .LVU237
 291:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 733              		.loc 1 291 16 is_stmt 0 view .LVU238
 734 005a 0293     		str	r3, [sp, #8]
 292:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 735              		.loc 1 292 3 is_stmt 1 view .LVU239
 292:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 736              		.loc 1 292 22 is_stmt 0 view .LVU240
 737 005c 0023     		movs	r3, #0
 738 005e 0493     		str	r3, [sp, #16]
 293:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 739              		.loc 1 293 3 is_stmt 1 view .LVU241
 293:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 740              		.loc 1 293 24 is_stmt 0 view .LVU242
 741 0060 0393     		str	r3, [sp, #12]
 294:Src/main.c    ****   sConfig.Offset = 0;
 742              		.loc 1 294 3 is_stmt 1 view .LVU243
 294:Src/main.c    ****   sConfig.Offset = 0;
 743              		.loc 1 294 24 is_stmt 0 view .LVU244
 744 0062 0593     		str	r3, [sp, #20]
 295:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 745              		.loc 1 295 3 is_stmt 1 view .LVU245
 295:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 26


 746              		.loc 1 295 18 is_stmt 0 view .LVU246
 747 0064 0693     		str	r3, [sp, #24]
 296:Src/main.c    ****   {
 748              		.loc 1 296 3 is_stmt 1 view .LVU247
 296:Src/main.c    ****   {
 749              		.loc 1 296 7 is_stmt 0 view .LVU248
 750 0066 01A9     		add	r1, sp, #4
 751 0068 0748     		ldr	r0, .L43
 752 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 753              	.LVL29:
 296:Src/main.c    ****   {
 754              		.loc 1 296 6 view .LVU249
 755 006e 40B9     		cbnz	r0, .L42
 756              	.L35:
 304:Src/main.c    **** 
 757              		.loc 1 304 1 view .LVU250
 758 0070 0BB0     		add	sp, sp, #44
 759              	.LCFI12:
 760              		.cfi_remember_state
 761              		.cfi_def_cfa_offset 4
 762              		@ sp needed
 763 0072 5DF804FB 		ldr	pc, [sp], #4
 764              	.L40:
 765              	.LCFI13:
 766              		.cfi_restore_state
 279:Src/main.c    ****   }
 767              		.loc 1 279 5 is_stmt 1 view .LVU251
 768 0076 FFF7FEFF 		bl	Error_Handler
 769              	.LVL30:
 770 007a E5E7     		b	.L36
 771              	.L41:
 286:Src/main.c    ****   }
 772              		.loc 1 286 5 view .LVU252
 773 007c FFF7FEFF 		bl	Error_Handler
 774              	.LVL31:
 775 0080 E9E7     		b	.L37
 776              	.L42:
 298:Src/main.c    ****   }
 777              		.loc 1 298 5 view .LVU253
 778 0082 FFF7FEFF 		bl	Error_Handler
 779              	.LVL32:
 304:Src/main.c    **** 
 780              		.loc 1 304 1 is_stmt 0 view .LVU254
 781 0086 F3E7     		b	.L35
 782              	.L44:
 783              		.align	2
 784              	.L43:
 785 0088 00000000 		.word	.LANCHOR2
 786              		.cfi_endproc
 787              	.LFE140:
 789              		.section	.text.SystemClock_Config,"ax",%progbits
 790              		.align	1
 791              		.global	SystemClock_Config
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	SystemClock_Config:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 27


 797              	.LFB139:
 203:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 798              		.loc 1 203 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 152
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802 0000 00B5     		push	{lr}
 803              	.LCFI14:
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 14, -4
 806 0002 A7B0     		sub	sp, sp, #156
 807              	.LCFI15:
 808              		.cfi_def_cfa_offset 160
 204:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 809              		.loc 1 204 3 view .LVU256
 204:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 810              		.loc 1 204 22 is_stmt 0 view .LVU257
 811 0004 2822     		movs	r2, #40
 812 0006 0021     		movs	r1, #0
 813 0008 1CA8     		add	r0, sp, #112
 814 000a FFF7FEFF 		bl	memset
 815              	.LVL33:
 205:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 816              		.loc 1 205 3 is_stmt 1 view .LVU258
 205:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 817              		.loc 1 205 22 is_stmt 0 view .LVU259
 818 000e 0021     		movs	r1, #0
 819 0010 1791     		str	r1, [sp, #92]
 820 0012 1891     		str	r1, [sp, #96]
 821 0014 1991     		str	r1, [sp, #100]
 822 0016 1A91     		str	r1, [sp, #104]
 823 0018 1B91     		str	r1, [sp, #108]
 206:Src/main.c    **** 
 824              		.loc 1 206 3 is_stmt 1 view .LVU260
 206:Src/main.c    **** 
 825              		.loc 1 206 28 is_stmt 0 view .LVU261
 826 001a 5822     		movs	r2, #88
 827 001c 01A8     		add	r0, sp, #4
 828 001e FFF7FEFF 		bl	memset
 829              	.LVL34:
 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 830              		.loc 1 210 3 is_stmt 1 view .LVU262
 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 831              		.loc 1 210 36 is_stmt 0 view .LVU263
 832 0022 0223     		movs	r3, #2
 833 0024 1C93     		str	r3, [sp, #112]
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 834              		.loc 1 211 3 is_stmt 1 view .LVU264
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 835              		.loc 1 211 30 is_stmt 0 view .LVU265
 836 0026 0122     		movs	r2, #1
 837 0028 1F92     		str	r2, [sp, #124]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 838              		.loc 1 212 3 is_stmt 1 view .LVU266
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 839              		.loc 1 212 41 is_stmt 0 view .LVU267
 840 002a 1022     		movs	r2, #16
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 28


 841 002c 2092     		str	r2, [sp, #128]
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 842              		.loc 1 213 3 is_stmt 1 view .LVU268
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 843              		.loc 1 213 34 is_stmt 0 view .LVU269
 844 002e 2293     		str	r3, [sp, #136]
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 845              		.loc 1 214 3 is_stmt 1 view .LVU270
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 846              		.loc 1 214 35 is_stmt 0 view .LVU271
 847 0030 4FF40043 		mov	r3, #32768
 848 0034 2393     		str	r3, [sp, #140]
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 849              		.loc 1 215 3 is_stmt 1 view .LVU272
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 850              		.loc 1 215 32 is_stmt 0 view .LVU273
 851 0036 4FF4E013 		mov	r3, #1835008
 852 003a 2493     		str	r3, [sp, #144]
 216:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 853              		.loc 1 216 3 is_stmt 1 view .LVU274
 217:Src/main.c    ****   {
 854              		.loc 1 217 3 view .LVU275
 217:Src/main.c    ****   {
 855              		.loc 1 217 7 is_stmt 0 view .LVU276
 856 003c 1CA8     		add	r0, sp, #112
 857 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 858              	.LVL35:
 217:Src/main.c    ****   {
 859              		.loc 1 217 6 view .LVU277
 860 0042 D8B9     		cbnz	r0, .L50
 861              	.L46:
 223:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 862              		.loc 1 223 3 is_stmt 1 view .LVU278
 223:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 863              		.loc 1 223 31 is_stmt 0 view .LVU279
 864 0044 0F23     		movs	r3, #15
 865 0046 1793     		str	r3, [sp, #92]
 225:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 866              		.loc 1 225 3 is_stmt 1 view .LVU280
 225:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 867              		.loc 1 225 34 is_stmt 0 view .LVU281
 868 0048 0221     		movs	r1, #2
 869 004a 1891     		str	r1, [sp, #96]
 226:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 870              		.loc 1 226 3 is_stmt 1 view .LVU282
 226:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 871              		.loc 1 226 35 is_stmt 0 view .LVU283
 872 004c 0023     		movs	r3, #0
 873 004e 1993     		str	r3, [sp, #100]
 227:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 874              		.loc 1 227 3 is_stmt 1 view .LVU284
 227:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 875              		.loc 1 227 36 is_stmt 0 view .LVU285
 876 0050 4FF48062 		mov	r2, #1024
 877 0054 1A92     		str	r2, [sp, #104]
 228:Src/main.c    **** 
 878              		.loc 1 228 3 is_stmt 1 view .LVU286
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 29


 228:Src/main.c    **** 
 879              		.loc 1 228 36 is_stmt 0 view .LVU287
 880 0056 1B93     		str	r3, [sp, #108]
 230:Src/main.c    ****   {
 881              		.loc 1 230 3 is_stmt 1 view .LVU288
 230:Src/main.c    ****   {
 882              		.loc 1 230 7 is_stmt 0 view .LVU289
 883 0058 17A8     		add	r0, sp, #92
 884 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 885              	.LVL36:
 230:Src/main.c    ****   {
 886              		.loc 1 230 6 view .LVU290
 887 005e 80B9     		cbnz	r0, .L51
 888              	.L47:
 234:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 889              		.loc 1 234 3 is_stmt 1 view .LVU291
 234:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 890              		.loc 1 234 38 is_stmt 0 view .LVU292
 891 0060 8223     		movs	r3, #130
 892 0062 0193     		str	r3, [sp, #4]
 235:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 893              		.loc 1 235 3 is_stmt 1 view .LVU293
 235:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 894              		.loc 1 235 38 is_stmt 0 view .LVU294
 895 0064 0023     		movs	r3, #0
 896 0066 0493     		str	r3, [sp, #16]
 236:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 897              		.loc 1 236 3 is_stmt 1 view .LVU295
 236:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 898              		.loc 1 236 37 is_stmt 0 view .LVU296
 899 0068 4FF48073 		mov	r3, #256
 900 006c 0B93     		str	r3, [sp, #44]
 237:Src/main.c    ****   {
 901              		.loc 1 237 3 is_stmt 1 view .LVU297
 237:Src/main.c    ****   {
 902              		.loc 1 237 7 is_stmt 0 view .LVU298
 903 006e 01A8     		add	r0, sp, #4
 904 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 905              	.LVL37:
 237:Src/main.c    ****   {
 906              		.loc 1 237 6 view .LVU299
 907 0074 40B9     		cbnz	r0, .L52
 908              	.L45:
 241:Src/main.c    **** 
 909              		.loc 1 241 1 view .LVU300
 910 0076 27B0     		add	sp, sp, #156
 911              	.LCFI16:
 912              		.cfi_remember_state
 913              		.cfi_def_cfa_offset 4
 914              		@ sp needed
 915 0078 5DF804FB 		ldr	pc, [sp], #4
 916              	.L50:
 917              	.LCFI17:
 918              		.cfi_restore_state
 219:Src/main.c    ****   }
 919              		.loc 1 219 5 is_stmt 1 view .LVU301
 920 007c FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 30


 921              	.LVL38:
 922 0080 E0E7     		b	.L46
 923              	.L51:
 232:Src/main.c    ****   }
 924              		.loc 1 232 5 view .LVU302
 925 0082 FFF7FEFF 		bl	Error_Handler
 926              	.LVL39:
 927 0086 EBE7     		b	.L47
 928              	.L52:
 239:Src/main.c    ****   }
 929              		.loc 1 239 5 view .LVU303
 930 0088 FFF7FEFF 		bl	Error_Handler
 931              	.LVL40:
 241:Src/main.c    **** 
 932              		.loc 1 241 1 is_stmt 0 view .LVU304
 933 008c F3E7     		b	.L45
 934              		.cfi_endproc
 935              	.LFE139:
 937              		.section	.text.main,"ax",%progbits
 938              		.align	1
 939              		.global	main
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	main:
 945              	.LFB138:
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 946              		.loc 1 103 1 is_stmt 1 view -0
 947              		.cfi_startproc
 948              		@ Volatile: function does not return.
 949              		@ args = 0, pretend = 0, frame = 176
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951 0000 00B5     		push	{lr}
 952              	.LCFI18:
 953              		.cfi_def_cfa_offset 4
 954              		.cfi_offset 14, -4
 955 0002 ADB0     		sub	sp, sp, #180
 956              	.LCFI19:
 957              		.cfi_def_cfa_offset 184
 111:Src/main.c    **** 
 958              		.loc 1 111 3 view .LVU306
 959 0004 FFF7FEFF 		bl	HAL_Init
 960              	.LVL41:
 118:Src/main.c    **** 
 961              		.loc 1 118 3 view .LVU307
 962 0008 FFF7FEFF 		bl	SystemClock_Config
 963              	.LVL42:
 125:Src/main.c    ****   MX_USART2_UART_Init();
 964              		.loc 1 125 3 view .LVU308
 965 000c FFF7FEFF 		bl	MX_GPIO_Init
 966              	.LVL43:
 126:Src/main.c    ****   MX_CAN_Init();
 967              		.loc 1 126 3 view .LVU309
 968 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 969              	.LVL44:
 127:Src/main.c    ****   MX_ADC1_Init();
 970              		.loc 1 127 3 view .LVU310
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 31


 971 0014 FFF7FEFF 		bl	MX_CAN_Init
 972              	.LVL45:
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 973              		.loc 1 128 3 view .LVU311
 974 0018 FFF7FEFF 		bl	MX_ADC1_Init
 975              	.LVL46:
 130:Src/main.c    ****   /* USER CODE END 2 */
 976              		.loc 1 130 3 view .LVU312
 977 001c FFF7FEFF 		bl	vesc_system_init
 978              	.LVL47:
 135:Src/main.c    ****   canTxMutexHandle = osMutexCreate(osMutex(canTxMutex));
 979              		.loc 1 135 3 view .LVU313
 980 0020 0025     		movs	r5, #0
 981 0022 2A95     		str	r5, [sp, #168]
 982 0024 3D4B     		ldr	r3, .L56
 983 0026 2B93     		str	r3, [sp, #172]
 136:Src/main.c    **** 
 984              		.loc 1 136 3 view .LVU314
 136:Src/main.c    **** 
 985              		.loc 1 136 22 is_stmt 0 view .LVU315
 986 0028 2AA8     		add	r0, sp, #168
 987 002a FFF7FEFF 		bl	osMutexCreate
 988              	.LVL48:
 136:Src/main.c    **** 
 989              		.loc 1 136 20 view .LVU316
 990 002e 3C4B     		ldr	r3, .L56+4
 991 0030 1860     		str	r0, [r3]
 151:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 992              		.loc 1 151 3 is_stmt 1 view .LVU317
 151:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 993              		.loc 1 151 17 is_stmt 0 view .LVU318
 994 0032 2A46     		mov	r2, r5
 995 0034 1021     		movs	r1, #16
 996 0036 0820     		movs	r0, #8
 997 0038 FFF7FEFF 		bl	xQueueGenericCreate
 998              	.LVL49:
 151:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 999              		.loc 1 151 15 view .LVU319
 1000 003c 394B     		ldr	r3, .L56+8
 1001 003e 1860     		str	r0, [r3]
 156:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1002              		.loc 1 156 3 is_stmt 1 view .LVU320
 1003 0040 394C     		ldr	r4, .L56+12
 1004 0042 0DF18C0C 		add	ip, sp, #140
 1005 0046 A646     		mov	lr, r4
 1006 0048 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1007 004c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1008 0050 9EE80700 		ldm	lr, {r0, r1, r2}
 1009 0054 8CE80700 		stm	ip, {r0, r1, r2}
 157:Src/main.c    **** 
 1010              		.loc 1 157 3 view .LVU321
 157:Src/main.c    **** 
 1011              		.loc 1 157 23 is_stmt 0 view .LVU322
 1012 0058 2946     		mov	r1, r5
 1013 005a 23A8     		add	r0, sp, #140
 1014 005c FFF7FEFF 		bl	osThreadCreate
 1015              	.LVL50:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 32


 157:Src/main.c    **** 
 1016              		.loc 1 157 21 view .LVU323
 1017 0060 324B     		ldr	r3, .L56+16
 1018 0062 1860     		str	r0, [r3]
 160:Src/main.c    ****   achooControllerHandle = osThreadCreate(osThread(achooController), NULL);
 1019              		.loc 1 160 3 is_stmt 1 view .LVU324
 1020 0064 0DF1700C 		add	ip, sp, #112
 1021 0068 04F11C0E 		add	lr, r4, #28
 1022 006c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1023 0070 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1024 0074 9EE80700 		ldm	lr, {r0, r1, r2}
 1025 0078 8CE80700 		stm	ip, {r0, r1, r2}
 161:Src/main.c    **** 
 1026              		.loc 1 161 3 view .LVU325
 161:Src/main.c    **** 
 1027              		.loc 1 161 27 is_stmt 0 view .LVU326
 1028 007c 2946     		mov	r1, r5
 1029 007e 1CA8     		add	r0, sp, #112
 1030 0080 FFF7FEFF 		bl	osThreadCreate
 1031              	.LVL51:
 161:Src/main.c    **** 
 1032              		.loc 1 161 25 view .LVU327
 1033 0084 2A4B     		ldr	r3, .L56+20
 1034 0086 1860     		str	r0, [r3]
 164:Src/main.c    ****   canRxDispatchHandle = osThreadCreate(osThread(canRxDispatch), NULL);
 1035              		.loc 1 164 3 is_stmt 1 view .LVU328
 1036 0088 0DF1540C 		add	ip, sp, #84
 1037 008c 04F1380E 		add	lr, r4, #56
 1038 0090 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1039 0094 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1040 0098 9EE80700 		ldm	lr, {r0, r1, r2}
 1041 009c 8CE80700 		stm	ip, {r0, r1, r2}
 165:Src/main.c    **** 
 1042              		.loc 1 165 3 view .LVU329
 165:Src/main.c    **** 
 1043              		.loc 1 165 25 is_stmt 0 view .LVU330
 1044 00a0 2946     		mov	r1, r5
 1045 00a2 15A8     		add	r0, sp, #84
 1046 00a4 FFF7FEFF 		bl	osThreadCreate
 1047              	.LVL52:
 165:Src/main.c    **** 
 1048              		.loc 1 165 23 view .LVU331
 1049 00a8 224B     		ldr	r3, .L56+24
 1050 00aa 1860     		str	r0, [r3]
 168:Src/main.c    ****   gesundheitTaskHandle = osThreadCreate(osThread(gesundheitTask), NULL);
 1051              		.loc 1 168 3 is_stmt 1 view .LVU332
 1052 00ac 0DF1380C 		add	ip, sp, #56
 1053 00b0 04F1540E 		add	lr, r4, #84
 1054 00b4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1055 00b8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1056 00bc 9EE80700 		ldm	lr, {r0, r1, r2}
 1057 00c0 8CE80700 		stm	ip, {r0, r1, r2}
 169:Src/main.c    **** 
 1058              		.loc 1 169 3 view .LVU333
 169:Src/main.c    **** 
 1059              		.loc 1 169 26 is_stmt 0 view .LVU334
 1060 00c4 2946     		mov	r1, r5
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 33


 1061 00c6 0EA8     		add	r0, sp, #56
 1062 00c8 FFF7FEFF 		bl	osThreadCreate
 1063              	.LVL53:
 169:Src/main.c    **** 
 1064              		.loc 1 169 24 view .LVU335
 1065 00cc 1A4B     		ldr	r3, .L56+28
 1066 00ce 1860     		str	r0, [r3]
 172:Src/main.c    ****   sneezeControlHandle = osThreadCreate(osThread(sneezeControl), NULL);
 1067              		.loc 1 172 3 is_stmt 1 view .LVU336
 1068 00d0 0DF11C0C 		add	ip, sp, #28
 1069 00d4 04F1700E 		add	lr, r4, #112
 1070 00d8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1071 00dc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1072 00e0 9EE80700 		ldm	lr, {r0, r1, r2}
 1073 00e4 8CE80700 		stm	ip, {r0, r1, r2}
 173:Src/main.c    **** 
 1074              		.loc 1 173 3 view .LVU337
 173:Src/main.c    **** 
 1075              		.loc 1 173 25 is_stmt 0 view .LVU338
 1076 00e8 2946     		mov	r1, r5
 1077 00ea 07A8     		add	r0, sp, #28
 1078 00ec FFF7FEFF 		bl	osThreadCreate
 1079              	.LVL54:
 173:Src/main.c    **** 
 1080              		.loc 1 173 23 view .LVU339
 1081 00f0 124B     		ldr	r3, .L56+32
 1082 00f2 1860     		str	r0, [r3]
 176:Src/main.c    ****   drivetrainTaskHandle = osThreadCreate(osThread(drivetrainTask), NULL);
 1083              		.loc 1 176 3 is_stmt 1 view .LVU340
 1084 00f4 EE46     		mov	lr, sp
 1085 00f6 04F18C0C 		add	ip, r4, #140
 1086 00fa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1087 00fe AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1088 0102 9CE80700 		ldm	ip, {r0, r1, r2}
 1089 0106 8EE80700 		stm	lr, {r0, r1, r2}
 177:Src/main.c    **** 
 1090              		.loc 1 177 3 view .LVU341
 177:Src/main.c    **** 
 1091              		.loc 1 177 26 is_stmt 0 view .LVU342
 1092 010a 2946     		mov	r1, r5
 1093 010c 6846     		mov	r0, sp
 1094 010e FFF7FEFF 		bl	osThreadCreate
 1095              	.LVL55:
 177:Src/main.c    **** 
 1096              		.loc 1 177 24 view .LVU343
 1097 0112 0B4B     		ldr	r3, .L56+36
 1098 0114 1860     		str	r0, [r3]
 184:Src/main.c    **** 
 1099              		.loc 1 184 3 is_stmt 1 view .LVU344
 1100 0116 FFF7FEFF 		bl	osKernelStart
 1101              	.LVL56:
 1102              	.L54:
 190:Src/main.c    ****     /* USER CODE END WHILE */
 1103              		.loc 1 190 3 discriminator 1 view .LVU345
 194:Src/main.c    ****   /* USER CODE END 3 */
 1104              		.loc 1 194 3 discriminator 1 view .LVU346
 190:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 34


 1105              		.loc 1 190 9 discriminator 1 view .LVU347
 1106 011a FEE7     		b	.L54
 1107              	.L57:
 1108              		.align	2
 1109              	.L56:
 1110 011c 00000000 		.word	.LANCHOR3
 1111 0120 00000000 		.word	.LANCHOR4
 1112 0124 00000000 		.word	.LANCHOR5
 1113 0128 00000000 		.word	.LANCHOR6
 1114 012c 00000000 		.word	.LANCHOR7
 1115 0130 00000000 		.word	.LANCHOR8
 1116 0134 00000000 		.word	.LANCHOR9
 1117 0138 00000000 		.word	.LANCHOR10
 1118 013c 00000000 		.word	.LANCHOR11
 1119 0140 00000000 		.word	.LANCHOR12
 1120              		.cfi_endproc
 1121              	.LFE138:
 1123              		.global	xCanRxQueue
 1124              		.global	canTxMutexControlBlock
 1125              		.global	canTxMutexHandle
 1126              		.global	drivetrainTaskControlBlock
 1127              		.global	drivetrainTaskBuffer
 1128              		.global	drivetrainTaskHandle
 1129              		.global	sneezeControlControlBlock
 1130              		.global	sneezeControlBuffer
 1131              		.global	sneezeControlHandle
 1132              		.global	gesundheitTaskControlBlock
 1133              		.global	gesundheitTaskBuffer
 1134              		.global	gesundheitTaskHandle
 1135              		.global	canRxDispatchControlBlock
 1136              		.global	canRxDispatchBuffer
 1137              		.global	canRxDispatchHandle
 1138              		.global	achooControllerControlBlock
 1139              		.global	achooControllerBuffer
 1140              		.global	achooControllerHandle
 1141              		.global	defaultTaskControlBlock
 1142              		.global	defaultTaskBuffer
 1143              		.global	defaultTaskHandle
 1144              		.global	huart2
 1145              		.global	hcan
 1146              		.global	hadc1
 1147              		.section	.rodata
 1148              		.align	2
 1149              		.set	.LANCHOR6,. + 0
 1150              	.LC12:
 1151 0000 00000000 		.word	.LC0
 1152 0004 00000000 		.word	StartDefaultTask
 1153 0008 0000     		.short	0
 1154 000a 0000     		.space	2
 1155 000c 00000000 		.word	0
 1156 0010 80000000 		.word	128
 1157 0014 00000000 		.word	defaultTaskBuffer
 1158 0018 00000000 		.word	defaultTaskControlBlock
 1159              	.LC13:
 1160 001c 0C000000 		.word	.LC2
 1161 0020 00000000 		.word	achooControllerFunc
 1162 0024 0000     		.short	0
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 35


 1163 0026 0000     		.space	2
 1164 0028 00000000 		.word	0
 1165 002c 80000000 		.word	128
 1166 0030 00000000 		.word	achooControllerBuffer
 1167 0034 00000000 		.word	achooControllerControlBlock
 1168              	.LC14:
 1169 0038 1C000000 		.word	.LC4
 1170 003c 00000000 		.word	canRxDispatchTask
 1171 0040 0100     		.short	1
 1172 0042 0000     		.space	2
 1173 0044 00000000 		.word	0
 1174 0048 80000000 		.word	128
 1175 004c 00000000 		.word	canRxDispatchBuffer
 1176 0050 00000000 		.word	canRxDispatchControlBlock
 1177              	.LC15:
 1178 0054 2C000000 		.word	.LC6
 1179 0058 00000000 		.word	gesundheitControllerFunc
 1180 005c 0000     		.short	0
 1181 005e 0000     		.space	2
 1182 0060 00000000 		.word	0
 1183 0064 80000000 		.word	128
 1184 0068 00000000 		.word	gesundheitTaskBuffer
 1185 006c 00000000 		.word	gesundheitTaskControlBlock
 1186              	.LC16:
 1187 0070 3C000000 		.word	.LC8
 1188 0074 00000000 		.word	sneezeControllerFunc
 1189 0078 0000     		.short	0
 1190 007a 0000     		.space	2
 1191 007c 00000000 		.word	0
 1192 0080 80000000 		.word	128
 1193 0084 00000000 		.word	sneezeControlBuffer
 1194 0088 00000000 		.word	sneezeControlControlBlock
 1195              	.LC17:
 1196 008c 4C000000 		.word	.LC10
 1197 0090 00000000 		.word	drivetrain_loop
 1198 0094 0000     		.short	0
 1199 0096 0000     		.space	2
 1200 0098 00000000 		.word	0
 1201 009c 80000000 		.word	128
 1202 00a0 00000000 		.word	drivetrainTaskBuffer
 1203 00a4 00000000 		.word	drivetrainTaskControlBlock
 1204              		.section	.bss.achooControllerBuffer,"aw",%nobits
 1205              		.align	2
 1208              	achooControllerBuffer:
 1209 0000 00000000 		.space	512
 1209      00000000 
 1209      00000000 
 1209      00000000 
 1209      00000000 
 1210              		.section	.bss.achooControllerControlBlock,"aw",%nobits
 1211              		.align	2
 1214              	achooControllerControlBlock:
 1215 0000 00000000 		.space	84
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 36


 1216              		.section	.bss.achooControllerHandle,"aw",%nobits
 1217              		.align	2
 1218              		.set	.LANCHOR8,. + 0
 1221              	achooControllerHandle:
 1222 0000 00000000 		.space	4
 1223              		.section	.bss.canRxDispatchBuffer,"aw",%nobits
 1224              		.align	2
 1227              	canRxDispatchBuffer:
 1228 0000 00000000 		.space	512
 1228      00000000 
 1228      00000000 
 1228      00000000 
 1228      00000000 
 1229              		.section	.bss.canRxDispatchControlBlock,"aw",%nobits
 1230              		.align	2
 1233              	canRxDispatchControlBlock:
 1234 0000 00000000 		.space	84
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1235              		.section	.bss.canRxDispatchHandle,"aw",%nobits
 1236              		.align	2
 1237              		.set	.LANCHOR9,. + 0
 1240              	canRxDispatchHandle:
 1241 0000 00000000 		.space	4
 1242              		.section	.bss.canTxMutexControlBlock,"aw",%nobits
 1243              		.align	2
 1244              		.set	.LANCHOR3,. + 0
 1247              	canTxMutexControlBlock:
 1248 0000 00000000 		.space	72
 1248      00000000 
 1248      00000000 
 1248      00000000 
 1248      00000000 
 1249              		.section	.bss.canTxMutexHandle,"aw",%nobits
 1250              		.align	2
 1251              		.set	.LANCHOR4,. + 0
 1254              	canTxMutexHandle:
 1255 0000 00000000 		.space	4
 1256              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 1257              		.align	2
 1260              	defaultTaskBuffer:
 1261 0000 00000000 		.space	512
 1261      00000000 
 1261      00000000 
 1261      00000000 
 1261      00000000 
 1262              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 1263              		.align	2
 1266              	defaultTaskControlBlock:
 1267 0000 00000000 		.space	84
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1268              		.section	.bss.defaultTaskHandle,"aw",%nobits
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 37


 1269              		.align	2
 1270              		.set	.LANCHOR7,. + 0
 1273              	defaultTaskHandle:
 1274 0000 00000000 		.space	4
 1275              		.section	.bss.drivetrainTaskBuffer,"aw",%nobits
 1276              		.align	2
 1279              	drivetrainTaskBuffer:
 1280 0000 00000000 		.space	512
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1281              		.section	.bss.drivetrainTaskControlBlock,"aw",%nobits
 1282              		.align	2
 1285              	drivetrainTaskControlBlock:
 1286 0000 00000000 		.space	84
 1286      00000000 
 1286      00000000 
 1286      00000000 
 1286      00000000 
 1287              		.section	.bss.drivetrainTaskHandle,"aw",%nobits
 1288              		.align	2
 1289              		.set	.LANCHOR12,. + 0
 1292              	drivetrainTaskHandle:
 1293 0000 00000000 		.space	4
 1294              		.section	.bss.gesundheitTaskBuffer,"aw",%nobits
 1295              		.align	2
 1298              	gesundheitTaskBuffer:
 1299 0000 00000000 		.space	512
 1299      00000000 
 1299      00000000 
 1299      00000000 
 1299      00000000 
 1300              		.section	.bss.gesundheitTaskControlBlock,"aw",%nobits
 1301              		.align	2
 1304              	gesundheitTaskControlBlock:
 1305 0000 00000000 		.space	84
 1305      00000000 
 1305      00000000 
 1305      00000000 
 1305      00000000 
 1306              		.section	.bss.gesundheitTaskHandle,"aw",%nobits
 1307              		.align	2
 1308              		.set	.LANCHOR10,. + 0
 1311              	gesundheitTaskHandle:
 1312 0000 00000000 		.space	4
 1313              		.section	.bss.hadc1,"aw",%nobits
 1314              		.align	2
 1315              		.set	.LANCHOR2,. + 0
 1318              	hadc1:
 1319 0000 00000000 		.space	80
 1319      00000000 
 1319      00000000 
 1319      00000000 
 1319      00000000 
 1320              		.section	.bss.hcan,"aw",%nobits
 1321              		.align	2
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 38


 1322              		.set	.LANCHOR0,. + 0
 1325              	hcan:
 1326 0000 00000000 		.space	40
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1327              		.section	.bss.huart2,"aw",%nobits
 1328              		.align	2
 1329              		.set	.LANCHOR1,. + 0
 1332              	huart2:
 1333 0000 00000000 		.space	128
 1333      00000000 
 1333      00000000 
 1333      00000000 
 1333      00000000 
 1334              		.section	.bss.sneezeControlBuffer,"aw",%nobits
 1335              		.align	2
 1338              	sneezeControlBuffer:
 1339 0000 00000000 		.space	512
 1339      00000000 
 1339      00000000 
 1339      00000000 
 1339      00000000 
 1340              		.section	.bss.sneezeControlControlBlock,"aw",%nobits
 1341              		.align	2
 1344              	sneezeControlControlBlock:
 1345 0000 00000000 		.space	84
 1345      00000000 
 1345      00000000 
 1345      00000000 
 1345      00000000 
 1346              		.section	.bss.sneezeControlHandle,"aw",%nobits
 1347              		.align	2
 1348              		.set	.LANCHOR11,. + 0
 1351              	sneezeControlHandle:
 1352 0000 00000000 		.space	4
 1353              		.section	.bss.xCanRxQueue,"aw",%nobits
 1354              		.align	2
 1355              		.set	.LANCHOR5,. + 0
 1358              	xCanRxQueue:
 1359 0000 00000000 		.space	4
 1360              		.text
 1361              	.Letext0:
 1362              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1363              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1364              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1365              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1366              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1367              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1368              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1369              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1370              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1371              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1372              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1373              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1374              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 39


 1375              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1376              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1377              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1378              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1379              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1380              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1381              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1382              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1383              		.file 23 "Inc/VESC.h"
 1384              		.file 24 "<built-in>"
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:17     .rodata.str1.4:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:39     .text.MX_GPIO_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:44     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:276    .text.MX_GPIO_Init:00000114 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:284    .text.StartDefaultTask:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:290    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:317    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:323    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:357    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:362    .text.Error_Handler:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:368    .text.Error_Handler:00000000 Error_Handler
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:384    .text.Error_Handler:00000008 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:389    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:394    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:458    .text.MX_USART2_UART_Init:00000030 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:464    .text.MX_CAN_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:469    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:624    .text.MX_CAN_Init:00000084 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:630    .text.MX_ADC1_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:635    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:785    .text.MX_ADC1_Init:00000088 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:790    .text.SystemClock_Config:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:796    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:938    .text.main:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:944    .text.main:00000000 main
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1110   .text.main:0000011c $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1358   .bss.xCanRxQueue:00000000 xCanRxQueue
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1247   .bss.canTxMutexControlBlock:00000000 canTxMutexControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1254   .bss.canTxMutexHandle:00000000 canTxMutexHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1285   .bss.drivetrainTaskControlBlock:00000000 drivetrainTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1279   .bss.drivetrainTaskBuffer:00000000 drivetrainTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1292   .bss.drivetrainTaskHandle:00000000 drivetrainTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1344   .bss.sneezeControlControlBlock:00000000 sneezeControlControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1338   .bss.sneezeControlBuffer:00000000 sneezeControlBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1351   .bss.sneezeControlHandle:00000000 sneezeControlHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1304   .bss.gesundheitTaskControlBlock:00000000 gesundheitTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1298   .bss.gesundheitTaskBuffer:00000000 gesundheitTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1311   .bss.gesundheitTaskHandle:00000000 gesundheitTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1233   .bss.canRxDispatchControlBlock:00000000 canRxDispatchControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1227   .bss.canRxDispatchBuffer:00000000 canRxDispatchBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1240   .bss.canRxDispatchHandle:00000000 canRxDispatchHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1214   .bss.achooControllerControlBlock:00000000 achooControllerControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1208   .bss.achooControllerBuffer:00000000 achooControllerBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1221   .bss.achooControllerHandle:00000000 achooControllerHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1266   .bss.defaultTaskControlBlock:00000000 defaultTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1260   .bss.defaultTaskBuffer:00000000 defaultTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1273   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1332   .bss.huart2:00000000 huart2
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1325   .bss.hcan:00000000 hcan
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1318   .bss.hadc1:00000000 hadc1
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1148   .rodata:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1205   .bss.achooControllerBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1211   .bss.achooControllerControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1217   .bss.achooControllerHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1224   .bss.canRxDispatchBuffer:00000000 $d
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s 			page 41


C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1230   .bss.canRxDispatchControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1236   .bss.canRxDispatchHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1243   .bss.canTxMutexControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1250   .bss.canTxMutexHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1257   .bss.defaultTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1263   .bss.defaultTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1269   .bss.defaultTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1276   .bss.drivetrainTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1282   .bss.drivetrainTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1288   .bss.drivetrainTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1295   .bss.gesundheitTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1301   .bss.gesundheitTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1307   .bss.gesundheitTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1314   .bss.hadc1:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1321   .bss.hcan:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1328   .bss.huart2:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1335   .bss.sneezeControlBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1341   .bss.sneezeControlControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1347   .bss.sneezeControlHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccuzPPl4.s:1354   .bss.xCanRxQueue:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_IncTick
HAL_UART_Init
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
vesc_system_init
osMutexCreate
xQueueGenericCreate
osThreadCreate
osKernelStart
achooControllerFunc
canRxDispatchTask
gesundheitControllerFunc
sneezeControllerFunc
drivetrain_loop
