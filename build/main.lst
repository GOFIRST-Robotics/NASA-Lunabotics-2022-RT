ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.align	2
  21              	.LC2:
  22 000c 6163686F 		.ascii	"achooController\000"
  22      6F436F6E 
  22      74726F6C 
  22      6C657200 
  23              		.align	2
  24              	.LC4:
  25 001c 696E7461 		.ascii	"intakeController\000"
  25      6B65436F 
  25      6E74726F 
  25      6C6C6572 
  25      00
  26 002d 000000   		.align	2
  27              	.LC6:
  28 0030 65786361 		.ascii	"excavateController\000"
  28      76617465 
  28      436F6E74 
  28      726F6C6C 
  28      657200
  29 0043 00       		.align	2
  30              	.LC8:
  31 0044 63616E52 		.ascii	"canRxDispatch\000"
  31      78446973 
  31      70617463 
  31      6800
  32 0052 0000     		.align	2
  33              	.LC10:
  34 0054 67657375 		.ascii	"gesundheitTask\000"
  34      6E646865 
  34      69745461 
  34      736B00
  35 0063 00       		.align	2
  36              	.LC12:
  37 0064 736E6565 		.ascii	"sneezeControl\000"
  37      7A65436F 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 2


  37      6E74726F 
  37      6C00
  38 0072 0000     		.align	2
  39              	.LC14:
  40 0074 64726976 		.ascii	"drivetrainTask\000"
  40      65747261 
  40      696E5461 
  40      736B00
  41              		.text
  42              	.Ltext0:
  43              		.cfi_sections	.debug_frame
  44              		.section	.text.MX_GPIO_Init,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	MX_GPIO_Init:
  51              	.LFB143:
  52              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****  * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                             www.st.com/SLA0044
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "cmsis_os.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include "VESC.h"
  29:Src/main.c    **** #include "can_manager.h"
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 3


  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** ADC_HandleTypeDef hadc1;
  48:Src/main.c    **** 
  49:Src/main.c    **** CAN_HandleTypeDef hcan;
  50:Src/main.c    **** 
  51:Src/main.c    **** UART_HandleTypeDef huart2;
  52:Src/main.c    **** 
  53:Src/main.c    **** osThreadId defaultTaskHandle;
  54:Src/main.c    **** uint32_t defaultTaskBuffer[ 128 ];
  55:Src/main.c    **** osStaticThreadDef_t defaultTaskControlBlock;
  56:Src/main.c    **** osThreadId achooControllerHandle;
  57:Src/main.c    **** uint32_t achooControllerBuffer[ 128 ];
  58:Src/main.c    **** osStaticThreadDef_t achooControllerControlBlock;
  59:Src/main.c    **** osThreadId intakeControllerHandle;
  60:Src/main.c    **** uint32_t intakeControllerBuffer[ 128 ];
  61:Src/main.c    **** osStaticThreadDef_t intakeControllerControlBlock;
  62:Src/main.c    **** osThreadId excavateControllerHandle;
  63:Src/main.c    **** uint32_t excavateControllerBuffer[ 128 ];
  64:Src/main.c    **** osStaticThreadDef_t excavateControllerControlBlock;
  65:Src/main.c    **** osThreadId canRxDispatchHandle;
  66:Src/main.c    **** uint32_t canRxDispatchBuffer[ 128 ];
  67:Src/main.c    **** osStaticThreadDef_t canRxDispatchControlBlock;
  68:Src/main.c    **** osThreadId gesundheitTaskHandle;
  69:Src/main.c    **** uint32_t gesundheitTaskBuffer[ 128 ];
  70:Src/main.c    **** osStaticThreadDef_t gesundheitTaskControlBlock;
  71:Src/main.c    **** osThreadId sneezeControlHandle;
  72:Src/main.c    **** uint32_t sneezeControlBuffer[ 128 ];
  73:Src/main.c    **** osStaticThreadDef_t sneezeControlControlBlock;
  74:Src/main.c    **** osThreadId drivetrainTaskHandle;
  75:Src/main.c    **** uint32_t drivetrainTaskBuffer[ 128 ];
  76:Src/main.c    **** osStaticThreadDef_t drivetrainTaskControlBlock;
  77:Src/main.c    **** osMutexId canTxMutexHandle;
  78:Src/main.c    **** osStaticMutexDef_t canTxMutexControlBlock;
  79:Src/main.c    **** /* USER CODE BEGIN PV */
  80:Src/main.c    **** QueueHandle_t xCanRxQueue;
  81:Src/main.c    **** /* USER CODE END PV */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  84:Src/main.c    **** void SystemClock_Config(void);
  85:Src/main.c    **** static void MX_GPIO_Init(void);
  86:Src/main.c    **** static void MX_USART2_UART_Init(void);
  87:Src/main.c    **** static void MX_CAN_Init(void);
  88:Src/main.c    **** static void MX_ADC1_Init(void);
  89:Src/main.c    **** void StartDefaultTask(void const * argument);
  90:Src/main.c    **** extern void achooControllerFunc(void const * argument);
  91:Src/main.c    **** extern void canRxDispatchTask(void const * argument);
  92:Src/main.c    **** extern void gesundheitControllerFunc(void const * argument);
  93:Src/main.c    **** extern void sneezeControllerFunc(void const * argument);
  94:Src/main.c    **** extern void drivetrain_loop(void const * argument);
  95:Src/main.c    **** extern void excavateControllerFunc(void const * argument);
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 4


  96:Src/main.c    **** extern void intakeControllerFunc(void const * argument);
  97:Src/main.c    **** 
  98:Src/main.c    **** 
  99:Src/main.c    **** 
 100:Src/main.c    **** /* USER CODE BEGIN PFP */
 101:Src/main.c    **** 
 102:Src/main.c    **** /* USER CODE END PFP */
 103:Src/main.c    **** 
 104:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 105:Src/main.c    **** /* USER CODE BEGIN 0 */
 106:Src/main.c    **** /* USER CODE END 0 */
 107:Src/main.c    **** 
 108:Src/main.c    **** /**
 109:Src/main.c    ****   * @brief  The application entry point.
 110:Src/main.c    ****   * @retval int
 111:Src/main.c    ****   */
 112:Src/main.c    **** int main(void)
 113:Src/main.c    **** {
 114:Src/main.c    ****   /* USER CODE BEGIN 1 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END 1 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 121:Src/main.c    ****   HAL_Init();
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE BEGIN Init */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END Init */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Configure the system clock */
 128:Src/main.c    ****   SystemClock_Config();
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END SysInit */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Initialize all configured peripherals */
 135:Src/main.c    ****   MX_GPIO_Init();
 136:Src/main.c    ****   MX_USART2_UART_Init();
 137:Src/main.c    ****   MX_CAN_Init();
 138:Src/main.c    ****   MX_ADC1_Init();
 139:Src/main.c    ****   /* USER CODE BEGIN 2 */
 140:Src/main.c    ****   vesc_system_init();
 141:Src/main.c    ****   /* USER CODE END 2 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Create the mutex(es) */
 144:Src/main.c    ****   /* definition and creation of canTxMutex */
 145:Src/main.c    ****   osMutexStaticDef(canTxMutex, &canTxMutexControlBlock);
 146:Src/main.c    ****   canTxMutexHandle = osMutexCreate(osMutex(canTxMutex));
 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 149:Src/main.c    ****   /* add mutexes, ... */
 150:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 5


 153:Src/main.c    ****   /* add semaphores, ... */
 154:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 157:Src/main.c    ****   /* start timers, add new ones, ... */
 158:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 161:Src/main.c    ****   xCanRxQueue = xQueueCreate(8, sizeof(rmc_can_msg));
 162:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Create the thread(s) */
 165:Src/main.c    ****   /* definition and creation of defaultTask */
 166:Src/main.c    ****   osThreadStaticDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128, defaultTaskBuffer, &de
 167:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* definition and creation of achooController */
 170:Src/main.c    ****   osThreadStaticDef(achooController, achooControllerFunc, osPriorityNormal, 0, 128, achooController
 171:Src/main.c    ****   achooControllerHandle = osThreadCreate(osThread(achooController), NULL);
 172:Src/main.c    **** 
 173:Src/main.c    ****   /*definition and creation of the intakeController */
 174:Src/main.c    ****   osThreadStaticDef(intakeController, intakeControllerFunc, osPriorityNormal, 0 , 128, intakeContro
 175:Src/main.c    ****   intakeControllerHandle = isThreadCreate(osThread(intakeController), NULL);
 176:Src/main.c    **** 
 177:Src/main.c    ****   /*definition and creation of the excavateController */
 178:Src/main.c    ****   osThreadStaticDef(excavateController, excavateControllerFunc, osPriorityNormal, 0, 128, intakeCon
 179:Src/main.c    ****   excavateControllerHandle = isThreadCreate(osThread(excavateController), NULL);
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* definition and creation of canRxDispatch */
 182:Src/main.c    ****   osThreadStaticDef(canRxDispatch, canRxDispatchTask, osPriorityAboveNormal, 0, 128, canRxDispatchB
 183:Src/main.c    ****   canRxDispatchHandle = osThreadCreate(osThread(canRxDispatch), NULL);
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* definition and creation of gesundheitTask */
 186:Src/main.c    ****   osThreadStaticDef(gesundheitTask, gesundheitControllerFunc, osPriorityNormal, 0, 128, gesundheitT
 187:Src/main.c    ****   gesundheitTaskHandle = osThreadCreate(osThread(gesundheitTask), NULL);
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* definition and creation of sneezeControl */
 190:Src/main.c    ****   osThreadStaticDef(sneezeControl, sneezeControllerFunc, osPriorityNormal, 0, 128, sneezeControlBuf
 191:Src/main.c    ****   sneezeControlHandle = osThreadCreate(osThread(sneezeControl), NULL);
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* definition and creation of drivetrainTask */
 194:Src/main.c    ****   osThreadStaticDef(drivetrainTask, drivetrain_loop, osPriorityNormal, 0, 128, drivetrainTaskBuffer
 195:Src/main.c    ****   drivetrainTaskHandle = osThreadCreate(osThread(drivetrainTask), NULL);
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 198:Src/main.c    ****   /* add threads, ... */
 199:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* Start scheduler */
 202:Src/main.c    ****   osKernelStart();
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* Infinite loop */
 207:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 208:Src/main.c    ****   while (1) {
 209:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 6


 210:Src/main.c    **** 
 211:Src/main.c    ****     /* USER CODE BEGIN 3 */
 212:Src/main.c    ****   }
 213:Src/main.c    ****   /* USER CODE END 3 */
 214:Src/main.c    **** }
 215:Src/main.c    **** 
 216:Src/main.c    **** /**
 217:Src/main.c    ****   * @brief System Clock Configuration
 218:Src/main.c    ****   * @retval None
 219:Src/main.c    ****   */
 220:Src/main.c    **** void SystemClock_Config(void)
 221:Src/main.c    **** {
 222:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 223:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 224:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 225:Src/main.c    **** 
 226:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 227:Src/main.c    ****   */
 228:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 229:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 230:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 235:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 236:Src/main.c    ****   {
 237:Src/main.c    ****     Error_Handler();
 238:Src/main.c    ****   }
 239:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 240:Src/main.c    ****   */
 241:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 242:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 243:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 244:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 245:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 247:Src/main.c    **** 
 248:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     Error_Handler();
 251:Src/main.c    ****   }
 252:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_ADC12;
 253:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 254:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 255:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 256:Src/main.c    ****   {
 257:Src/main.c    ****     Error_Handler();
 258:Src/main.c    ****   }
 259:Src/main.c    **** }
 260:Src/main.c    **** 
 261:Src/main.c    **** /**
 262:Src/main.c    ****   * @brief ADC1 Initialization Function
 263:Src/main.c    ****   * @param None
 264:Src/main.c    ****   * @retval None
 265:Src/main.c    ****   */
 266:Src/main.c    **** static void MX_ADC1_Init(void)
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 7


 267:Src/main.c    **** {
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   ADC_MultiModeTypeDef multimode = {0};
 274:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 279:Src/main.c    ****   /** Common config
 280:Src/main.c    ****   */
 281:Src/main.c    ****   hadc1.Instance = ADC1;
 282:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 283:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 284:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 285:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 286:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 287:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 288:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 289:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 290:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 291:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 292:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 293:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 294:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 295:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 296:Src/main.c    ****   {
 297:Src/main.c    ****     Error_Handler();
 298:Src/main.c    ****   }
 299:Src/main.c    ****   /** Configure the ADC multi-mode
 300:Src/main.c    ****   */
 301:Src/main.c    ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 302:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 303:Src/main.c    ****   {
 304:Src/main.c    ****     Error_Handler();
 305:Src/main.c    ****   }
 306:Src/main.c    ****   /** Configure Regular Channel
 307:Src/main.c    ****   */
 308:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 309:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 310:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 311:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 312:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 313:Src/main.c    ****   sConfig.Offset = 0;
 314:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 315:Src/main.c    ****   {
 316:Src/main.c    ****     Error_Handler();
 317:Src/main.c    ****   }
 318:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 321:Src/main.c    **** 
 322:Src/main.c    **** }
 323:Src/main.c    **** 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 8


 324:Src/main.c    **** /**
 325:Src/main.c    ****   * @brief CAN Initialization Function
 326:Src/main.c    ****   * @param None
 327:Src/main.c    ****   * @retval None
 328:Src/main.c    ****   */
 329:Src/main.c    **** static void MX_CAN_Init(void)
 330:Src/main.c    **** {
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 339:Src/main.c    ****   hcan.Instance = CAN;
 340:Src/main.c    ****   hcan.Init.Prescaler = 3;
 341:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 342:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 343:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 344:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 345:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 346:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 347:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 348:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 349:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 350:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 351:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 352:Src/main.c    ****   {
 353:Src/main.c    ****     Error_Handler();
 354:Src/main.c    ****   }
 355:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 356:Src/main.c    ****   CAN_FilterTypeDef sFilterConfig;
 357:Src/main.c    ****   sFilterConfig.FilterBank = 0;
 358:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 359:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 360:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 361:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
 362:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 363:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 364:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 365:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 366:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 367:Src/main.c    **** 
 368:Src/main.c    ****   if (HAL_CAN_ConfigFilter(&hcan, &sFilterConfig) != HAL_OK) {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    ****   if (HAL_CAN_Start(&hcan) != HAL_OK) {
 372:Src/main.c    ****     /* Start Error */
 373:Src/main.c    ****     Error_Handler();
 374:Src/main.c    ****   }
 375:Src/main.c    **** 
 376:Src/main.c    ****   if (HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING) !=
 377:Src/main.c    ****       HAL_OK) {
 378:Src/main.c    ****     Error_Handler();
 379:Src/main.c    ****   }
 380:Src/main.c    **** 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 9


 381:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 382:Src/main.c    **** 
 383:Src/main.c    **** }
 384:Src/main.c    **** 
 385:Src/main.c    **** /**
 386:Src/main.c    ****   * @brief USART2 Initialization Function
 387:Src/main.c    ****   * @param None
 388:Src/main.c    ****   * @retval None
 389:Src/main.c    ****   */
 390:Src/main.c    **** static void MX_USART2_UART_Init(void)
 391:Src/main.c    **** {
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 400:Src/main.c    ****   huart2.Instance = USART2;
 401:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 402:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 403:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 404:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 405:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 406:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 407:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 408:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 409:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 410:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 411:Src/main.c    ****   {
 412:Src/main.c    ****     Error_Handler();
 413:Src/main.c    ****   }
 414:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 417:Src/main.c    **** 
 418:Src/main.c    **** }
 419:Src/main.c    **** 
 420:Src/main.c    **** /**
 421:Src/main.c    ****   * @brief GPIO Initialization Function
 422:Src/main.c    ****   * @param None
 423:Src/main.c    ****   * @retval None
 424:Src/main.c    ****   */
 425:Src/main.c    **** static void MX_GPIO_Init(void)
 426:Src/main.c    **** {
  53              		.loc 1 426 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 40
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 20
  60              		.cfi_offset 4, -20
  61              		.cfi_offset 5, -16
  62              		.cfi_offset 6, -12
  63              		.cfi_offset 7, -8
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 10


  64              		.cfi_offset 14, -4
  65 0002 8BB0     		sub	sp, sp, #44
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 64
 427:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  68              		.loc 1 427 3 view .LVU1
  69              		.loc 1 427 20 is_stmt 0 view .LVU2
  70 0004 0024     		movs	r4, #0
  71 0006 0594     		str	r4, [sp, #20]
  72 0008 0694     		str	r4, [sp, #24]
  73 000a 0794     		str	r4, [sp, #28]
  74 000c 0894     		str	r4, [sp, #32]
  75 000e 0994     		str	r4, [sp, #36]
 428:Src/main.c    **** 
 429:Src/main.c    ****   /* GPIO Ports Clock Enable */
 430:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  76              		.loc 1 430 3 is_stmt 1 view .LVU3
  77              	.LBB2:
  78              		.loc 1 430 3 view .LVU4
  79              		.loc 1 430 3 view .LVU5
  80 0010 444B     		ldr	r3, .L3
  81 0012 5A69     		ldr	r2, [r3, #20]
  82 0014 42F40022 		orr	r2, r2, #524288
  83 0018 5A61     		str	r2, [r3, #20]
  84              		.loc 1 430 3 view .LVU6
  85 001a 5A69     		ldr	r2, [r3, #20]
  86 001c 02F40022 		and	r2, r2, #524288
  87 0020 0192     		str	r2, [sp, #4]
  88              		.loc 1 430 3 view .LVU7
  89 0022 019A     		ldr	r2, [sp, #4]
  90              	.LBE2:
  91              		.loc 1 430 3 view .LVU8
 431:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  92              		.loc 1 431 3 view .LVU9
  93              	.LBB3:
  94              		.loc 1 431 3 view .LVU10
  95              		.loc 1 431 3 view .LVU11
  96 0024 5A69     		ldr	r2, [r3, #20]
  97 0026 42F48002 		orr	r2, r2, #4194304
  98 002a 5A61     		str	r2, [r3, #20]
  99              		.loc 1 431 3 view .LVU12
 100 002c 5A69     		ldr	r2, [r3, #20]
 101 002e 02F48002 		and	r2, r2, #4194304
 102 0032 0292     		str	r2, [sp, #8]
 103              		.loc 1 431 3 view .LVU13
 104 0034 029A     		ldr	r2, [sp, #8]
 105              	.LBE3:
 106              		.loc 1 431 3 view .LVU14
 432:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 107              		.loc 1 432 3 view .LVU15
 108              	.LBB4:
 109              		.loc 1 432 3 view .LVU16
 110              		.loc 1 432 3 view .LVU17
 111 0036 5A69     		ldr	r2, [r3, #20]
 112 0038 42F40032 		orr	r2, r2, #131072
 113 003c 5A61     		str	r2, [r3, #20]
 114              		.loc 1 432 3 view .LVU18
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 11


 115 003e 5A69     		ldr	r2, [r3, #20]
 116 0040 02F40032 		and	r2, r2, #131072
 117 0044 0392     		str	r2, [sp, #12]
 118              		.loc 1 432 3 view .LVU19
 119 0046 039A     		ldr	r2, [sp, #12]
 120              	.LBE4:
 121              		.loc 1 432 3 view .LVU20
 433:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 122              		.loc 1 433 3 view .LVU21
 123              	.LBB5:
 124              		.loc 1 433 3 view .LVU22
 125              		.loc 1 433 3 view .LVU23
 126 0048 5A69     		ldr	r2, [r3, #20]
 127 004a 42F48022 		orr	r2, r2, #262144
 128 004e 5A61     		str	r2, [r3, #20]
 129              		.loc 1 433 3 view .LVU24
 130 0050 5B69     		ldr	r3, [r3, #20]
 131 0052 03F48023 		and	r3, r3, #262144
 132 0056 0493     		str	r3, [sp, #16]
 133              		.loc 1 433 3 view .LVU25
 134 0058 049B     		ldr	r3, [sp, #16]
 135              	.LBE5:
 136              		.loc 1 433 3 view .LVU26
 434:Src/main.c    **** 
 435:Src/main.c    ****   /*Configure GPIO pin Output Level */
 436:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|R_GESUNDR_RV_Pin, GPIO_PIN_RESET);
 137              		.loc 1 436 3 view .LVU27
 138 005a 2246     		mov	r2, r4
 139 005c 48F22001 		movw	r1, #32800
 140 0060 4FF09040 		mov	r0, #1207959552
 141 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 142              	.LVL0:
 437:Src/main.c    **** 
 438:Src/main.c    ****   /*Configure GPIO pin Output Level */
 439:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, R_DOOR_RV_Pin|R_DOOR_FW_Pin|R_GESUNDEXT_RV_Pin|R_GESUNDEXT_FW_Pin, GPIO_
 143              		.loc 1 439 3 view .LVU28
 144 0068 2F4F     		ldr	r7, .L3+4
 145 006a 2246     		mov	r2, r4
 146 006c 43F23001 		movw	r1, #12336
 147 0070 3846     		mov	r0, r7
 148 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL1:
 440:Src/main.c    **** 
 441:Src/main.c    ****   /*Configure GPIO pin Output Level */
 442:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, R_GESUNDR_FW_Pin|R_GESUNDL_RV_Pin|R_GESUNDL_FW_Pin, GPIO_PIN_RESET);
 150              		.loc 1 442 3 view .LVU29
 151 0076 2D4D     		ldr	r5, .L3+8
 152 0078 2246     		mov	r2, r4
 153 007a 4FF4E051 		mov	r1, #7168
 154 007e 2846     		mov	r0, r5
 155 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL2:
 443:Src/main.c    **** 
 444:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 445:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 157              		.loc 1 445 3 view .LVU30
 158              		.loc 1 445 23 is_stmt 0 view .LVU31
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 12


 159 0084 4FF40053 		mov	r3, #8192
 160 0088 0593     		str	r3, [sp, #20]
 446:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 161              		.loc 1 446 3 is_stmt 1 view .LVU32
 162              		.loc 1 446 24 is_stmt 0 view .LVU33
 163 008a 294B     		ldr	r3, .L3+12
 164 008c 0693     		str	r3, [sp, #24]
 447:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 165              		.loc 1 447 3 is_stmt 1 view .LVU34
 166              		.loc 1 447 24 is_stmt 0 view .LVU35
 167 008e 0794     		str	r4, [sp, #28]
 448:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 168              		.loc 1 448 3 is_stmt 1 view .LVU36
 169 0090 05A9     		add	r1, sp, #20
 170 0092 2846     		mov	r0, r5
 171 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL3:
 449:Src/main.c    **** 
 450:Src/main.c    ****   /*Configure GPIO pins : LD2_Pin R_GESUNDR_RV_Pin */
 451:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin|R_GESUNDR_RV_Pin;
 173              		.loc 1 451 3 view .LVU37
 174              		.loc 1 451 23 is_stmt 0 view .LVU38
 175 0098 48F22003 		movw	r3, #32800
 176 009c 0593     		str	r3, [sp, #20]
 452:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 177              		.loc 1 452 3 is_stmt 1 view .LVU39
 178              		.loc 1 452 24 is_stmt 0 view .LVU40
 179 009e 0126     		movs	r6, #1
 180 00a0 0696     		str	r6, [sp, #24]
 453:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 453 3 is_stmt 1 view .LVU41
 182              		.loc 1 453 24 is_stmt 0 view .LVU42
 183 00a2 0794     		str	r4, [sp, #28]
 454:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 184              		.loc 1 454 3 is_stmt 1 view .LVU43
 185              		.loc 1 454 25 is_stmt 0 view .LVU44
 186 00a4 0894     		str	r4, [sp, #32]
 455:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 187              		.loc 1 455 3 is_stmt 1 view .LVU45
 188 00a6 05A9     		add	r1, sp, #20
 189 00a8 4FF09040 		mov	r0, #1207959552
 190 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL4:
 456:Src/main.c    **** 
 457:Src/main.c    ****   /*Configure GPIO pins : GESUNDHEIT_HallL_Pin BLESSYOU_LimitRL_Pin BLESSYOU_LimitRH_Pin SNEEZE_Hom
 458:Src/main.c    ****                            ACHOO_LimitLL_Pin */
 459:Src/main.c    ****   GPIO_InitStruct.Pin = GESUNDHEIT_HallL_Pin|BLESSYOU_LimitRL_Pin|BLESSYOU_LimitRH_Pin|SNEEZE_Home_
 192              		.loc 1 459 3 view .LVU46
 193              		.loc 1 459 23 is_stmt 0 view .LVU47
 194 00b0 4FF47873 		mov	r3, #992
 195 00b4 0593     		str	r3, [sp, #20]
 460:Src/main.c    ****                           |ACHOO_LimitLL_Pin;
 461:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 196              		.loc 1 461 3 is_stmt 1 view .LVU48
 197              		.loc 1 461 24 is_stmt 0 view .LVU49
 198 00b6 0694     		str	r4, [sp, #24]
 462:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 13


 199              		.loc 1 462 3 is_stmt 1 view .LVU50
 200              		.loc 1 462 24 is_stmt 0 view .LVU51
 201 00b8 0794     		str	r4, [sp, #28]
 463:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 202              		.loc 1 463 3 is_stmt 1 view .LVU52
 203 00ba 05A9     		add	r1, sp, #20
 204 00bc 2846     		mov	r0, r5
 205 00be FFF7FEFF 		bl	HAL_GPIO_Init
 206              	.LVL5:
 464:Src/main.c    **** 
 465:Src/main.c    ****   /*Configure GPIO pins : GESUNDHEIT_HallR_Pin GESUNDHEIT_LimitLI_Pin GESUNDHEIT_LimitLO_Pin GESUND
 466:Src/main.c    ****                            GESUNDHEIT_LimitRO_Pin BLESSYOU_LimitLL_Pin BLESSYOU_LimitLH_Pin */
 467:Src/main.c    ****   GPIO_InitStruct.Pin = GESUNDHEIT_HallR_Pin|GESUNDHEIT_LimitLI_Pin|GESUNDHEIT_LimitLO_Pin|GESUNDHE
 207              		.loc 1 467 3 view .LVU53
 208              		.loc 1 467 23 is_stmt 0 view .LVU54
 209 00c2 4CF60743 		movw	r3, #52231
 210 00c6 0593     		str	r3, [sp, #20]
 468:Src/main.c    ****                           |GESUNDHEIT_LimitRO_Pin|BLESSYOU_LimitLL_Pin|BLESSYOU_LimitLH_Pin;
 469:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 211              		.loc 1 469 3 is_stmt 1 view .LVU55
 212              		.loc 1 469 24 is_stmt 0 view .LVU56
 213 00c8 0694     		str	r4, [sp, #24]
 470:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 470 3 is_stmt 1 view .LVU57
 215              		.loc 1 470 24 is_stmt 0 view .LVU58
 216 00ca 0794     		str	r4, [sp, #28]
 471:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 217              		.loc 1 471 3 is_stmt 1 view .LVU59
 218 00cc 05A9     		add	r1, sp, #20
 219 00ce 3846     		mov	r0, r7
 220 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL6:
 472:Src/main.c    **** 
 473:Src/main.c    ****   /*Configure GPIO pins : R_DOOR_RV_Pin R_DOOR_FW_Pin R_GESUNDEXT_RV_Pin R_GESUNDEXT_FW_Pin */
 474:Src/main.c    ****   GPIO_InitStruct.Pin = R_DOOR_RV_Pin|R_DOOR_FW_Pin|R_GESUNDEXT_RV_Pin|R_GESUNDEXT_FW_Pin;
 222              		.loc 1 474 3 view .LVU60
 223              		.loc 1 474 23 is_stmt 0 view .LVU61
 224 00d4 43F23003 		movw	r3, #12336
 225 00d8 0593     		str	r3, [sp, #20]
 475:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 226              		.loc 1 475 3 is_stmt 1 view .LVU62
 227              		.loc 1 475 24 is_stmt 0 view .LVU63
 228 00da 0696     		str	r6, [sp, #24]
 476:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 229              		.loc 1 476 3 is_stmt 1 view .LVU64
 230              		.loc 1 476 24 is_stmt 0 view .LVU65
 231 00dc 0794     		str	r4, [sp, #28]
 477:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 232              		.loc 1 477 3 is_stmt 1 view .LVU66
 233              		.loc 1 477 25 is_stmt 0 view .LVU67
 234 00de 0894     		str	r4, [sp, #32]
 478:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 235              		.loc 1 478 3 is_stmt 1 view .LVU68
 236 00e0 05A9     		add	r1, sp, #20
 237 00e2 3846     		mov	r0, r7
 238 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 239              	.LVL7:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 14


 479:Src/main.c    **** 
 480:Src/main.c    ****   /*Configure GPIO pins : ACHOO_LimitLH_Pin ACHOO_LimitRL_Pin ACHOO_LimitRH_Pin */
 481:Src/main.c    ****   GPIO_InitStruct.Pin = ACHOO_LimitLH_Pin|ACHOO_LimitRL_Pin|ACHOO_LimitRH_Pin;
 240              		.loc 1 481 3 view .LVU69
 241              		.loc 1 481 23 is_stmt 0 view .LVU70
 242 00e8 4FF4E067 		mov	r7, #1792
 243 00ec 0597     		str	r7, [sp, #20]
 482:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 244              		.loc 1 482 3 is_stmt 1 view .LVU71
 245              		.loc 1 482 24 is_stmt 0 view .LVU72
 246 00ee 0694     		str	r4, [sp, #24]
 483:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 247              		.loc 1 483 3 is_stmt 1 view .LVU73
 248              		.loc 1 483 24 is_stmt 0 view .LVU74
 249 00f0 0794     		str	r4, [sp, #28]
 484:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 250              		.loc 1 484 3 is_stmt 1 view .LVU75
 251 00f2 05A9     		add	r1, sp, #20
 252 00f4 4FF09040 		mov	r0, #1207959552
 253 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 254              	.LVL8:
 485:Src/main.c    **** 
 486:Src/main.c    ****   /*Configure GPIO pins : R_GESUNDR_FW_Pin R_GESUNDL_RV_Pin R_GESUNDL_FW_Pin */
 487:Src/main.c    ****   GPIO_InitStruct.Pin = R_GESUNDR_FW_Pin|R_GESUNDL_RV_Pin|R_GESUNDL_FW_Pin;
 255              		.loc 1 487 3 view .LVU76
 256              		.loc 1 487 23 is_stmt 0 view .LVU77
 257 00fc 4FF4E053 		mov	r3, #7168
 258 0100 0593     		str	r3, [sp, #20]
 488:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 259              		.loc 1 488 3 is_stmt 1 view .LVU78
 260              		.loc 1 488 24 is_stmt 0 view .LVU79
 261 0102 0696     		str	r6, [sp, #24]
 489:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 262              		.loc 1 489 3 is_stmt 1 view .LVU80
 263              		.loc 1 489 24 is_stmt 0 view .LVU81
 264 0104 0794     		str	r4, [sp, #28]
 490:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 490 3 is_stmt 1 view .LVU82
 266              		.loc 1 490 25 is_stmt 0 view .LVU83
 267 0106 0894     		str	r4, [sp, #32]
 491:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 268              		.loc 1 491 3 is_stmt 1 view .LVU84
 269 0108 05A9     		add	r1, sp, #20
 270 010a 2846     		mov	r0, r5
 271 010c FFF7FEFF 		bl	HAL_GPIO_Init
 272              	.LVL9:
 492:Src/main.c    **** 
 493:Src/main.c    ****   /*Configure GPIO pins : INTAKE_LimitLH_Pin INTAKE_LimitRL_Pin INTAKE_LimitRH_Pin */
 494:Src/main.c    ****   GPIO_InitStruct.Pin = INTAKE_LimitLH_Pin|INTAKE_LimitRL_Pin|INTAKE_LimitRH_Pin;
 273              		.loc 1 494 3 view .LVU85
 274              		.loc 1 494 23 is_stmt 0 view .LVU86
 275 0110 0597     		str	r7, [sp, #20]
 495:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 276              		.loc 1 495 3 is_stmt 1 view .LVU87
 277              		.loc 1 495 24 is_stmt 0 view .LVU88
 278 0112 0694     		str	r4, [sp, #24]
 496:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 15


 279              		.loc 1 496 3 is_stmt 1 view .LVU89
 280              		.loc 1 496 24 is_stmt 0 view .LVU90
 281 0114 0794     		str	r4, [sp, #28]
 497:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 282              		.loc 1 497 3 is_stmt 1 view .LVU91
 283 0116 05A9     		add	r1, sp, #20
 284 0118 4FF09040 		mov	r0, #1207959552
 285 011c FFF7FEFF 		bl	HAL_GPIO_Init
 286              	.LVL10:
 498:Src/main.c    **** 
 499:Src/main.c    **** }
 287              		.loc 1 499 1 is_stmt 0 view .LVU92
 288 0120 0BB0     		add	sp, sp, #44
 289              	.LCFI2:
 290              		.cfi_def_cfa_offset 20
 291              		@ sp needed
 292 0122 F0BD     		pop	{r4, r5, r6, r7, pc}
 293              	.L4:
 294              		.align	2
 295              	.L3:
 296 0124 00100240 		.word	1073876992
 297 0128 00040048 		.word	1207960576
 298 012c 00080048 		.word	1207961600
 299 0130 00002110 		.word	270598144
 300              		.cfi_endproc
 301              	.LFE143:
 303              		.section	.text.StartDefaultTask,"ax",%progbits
 304              		.align	1
 305              		.global	StartDefaultTask
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	StartDefaultTask:
 311              	.LFB144:
 500:Src/main.c    **** 
 501:Src/main.c    **** /* USER CODE BEGIN 4 */
 502:Src/main.c    **** 
 503:Src/main.c    **** /* USER CODE END 4 */
 504:Src/main.c    **** 
 505:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 506:Src/main.c    **** /**
 507:Src/main.c    ****  * @brief  Function implementing the defaultTask thread.
 508:Src/main.c    ****  * @param  argument: Not used
 509:Src/main.c    ****  * @retval None
 510:Src/main.c    ****  */
 511:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 512:Src/main.c    **** void StartDefaultTask(void const * argument)
 513:Src/main.c    **** {
 312              		.loc 1 513 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ Volatile: function does not return.
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL11:
 318              		.loc 1 513 1 is_stmt 0 view .LVU94
 319 0000 08B5     		push	{r3, lr}
 320              	.LCFI3:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 16


 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
 324              	.LVL12:
 325              	.L6:
 514:Src/main.c    ****   /* USER CODE BEGIN 5 */
 515:Src/main.c    ****   /* Infinite loop */
 516:Src/main.c    ****   for (;;) {
 326              		.loc 1 516 3 is_stmt 1 discriminator 1 view .LVU95
 517:Src/main.c    ****     osDelay(1);
 327              		.loc 1 517 5 discriminator 1 view .LVU96
 328 0002 0120     		movs	r0, #1
 329 0004 FFF7FEFF 		bl	osDelay
 330              	.LVL13:
 516:Src/main.c    ****     osDelay(1);
 331              		.loc 1 516 9 discriminator 1 view .LVU97
 332 0008 FBE7     		b	.L6
 333              		.cfi_endproc
 334              	.LFE144:
 336              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 337              		.align	1
 338              		.global	HAL_TIM_PeriodElapsedCallback
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	HAL_TIM_PeriodElapsedCallback:
 344              	.LVL14:
 345              	.LFB145:
 518:Src/main.c    ****   }
 519:Src/main.c    ****   /* USER CODE END 5 */
 520:Src/main.c    **** }
 521:Src/main.c    **** 
 522:Src/main.c    **** /**
 523:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 524:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 525:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 526:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 527:Src/main.c    ****   * @param  htim : TIM handle
 528:Src/main.c    ****   * @retval None
 529:Src/main.c    ****   */
 530:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 531:Src/main.c    **** {
 346              		.loc 1 531 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		.loc 1 531 1 is_stmt 0 view .LVU99
 351 0000 08B5     		push	{r3, lr}
 352              	.LCFI4:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 532:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 533:Src/main.c    **** 
 534:Src/main.c    ****   /* USER CODE END Callback 0 */
 535:Src/main.c    ****   if (htim->Instance == TIM1) {
 356              		.loc 1 535 3 is_stmt 1 view .LVU100
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 17


 357              		.loc 1 535 11 is_stmt 0 view .LVU101
 358 0002 0268     		ldr	r2, [r0]
 359              		.loc 1 535 6 view .LVU102
 360 0004 034B     		ldr	r3, .L12
 361 0006 9A42     		cmp	r2, r3
 362 0008 00D0     		beq	.L11
 363              	.LVL15:
 364              	.L8:
 536:Src/main.c    ****     HAL_IncTick();
 537:Src/main.c    ****   }
 538:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 539:Src/main.c    **** 
 540:Src/main.c    ****   /* USER CODE END Callback 1 */
 541:Src/main.c    **** }
 365              		.loc 1 541 1 view .LVU103
 366 000a 08BD     		pop	{r3, pc}
 367              	.LVL16:
 368              	.L11:
 536:Src/main.c    ****     HAL_IncTick();
 369              		.loc 1 536 5 is_stmt 1 view .LVU104
 370 000c FFF7FEFF 		bl	HAL_IncTick
 371              	.LVL17:
 372              		.loc 1 541 1 is_stmt 0 view .LVU105
 373 0010 FBE7     		b	.L8
 374              	.L13:
 375 0012 00BF     		.align	2
 376              	.L12:
 377 0014 002C0140 		.word	1073818624
 378              		.cfi_endproc
 379              	.LFE145:
 381              		.section	.text.Error_Handler,"ax",%progbits
 382              		.align	1
 383              		.global	Error_Handler
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	Error_Handler:
 389              	.LFB146:
 542:Src/main.c    **** 
 543:Src/main.c    **** /**
 544:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 545:Src/main.c    ****   * @retval None
 546:Src/main.c    ****   */
 547:Src/main.c    **** void Error_Handler(void)
 548:Src/main.c    **** {
 390              		.loc 1 548 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 549:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 550:Src/main.c    ****   unsigned int err = hcan.ErrorCode;
 395              		.loc 1 550 3 view .LVU107
 396              		.loc 1 550 16 is_stmt 0 view .LVU108
 397 0000 014B     		ldr	r3, .L15
 398 0002 5B6A     		ldr	r3, [r3, #36]
 551:Src/main.c    ****   // for (;;);
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 18


 552:Src/main.c    **** 
 553:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 554:Src/main.c    **** }
 399              		.loc 1 554 1 view .LVU109
 400 0004 7047     		bx	lr
 401              	.L16:
 402 0006 00BF     		.align	2
 403              	.L15:
 404 0008 00000000 		.word	.LANCHOR0
 405              		.cfi_endproc
 406              	.LFE146:
 408              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	MX_USART2_UART_Init:
 415              	.LFB142:
 391:Src/main.c    **** 
 416              		.loc 1 391 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI5:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 400:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 425              		.loc 1 400 3 view .LVU111
 400:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 426              		.loc 1 400 19 is_stmt 0 view .LVU112
 427 0002 0B48     		ldr	r0, .L21
 428 0004 0B4B     		ldr	r3, .L21+4
 429 0006 0360     		str	r3, [r0]
 401:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 430              		.loc 1 401 3 is_stmt 1 view .LVU113
 401:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 431              		.loc 1 401 24 is_stmt 0 view .LVU114
 432 0008 4FF41643 		mov	r3, #38400
 433 000c 4360     		str	r3, [r0, #4]
 402:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 434              		.loc 1 402 3 is_stmt 1 view .LVU115
 402:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 435              		.loc 1 402 26 is_stmt 0 view .LVU116
 436 000e 0023     		movs	r3, #0
 437 0010 8360     		str	r3, [r0, #8]
 403:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 438              		.loc 1 403 3 is_stmt 1 view .LVU117
 403:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 439              		.loc 1 403 24 is_stmt 0 view .LVU118
 440 0012 C360     		str	r3, [r0, #12]
 404:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 441              		.loc 1 404 3 is_stmt 1 view .LVU119
 404:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 442              		.loc 1 404 22 is_stmt 0 view .LVU120
 443 0014 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 19


 405:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 444              		.loc 1 405 3 is_stmt 1 view .LVU121
 405:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 445              		.loc 1 405 20 is_stmt 0 view .LVU122
 446 0016 0C22     		movs	r2, #12
 447 0018 4261     		str	r2, [r0, #20]
 406:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 448              		.loc 1 406 3 is_stmt 1 view .LVU123
 406:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 449              		.loc 1 406 25 is_stmt 0 view .LVU124
 450 001a 8361     		str	r3, [r0, #24]
 407:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 451              		.loc 1 407 3 is_stmt 1 view .LVU125
 407:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 452              		.loc 1 407 28 is_stmt 0 view .LVU126
 453 001c C361     		str	r3, [r0, #28]
 408:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 454              		.loc 1 408 3 is_stmt 1 view .LVU127
 408:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 455              		.loc 1 408 30 is_stmt 0 view .LVU128
 456 001e 0362     		str	r3, [r0, #32]
 409:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 457              		.loc 1 409 3 is_stmt 1 view .LVU129
 409:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 458              		.loc 1 409 38 is_stmt 0 view .LVU130
 459 0020 4362     		str	r3, [r0, #36]
 410:Src/main.c    ****   {
 460              		.loc 1 410 3 is_stmt 1 view .LVU131
 410:Src/main.c    ****   {
 461              		.loc 1 410 7 is_stmt 0 view .LVU132
 462 0022 FFF7FEFF 		bl	HAL_UART_Init
 463              	.LVL18:
 410:Src/main.c    ****   {
 464              		.loc 1 410 6 view .LVU133
 465 0026 00B9     		cbnz	r0, .L20
 466              	.L17:
 418:Src/main.c    **** 
 467              		.loc 1 418 1 view .LVU134
 468 0028 08BD     		pop	{r3, pc}
 469              	.L20:
 412:Src/main.c    ****   }
 470              		.loc 1 412 5 is_stmt 1 view .LVU135
 471 002a FFF7FEFF 		bl	Error_Handler
 472              	.LVL19:
 418:Src/main.c    **** 
 473              		.loc 1 418 1 is_stmt 0 view .LVU136
 474 002e FBE7     		b	.L17
 475              	.L22:
 476              		.align	2
 477              	.L21:
 478 0030 00000000 		.word	.LANCHOR1
 479 0034 00440040 		.word	1073759232
 480              		.cfi_endproc
 481              	.LFE142:
 483              		.section	.text.MX_CAN_Init,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 20


 486              		.thumb
 487              		.thumb_func
 489              	MX_CAN_Init:
 490              	.LFB141:
 330:Src/main.c    **** 
 491              		.loc 1 330 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 40
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 00B5     		push	{lr}
 496              	.LCFI6:
 497              		.cfi_def_cfa_offset 4
 498              		.cfi_offset 14, -4
 499 0002 8BB0     		sub	sp, sp, #44
 500              	.LCFI7:
 501              		.cfi_def_cfa_offset 48
 339:Src/main.c    ****   hcan.Init.Prescaler = 3;
 502              		.loc 1 339 3 view .LVU138
 339:Src/main.c    ****   hcan.Init.Prescaler = 3;
 503              		.loc 1 339 17 is_stmt 0 view .LVU139
 504 0004 1F48     		ldr	r0, .L33
 505 0006 204B     		ldr	r3, .L33+4
 506 0008 0360     		str	r3, [r0]
 340:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 507              		.loc 1 340 3 is_stmt 1 view .LVU140
 340:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 508              		.loc 1 340 23 is_stmt 0 view .LVU141
 509 000a 0323     		movs	r3, #3
 510 000c 4360     		str	r3, [r0, #4]
 341:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 511              		.loc 1 341 3 is_stmt 1 view .LVU142
 341:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 512              		.loc 1 341 18 is_stmt 0 view .LVU143
 513 000e 0023     		movs	r3, #0
 514 0010 8360     		str	r3, [r0, #8]
 342:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 515              		.loc 1 342 3 is_stmt 1 view .LVU144
 342:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 516              		.loc 1 342 27 is_stmt 0 view .LVU145
 517 0012 C360     		str	r3, [r0, #12]
 343:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 518              		.loc 1 343 3 is_stmt 1 view .LVU146
 343:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 519              		.loc 1 343 22 is_stmt 0 view .LVU147
 520 0014 4FF41022 		mov	r2, #589824
 521 0018 0261     		str	r2, [r0, #16]
 344:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 522              		.loc 1 344 3 is_stmt 1 view .LVU148
 344:Src/main.c    ****   hcan.Init.TimeTriggeredMode = ENABLE;
 523              		.loc 1 344 22 is_stmt 0 view .LVU149
 524 001a 4361     		str	r3, [r0, #20]
 345:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 525              		.loc 1 345 3 is_stmt 1 view .LVU150
 345:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 526              		.loc 1 345 31 is_stmt 0 view .LVU151
 527 001c 0122     		movs	r2, #1
 528 001e 0276     		strb	r2, [r0, #24]
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 21


 346:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 529              		.loc 1 346 3 is_stmt 1 view .LVU152
 346:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 530              		.loc 1 346 24 is_stmt 0 view .LVU153
 531 0020 4376     		strb	r3, [r0, #25]
 347:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 532              		.loc 1 347 3 is_stmt 1 view .LVU154
 347:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 533              		.loc 1 347 24 is_stmt 0 view .LVU155
 534 0022 8376     		strb	r3, [r0, #26]
 348:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 535              		.loc 1 348 3 is_stmt 1 view .LVU156
 348:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = ENABLE;
 536              		.loc 1 348 32 is_stmt 0 view .LVU157
 537 0024 C376     		strb	r3, [r0, #27]
 349:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 538              		.loc 1 349 3 is_stmt 1 view .LVU158
 349:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 539              		.loc 1 349 31 is_stmt 0 view .LVU159
 540 0026 0277     		strb	r2, [r0, #28]
 350:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 541              		.loc 1 350 3 is_stmt 1 view .LVU160
 350:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 542              		.loc 1 350 34 is_stmt 0 view .LVU161
 543 0028 4377     		strb	r3, [r0, #29]
 351:Src/main.c    ****   {
 544              		.loc 1 351 3 is_stmt 1 view .LVU162
 351:Src/main.c    ****   {
 545              		.loc 1 351 7 is_stmt 0 view .LVU163
 546 002a FFF7FEFF 		bl	HAL_CAN_Init
 547              	.LVL20:
 351:Src/main.c    ****   {
 548              		.loc 1 351 6 view .LVU164
 549 002e E8B9     		cbnz	r0, .L29
 550              	.L24:
 356:Src/main.c    ****   sFilterConfig.FilterBank = 0;
 551              		.loc 1 356 3 is_stmt 1 view .LVU165
 357:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 552              		.loc 1 357 3 view .LVU166
 357:Src/main.c    ****   sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 553              		.loc 1 357 28 is_stmt 0 view .LVU167
 554 0030 0023     		movs	r3, #0
 555 0032 0593     		str	r3, [sp, #20]
 358:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 556              		.loc 1 358 3 is_stmt 1 view .LVU168
 358:Src/main.c    ****   sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 557              		.loc 1 358 28 is_stmt 0 view .LVU169
 558 0034 0693     		str	r3, [sp, #24]
 359:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 559              		.loc 1 359 3 is_stmt 1 view .LVU170
 359:Src/main.c    ****   sFilterConfig.FilterIdHigh = 0x0000;
 560              		.loc 1 359 29 is_stmt 0 view .LVU171
 561 0036 0122     		movs	r2, #1
 562 0038 0792     		str	r2, [sp, #28]
 360:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
 563              		.loc 1 360 3 is_stmt 1 view .LVU172
 360:Src/main.c    ****   sFilterConfig.FilterIdLow = 0x0000;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 22


 564              		.loc 1 360 30 is_stmt 0 view .LVU173
 565 003a 0093     		str	r3, [sp]
 361:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 566              		.loc 1 361 3 is_stmt 1 view .LVU174
 361:Src/main.c    ****   sFilterConfig.FilterMaskIdHigh = 0x0000;
 567              		.loc 1 361 29 is_stmt 0 view .LVU175
 568 003c 0193     		str	r3, [sp, #4]
 362:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 569              		.loc 1 362 3 is_stmt 1 view .LVU176
 362:Src/main.c    ****   sFilterConfig.FilterMaskIdLow = 0x0000;
 570              		.loc 1 362 34 is_stmt 0 view .LVU177
 571 003e 0293     		str	r3, [sp, #8]
 363:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 572              		.loc 1 363 3 is_stmt 1 view .LVU178
 363:Src/main.c    ****   sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 573              		.loc 1 363 33 is_stmt 0 view .LVU179
 574 0040 0393     		str	r3, [sp, #12]
 364:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 575              		.loc 1 364 3 is_stmt 1 view .LVU180
 364:Src/main.c    ****   sFilterConfig.FilterActivation = ENABLE;
 576              		.loc 1 364 38 is_stmt 0 view .LVU181
 577 0042 0493     		str	r3, [sp, #16]
 365:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 578              		.loc 1 365 3 is_stmt 1 view .LVU182
 365:Src/main.c    ****   sFilterConfig.SlaveStartFilterBank = 15;
 579              		.loc 1 365 34 is_stmt 0 view .LVU183
 580 0044 0892     		str	r2, [sp, #32]
 366:Src/main.c    **** 
 581              		.loc 1 366 3 is_stmt 1 view .LVU184
 366:Src/main.c    **** 
 582              		.loc 1 366 38 is_stmt 0 view .LVU185
 583 0046 0F23     		movs	r3, #15
 584 0048 0993     		str	r3, [sp, #36]
 368:Src/main.c    ****     Error_Handler();
 585              		.loc 1 368 3 is_stmt 1 view .LVU186
 368:Src/main.c    ****     Error_Handler();
 586              		.loc 1 368 7 is_stmt 0 view .LVU187
 587 004a 6946     		mov	r1, sp
 588 004c 0D48     		ldr	r0, .L33
 589 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 590              	.LVL21:
 368:Src/main.c    ****     Error_Handler();
 591              		.loc 1 368 6 view .LVU188
 592 0052 70B9     		cbnz	r0, .L30
 593              	.L25:
 371:Src/main.c    ****     /* Start Error */
 594              		.loc 1 371 3 is_stmt 1 view .LVU189
 371:Src/main.c    ****     /* Start Error */
 595              		.loc 1 371 7 is_stmt 0 view .LVU190
 596 0054 0B48     		ldr	r0, .L33
 597 0056 FFF7FEFF 		bl	HAL_CAN_Start
 598              	.LVL22:
 371:Src/main.c    ****     /* Start Error */
 599              		.loc 1 371 6 view .LVU191
 600 005a 68B9     		cbnz	r0, .L31
 601              	.L26:
 376:Src/main.c    ****       HAL_OK) {
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 23


 602              		.loc 1 376 3 is_stmt 1 view .LVU192
 376:Src/main.c    ****       HAL_OK) {
 603              		.loc 1 376 7 is_stmt 0 view .LVU193
 604 005c 0221     		movs	r1, #2
 605 005e 0948     		ldr	r0, .L33
 606 0060 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 607              	.LVL23:
 376:Src/main.c    ****       HAL_OK) {
 608              		.loc 1 376 6 view .LVU194
 609 0064 58B9     		cbnz	r0, .L32
 610              	.L23:
 383:Src/main.c    **** 
 611              		.loc 1 383 1 view .LVU195
 612 0066 0BB0     		add	sp, sp, #44
 613              	.LCFI8:
 614              		.cfi_remember_state
 615              		.cfi_def_cfa_offset 4
 616              		@ sp needed
 617 0068 5DF804FB 		ldr	pc, [sp], #4
 618              	.L29:
 619              	.LCFI9:
 620              		.cfi_restore_state
 353:Src/main.c    ****   }
 621              		.loc 1 353 5 is_stmt 1 view .LVU196
 622 006c FFF7FEFF 		bl	Error_Handler
 623              	.LVL24:
 624 0070 DEE7     		b	.L24
 625              	.L30:
 369:Src/main.c    ****   }
 626              		.loc 1 369 5 view .LVU197
 627 0072 FFF7FEFF 		bl	Error_Handler
 628              	.LVL25:
 629 0076 EDE7     		b	.L25
 630              	.L31:
 373:Src/main.c    ****   }
 631              		.loc 1 373 5 view .LVU198
 632 0078 FFF7FEFF 		bl	Error_Handler
 633              	.LVL26:
 634 007c EEE7     		b	.L26
 635              	.L32:
 378:Src/main.c    ****   }
 636              		.loc 1 378 5 view .LVU199
 637 007e FFF7FEFF 		bl	Error_Handler
 638              	.LVL27:
 383:Src/main.c    **** 
 639              		.loc 1 383 1 is_stmt 0 view .LVU200
 640 0082 F0E7     		b	.L23
 641              	.L34:
 642              		.align	2
 643              	.L33:
 644 0084 00000000 		.word	.LANCHOR0
 645 0088 00640040 		.word	1073767424
 646              		.cfi_endproc
 647              	.LFE141:
 649              		.section	.text.MX_ADC1_Init,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 24


 652              		.thumb
 653              		.thumb_func
 655              	MX_ADC1_Init:
 656              	.LFB140:
 267:Src/main.c    **** 
 657              		.loc 1 267 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 40
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 00B5     		push	{lr}
 662              	.LCFI10:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 14, -4
 665 0002 8BB0     		sub	sp, sp, #44
 666              	.LCFI11:
 667              		.cfi_def_cfa_offset 48
 273:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 668              		.loc 1 273 3 view .LVU202
 273:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 669              		.loc 1 273 24 is_stmt 0 view .LVU203
 670 0004 0023     		movs	r3, #0
 671 0006 0793     		str	r3, [sp, #28]
 672 0008 0893     		str	r3, [sp, #32]
 673 000a 0993     		str	r3, [sp, #36]
 274:Src/main.c    **** 
 674              		.loc 1 274 3 is_stmt 1 view .LVU204
 274:Src/main.c    **** 
 675              		.loc 1 274 26 is_stmt 0 view .LVU205
 676 000c 0193     		str	r3, [sp, #4]
 677 000e 0293     		str	r3, [sp, #8]
 678 0010 0393     		str	r3, [sp, #12]
 679 0012 0493     		str	r3, [sp, #16]
 680 0014 0593     		str	r3, [sp, #20]
 681 0016 0693     		str	r3, [sp, #24]
 281:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 682              		.loc 1 281 3 is_stmt 1 view .LVU206
 281:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 683              		.loc 1 281 18 is_stmt 0 view .LVU207
 684 0018 1B48     		ldr	r0, .L43
 685 001a 4FF0A042 		mov	r2, #1342177280
 686 001e 0260     		str	r2, [r0]
 282:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 687              		.loc 1 282 3 is_stmt 1 view .LVU208
 282:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 688              		.loc 1 282 29 is_stmt 0 view .LVU209
 689 0020 4360     		str	r3, [r0, #4]
 283:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 690              		.loc 1 283 3 is_stmt 1 view .LVU210
 283:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 691              		.loc 1 283 25 is_stmt 0 view .LVU211
 692 0022 8360     		str	r3, [r0, #8]
 284:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 693              		.loc 1 284 3 is_stmt 1 view .LVU212
 284:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 694              		.loc 1 284 27 is_stmt 0 view .LVU213
 695 0024 0361     		str	r3, [r0, #16]
 285:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 25


 696              		.loc 1 285 3 is_stmt 1 view .LVU214
 285:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 697              		.loc 1 285 33 is_stmt 0 view .LVU215
 698 0026 4376     		strb	r3, [r0, #25]
 286:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 699              		.loc 1 286 3 is_stmt 1 view .LVU216
 286:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 700              		.loc 1 286 36 is_stmt 0 view .LVU217
 701 0028 80F82030 		strb	r3, [r0, #32]
 287:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 702              		.loc 1 287 3 is_stmt 1 view .LVU218
 287:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 703              		.loc 1 287 35 is_stmt 0 view .LVU219
 704 002c C362     		str	r3, [r0, #44]
 288:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 705              		.loc 1 288 3 is_stmt 1 view .LVU220
 288:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 706              		.loc 1 288 31 is_stmt 0 view .LVU221
 707 002e 0122     		movs	r2, #1
 708 0030 8262     		str	r2, [r0, #40]
 289:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 709              		.loc 1 289 3 is_stmt 1 view .LVU222
 289:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 710              		.loc 1 289 24 is_stmt 0 view .LVU223
 711 0032 C360     		str	r3, [r0, #12]
 290:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 712              		.loc 1 290 3 is_stmt 1 view .LVU224
 290:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 713              		.loc 1 290 30 is_stmt 0 view .LVU225
 714 0034 C261     		str	r2, [r0, #28]
 291:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 715              		.loc 1 291 3 is_stmt 1 view .LVU226
 291:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 716              		.loc 1 291 36 is_stmt 0 view .LVU227
 717 0036 80F83030 		strb	r3, [r0, #48]
 292:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 718              		.loc 1 292 3 is_stmt 1 view .LVU228
 292:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 719              		.loc 1 292 27 is_stmt 0 view .LVU229
 720 003a 0422     		movs	r2, #4
 721 003c 4261     		str	r2, [r0, #20]
 293:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 722              		.loc 1 293 3 is_stmt 1 view .LVU230
 293:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 723              		.loc 1 293 31 is_stmt 0 view .LVU231
 724 003e 0376     		strb	r3, [r0, #24]
 294:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 725              		.loc 1 294 3 is_stmt 1 view .LVU232
 294:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 726              		.loc 1 294 22 is_stmt 0 view .LVU233
 727 0040 4363     		str	r3, [r0, #52]
 295:Src/main.c    ****   {
 728              		.loc 1 295 3 is_stmt 1 view .LVU234
 295:Src/main.c    ****   {
 729              		.loc 1 295 7 is_stmt 0 view .LVU235
 730 0042 FFF7FEFF 		bl	HAL_ADC_Init
 731              	.LVL28:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 26


 295:Src/main.c    ****   {
 732              		.loc 1 295 6 view .LVU236
 733 0046 B0B9     		cbnz	r0, .L40
 734              	.L36:
 301:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 735              		.loc 1 301 3 is_stmt 1 view .LVU237
 301:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 736              		.loc 1 301 18 is_stmt 0 view .LVU238
 737 0048 0023     		movs	r3, #0
 738 004a 0793     		str	r3, [sp, #28]
 302:Src/main.c    ****   {
 739              		.loc 1 302 3 is_stmt 1 view .LVU239
 302:Src/main.c    ****   {
 740              		.loc 1 302 7 is_stmt 0 view .LVU240
 741 004c 07A9     		add	r1, sp, #28
 742 004e 0E48     		ldr	r0, .L43
 743 0050 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 744              	.LVL29:
 302:Src/main.c    ****   {
 745              		.loc 1 302 6 view .LVU241
 746 0054 90B9     		cbnz	r0, .L41
 747              	.L37:
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 748              		.loc 1 308 3 is_stmt 1 view .LVU242
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 749              		.loc 1 308 19 is_stmt 0 view .LVU243
 750 0056 0123     		movs	r3, #1
 751 0058 0193     		str	r3, [sp, #4]
 309:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 752              		.loc 1 309 3 is_stmt 1 view .LVU244
 309:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 753              		.loc 1 309 16 is_stmt 0 view .LVU245
 754 005a 0293     		str	r3, [sp, #8]
 310:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 755              		.loc 1 310 3 is_stmt 1 view .LVU246
 310:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 756              		.loc 1 310 22 is_stmt 0 view .LVU247
 757 005c 0023     		movs	r3, #0
 758 005e 0493     		str	r3, [sp, #16]
 311:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 759              		.loc 1 311 3 is_stmt 1 view .LVU248
 311:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 760              		.loc 1 311 24 is_stmt 0 view .LVU249
 761 0060 0393     		str	r3, [sp, #12]
 312:Src/main.c    ****   sConfig.Offset = 0;
 762              		.loc 1 312 3 is_stmt 1 view .LVU250
 312:Src/main.c    ****   sConfig.Offset = 0;
 763              		.loc 1 312 24 is_stmt 0 view .LVU251
 764 0062 0593     		str	r3, [sp, #20]
 313:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 765              		.loc 1 313 3 is_stmt 1 view .LVU252
 313:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 766              		.loc 1 313 18 is_stmt 0 view .LVU253
 767 0064 0693     		str	r3, [sp, #24]
 314:Src/main.c    ****   {
 768              		.loc 1 314 3 is_stmt 1 view .LVU254
 314:Src/main.c    ****   {
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 27


 769              		.loc 1 314 7 is_stmt 0 view .LVU255
 770 0066 01A9     		add	r1, sp, #4
 771 0068 0748     		ldr	r0, .L43
 772 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 773              	.LVL30:
 314:Src/main.c    ****   {
 774              		.loc 1 314 6 view .LVU256
 775 006e 40B9     		cbnz	r0, .L42
 776              	.L35:
 322:Src/main.c    **** 
 777              		.loc 1 322 1 view .LVU257
 778 0070 0BB0     		add	sp, sp, #44
 779              	.LCFI12:
 780              		.cfi_remember_state
 781              		.cfi_def_cfa_offset 4
 782              		@ sp needed
 783 0072 5DF804FB 		ldr	pc, [sp], #4
 784              	.L40:
 785              	.LCFI13:
 786              		.cfi_restore_state
 297:Src/main.c    ****   }
 787              		.loc 1 297 5 is_stmt 1 view .LVU258
 788 0076 FFF7FEFF 		bl	Error_Handler
 789              	.LVL31:
 790 007a E5E7     		b	.L36
 791              	.L41:
 304:Src/main.c    ****   }
 792              		.loc 1 304 5 view .LVU259
 793 007c FFF7FEFF 		bl	Error_Handler
 794              	.LVL32:
 795 0080 E9E7     		b	.L37
 796              	.L42:
 316:Src/main.c    ****   }
 797              		.loc 1 316 5 view .LVU260
 798 0082 FFF7FEFF 		bl	Error_Handler
 799              	.LVL33:
 322:Src/main.c    **** 
 800              		.loc 1 322 1 is_stmt 0 view .LVU261
 801 0086 F3E7     		b	.L35
 802              	.L44:
 803              		.align	2
 804              	.L43:
 805 0088 00000000 		.word	.LANCHOR2
 806              		.cfi_endproc
 807              	.LFE140:
 809              		.section	.text.SystemClock_Config,"ax",%progbits
 810              		.align	1
 811              		.global	SystemClock_Config
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	SystemClock_Config:
 817              	.LFB139:
 221:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 818              		.loc 1 221 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 152
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 28


 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 00B5     		push	{lr}
 823              	.LCFI14:
 824              		.cfi_def_cfa_offset 4
 825              		.cfi_offset 14, -4
 826 0002 A7B0     		sub	sp, sp, #156
 827              	.LCFI15:
 828              		.cfi_def_cfa_offset 160
 222:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 829              		.loc 1 222 3 view .LVU263
 222:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 830              		.loc 1 222 22 is_stmt 0 view .LVU264
 831 0004 2822     		movs	r2, #40
 832 0006 0021     		movs	r1, #0
 833 0008 1CA8     		add	r0, sp, #112
 834 000a FFF7FEFF 		bl	memset
 835              	.LVL34:
 223:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 836              		.loc 1 223 3 is_stmt 1 view .LVU265
 223:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 837              		.loc 1 223 22 is_stmt 0 view .LVU266
 838 000e 0021     		movs	r1, #0
 839 0010 1791     		str	r1, [sp, #92]
 840 0012 1891     		str	r1, [sp, #96]
 841 0014 1991     		str	r1, [sp, #100]
 842 0016 1A91     		str	r1, [sp, #104]
 843 0018 1B91     		str	r1, [sp, #108]
 224:Src/main.c    **** 
 844              		.loc 1 224 3 is_stmt 1 view .LVU267
 224:Src/main.c    **** 
 845              		.loc 1 224 28 is_stmt 0 view .LVU268
 846 001a 5822     		movs	r2, #88
 847 001c 01A8     		add	r0, sp, #4
 848 001e FFF7FEFF 		bl	memset
 849              	.LVL35:
 228:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 850              		.loc 1 228 3 is_stmt 1 view .LVU269
 228:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 851              		.loc 1 228 36 is_stmt 0 view .LVU270
 852 0022 0223     		movs	r3, #2
 853 0024 1C93     		str	r3, [sp, #112]
 229:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 854              		.loc 1 229 3 is_stmt 1 view .LVU271
 229:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 855              		.loc 1 229 30 is_stmt 0 view .LVU272
 856 0026 0122     		movs	r2, #1
 857 0028 1F92     		str	r2, [sp, #124]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 858              		.loc 1 230 3 is_stmt 1 view .LVU273
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 859              		.loc 1 230 41 is_stmt 0 view .LVU274
 860 002a 1022     		movs	r2, #16
 861 002c 2092     		str	r2, [sp, #128]
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 862              		.loc 1 231 3 is_stmt 1 view .LVU275
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 863              		.loc 1 231 34 is_stmt 0 view .LVU276
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 29


 864 002e 2293     		str	r3, [sp, #136]
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 865              		.loc 1 232 3 is_stmt 1 view .LVU277
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 866              		.loc 1 232 35 is_stmt 0 view .LVU278
 867 0030 4FF40043 		mov	r3, #32768
 868 0034 2393     		str	r3, [sp, #140]
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 869              		.loc 1 233 3 is_stmt 1 view .LVU279
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 870              		.loc 1 233 32 is_stmt 0 view .LVU280
 871 0036 4FF4E013 		mov	r3, #1835008
 872 003a 2493     		str	r3, [sp, #144]
 234:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 873              		.loc 1 234 3 is_stmt 1 view .LVU281
 235:Src/main.c    ****   {
 874              		.loc 1 235 3 view .LVU282
 235:Src/main.c    ****   {
 875              		.loc 1 235 7 is_stmt 0 view .LVU283
 876 003c 1CA8     		add	r0, sp, #112
 877 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 878              	.LVL36:
 235:Src/main.c    ****   {
 879              		.loc 1 235 6 view .LVU284
 880 0042 D8B9     		cbnz	r0, .L50
 881              	.L46:
 241:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 882              		.loc 1 241 3 is_stmt 1 view .LVU285
 241:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 883              		.loc 1 241 31 is_stmt 0 view .LVU286
 884 0044 0F23     		movs	r3, #15
 885 0046 1793     		str	r3, [sp, #92]
 243:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 886              		.loc 1 243 3 is_stmt 1 view .LVU287
 243:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 887              		.loc 1 243 34 is_stmt 0 view .LVU288
 888 0048 0221     		movs	r1, #2
 889 004a 1891     		str	r1, [sp, #96]
 244:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 890              		.loc 1 244 3 is_stmt 1 view .LVU289
 244:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 891              		.loc 1 244 35 is_stmt 0 view .LVU290
 892 004c 0023     		movs	r3, #0
 893 004e 1993     		str	r3, [sp, #100]
 245:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 894              		.loc 1 245 3 is_stmt 1 view .LVU291
 245:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 895              		.loc 1 245 36 is_stmt 0 view .LVU292
 896 0050 4FF48062 		mov	r2, #1024
 897 0054 1A92     		str	r2, [sp, #104]
 246:Src/main.c    **** 
 898              		.loc 1 246 3 is_stmt 1 view .LVU293
 246:Src/main.c    **** 
 899              		.loc 1 246 36 is_stmt 0 view .LVU294
 900 0056 1B93     		str	r3, [sp, #108]
 248:Src/main.c    ****   {
 901              		.loc 1 248 3 is_stmt 1 view .LVU295
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 30


 248:Src/main.c    ****   {
 902              		.loc 1 248 7 is_stmt 0 view .LVU296
 903 0058 17A8     		add	r0, sp, #92
 904 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 905              	.LVL37:
 248:Src/main.c    ****   {
 906              		.loc 1 248 6 view .LVU297
 907 005e 80B9     		cbnz	r0, .L51
 908              	.L47:
 252:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 909              		.loc 1 252 3 is_stmt 1 view .LVU298
 252:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 910              		.loc 1 252 38 is_stmt 0 view .LVU299
 911 0060 8223     		movs	r3, #130
 912 0062 0193     		str	r3, [sp, #4]
 253:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 913              		.loc 1 253 3 is_stmt 1 view .LVU300
 253:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1;
 914              		.loc 1 253 38 is_stmt 0 view .LVU301
 915 0064 0023     		movs	r3, #0
 916 0066 0493     		str	r3, [sp, #16]
 254:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 917              		.loc 1 254 3 is_stmt 1 view .LVU302
 254:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 918              		.loc 1 254 37 is_stmt 0 view .LVU303
 919 0068 4FF48073 		mov	r3, #256
 920 006c 0B93     		str	r3, [sp, #44]
 255:Src/main.c    ****   {
 921              		.loc 1 255 3 is_stmt 1 view .LVU304
 255:Src/main.c    ****   {
 922              		.loc 1 255 7 is_stmt 0 view .LVU305
 923 006e 01A8     		add	r0, sp, #4
 924 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 925              	.LVL38:
 255:Src/main.c    ****   {
 926              		.loc 1 255 6 view .LVU306
 927 0074 40B9     		cbnz	r0, .L52
 928              	.L45:
 259:Src/main.c    **** 
 929              		.loc 1 259 1 view .LVU307
 930 0076 27B0     		add	sp, sp, #156
 931              	.LCFI16:
 932              		.cfi_remember_state
 933              		.cfi_def_cfa_offset 4
 934              		@ sp needed
 935 0078 5DF804FB 		ldr	pc, [sp], #4
 936              	.L50:
 937              	.LCFI17:
 938              		.cfi_restore_state
 237:Src/main.c    ****   }
 939              		.loc 1 237 5 is_stmt 1 view .LVU308
 940 007c FFF7FEFF 		bl	Error_Handler
 941              	.LVL39:
 942 0080 E0E7     		b	.L46
 943              	.L51:
 250:Src/main.c    ****   }
 944              		.loc 1 250 5 view .LVU309
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 31


 945 0082 FFF7FEFF 		bl	Error_Handler
 946              	.LVL40:
 947 0086 EBE7     		b	.L47
 948              	.L52:
 257:Src/main.c    ****   }
 949              		.loc 1 257 5 view .LVU310
 950 0088 FFF7FEFF 		bl	Error_Handler
 951              	.LVL41:
 259:Src/main.c    **** 
 952              		.loc 1 259 1 is_stmt 0 view .LVU311
 953 008c F3E7     		b	.L45
 954              		.cfi_endproc
 955              	.LFE139:
 957              		.section	.text.main,"ax",%progbits
 958              		.align	1
 959              		.global	main
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 964              	main:
 965              	.LFB138:
 113:Src/main.c    ****   /* USER CODE BEGIN 1 */
 966              		.loc 1 113 1 is_stmt 1 view -0
 967              		.cfi_startproc
 968              		@ Volatile: function does not return.
 969              		@ args = 0, pretend = 0, frame = 232
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 00B5     		push	{lr}
 972              	.LCFI18:
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 14, -4
 975 0002 BBB0     		sub	sp, sp, #236
 976              	.LCFI19:
 977              		.cfi_def_cfa_offset 240
 121:Src/main.c    **** 
 978              		.loc 1 121 3 view .LVU313
 979 0004 FFF7FEFF 		bl	HAL_Init
 980              	.LVL42:
 128:Src/main.c    **** 
 981              		.loc 1 128 3 view .LVU314
 982 0008 FFF7FEFF 		bl	SystemClock_Config
 983              	.LVL43:
 135:Src/main.c    ****   MX_USART2_UART_Init();
 984              		.loc 1 135 3 view .LVU315
 985 000c FFF7FEFF 		bl	MX_GPIO_Init
 986              	.LVL44:
 136:Src/main.c    ****   MX_CAN_Init();
 987              		.loc 1 136 3 view .LVU316
 988 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 989              	.LVL45:
 137:Src/main.c    ****   MX_ADC1_Init();
 990              		.loc 1 137 3 view .LVU317
 991 0014 FFF7FEFF 		bl	MX_CAN_Init
 992              	.LVL46:
 138:Src/main.c    ****   /* USER CODE BEGIN 2 */
 993              		.loc 1 138 3 view .LVU318
 994 0018 FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 32


 995              	.LVL47:
 140:Src/main.c    ****   /* USER CODE END 2 */
 996              		.loc 1 140 3 view .LVU319
 997 001c FFF7FEFF 		bl	vesc_system_init
 998              	.LVL48:
 145:Src/main.c    ****   canTxMutexHandle = osMutexCreate(osMutex(canTxMutex));
 999              		.loc 1 145 3 view .LVU320
 1000 0020 0025     		movs	r5, #0
 1001 0022 3895     		str	r5, [sp, #224]
 1002 0024 4F4B     		ldr	r3, .L56
 1003 0026 3993     		str	r3, [sp, #228]
 146:Src/main.c    **** 
 1004              		.loc 1 146 3 view .LVU321
 146:Src/main.c    **** 
 1005              		.loc 1 146 22 is_stmt 0 view .LVU322
 1006 0028 38A8     		add	r0, sp, #224
 1007 002a FFF7FEFF 		bl	osMutexCreate
 1008              	.LVL49:
 146:Src/main.c    **** 
 1009              		.loc 1 146 20 view .LVU323
 1010 002e 4E4B     		ldr	r3, .L56+4
 1011 0030 1860     		str	r0, [r3]
 161:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 1012              		.loc 1 161 3 is_stmt 1 view .LVU324
 161:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 1013              		.loc 1 161 17 is_stmt 0 view .LVU325
 1014 0032 2A46     		mov	r2, r5
 1015 0034 1021     		movs	r1, #16
 1016 0036 0820     		movs	r0, #8
 1017 0038 FFF7FEFF 		bl	xQueueGenericCreate
 1018              	.LVL50:
 161:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 1019              		.loc 1 161 15 view .LVU326
 1020 003c 4B4B     		ldr	r3, .L56+8
 1021 003e 1860     		str	r0, [r3]
 166:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1022              		.loc 1 166 3 is_stmt 1 view .LVU327
 1023 0040 4B4C     		ldr	r4, .L56+12
 1024 0042 0DF1C40C 		add	ip, sp, #196
 1025 0046 A646     		mov	lr, r4
 1026 0048 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1027 004c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1028 0050 9EE80700 		ldm	lr, {r0, r1, r2}
 1029 0054 8CE80700 		stm	ip, {r0, r1, r2}
 167:Src/main.c    **** 
 1030              		.loc 1 167 3 view .LVU328
 167:Src/main.c    **** 
 1031              		.loc 1 167 23 is_stmt 0 view .LVU329
 1032 0058 2946     		mov	r1, r5
 1033 005a 31A8     		add	r0, sp, #196
 1034 005c FFF7FEFF 		bl	osThreadCreate
 1035              	.LVL51:
 167:Src/main.c    **** 
 1036              		.loc 1 167 21 view .LVU330
 1037 0060 444B     		ldr	r3, .L56+16
 1038 0062 1860     		str	r0, [r3]
 170:Src/main.c    ****   achooControllerHandle = osThreadCreate(osThread(achooController), NULL);
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 33


 1039              		.loc 1 170 3 is_stmt 1 view .LVU331
 1040 0064 0DF1A80C 		add	ip, sp, #168
 1041 0068 04F11C0E 		add	lr, r4, #28
 1042 006c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1043 0070 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1044 0074 9EE80700 		ldm	lr, {r0, r1, r2}
 1045 0078 8CE80700 		stm	ip, {r0, r1, r2}
 171:Src/main.c    **** 
 1046              		.loc 1 171 3 view .LVU332
 171:Src/main.c    **** 
 1047              		.loc 1 171 27 is_stmt 0 view .LVU333
 1048 007c 2946     		mov	r1, r5
 1049 007e 2AA8     		add	r0, sp, #168
 1050 0080 FFF7FEFF 		bl	osThreadCreate
 1051              	.LVL52:
 171:Src/main.c    **** 
 1052              		.loc 1 171 25 view .LVU334
 1053 0084 3C4B     		ldr	r3, .L56+20
 1054 0086 1860     		str	r0, [r3]
 174:Src/main.c    ****   intakeControllerHandle = isThreadCreate(osThread(intakeController), NULL);
 1055              		.loc 1 174 3 is_stmt 1 view .LVU335
 1056 0088 0DF18C0C 		add	ip, sp, #140
 1057 008c 04F1380E 		add	lr, r4, #56
 1058 0090 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1059 0094 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1060 0098 9EE80700 		ldm	lr, {r0, r1, r2}
 1061 009c 8CE80700 		stm	ip, {r0, r1, r2}
 175:Src/main.c    **** 
 1062              		.loc 1 175 3 view .LVU336
 175:Src/main.c    **** 
 1063              		.loc 1 175 28 is_stmt 0 view .LVU337
 1064 00a0 2946     		mov	r1, r5
 1065 00a2 23A8     		add	r0, sp, #140
 1066 00a4 FFF7FEFF 		bl	isThreadCreate
 1067              	.LVL53:
 175:Src/main.c    **** 
 1068              		.loc 1 175 26 view .LVU338
 1069 00a8 344B     		ldr	r3, .L56+24
 1070 00aa 1860     		str	r0, [r3]
 178:Src/main.c    ****   excavateControllerHandle = isThreadCreate(osThread(excavateController), NULL);
 1071              		.loc 1 178 3 is_stmt 1 view .LVU339
 1072 00ac 0DF1700C 		add	ip, sp, #112
 1073 00b0 04F1540E 		add	lr, r4, #84
 1074 00b4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1075 00b8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1076 00bc 9EE80700 		ldm	lr, {r0, r1, r2}
 1077 00c0 8CE80700 		stm	ip, {r0, r1, r2}
 179:Src/main.c    **** 
 1078              		.loc 1 179 3 view .LVU340
 179:Src/main.c    **** 
 1079              		.loc 1 179 30 is_stmt 0 view .LVU341
 1080 00c4 2946     		mov	r1, r5
 1081 00c6 1CA8     		add	r0, sp, #112
 1082 00c8 FFF7FEFF 		bl	isThreadCreate
 1083              	.LVL54:
 179:Src/main.c    **** 
 1084              		.loc 1 179 28 view .LVU342
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 34


 1085 00cc 2C4B     		ldr	r3, .L56+28
 1086 00ce 1860     		str	r0, [r3]
 182:Src/main.c    ****   canRxDispatchHandle = osThreadCreate(osThread(canRxDispatch), NULL);
 1087              		.loc 1 182 3 is_stmt 1 view .LVU343
 1088 00d0 0DF1540C 		add	ip, sp, #84
 1089 00d4 04F1700E 		add	lr, r4, #112
 1090 00d8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1091 00dc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1092 00e0 9EE80700 		ldm	lr, {r0, r1, r2}
 1093 00e4 8CE80700 		stm	ip, {r0, r1, r2}
 183:Src/main.c    **** 
 1094              		.loc 1 183 3 view .LVU344
 183:Src/main.c    **** 
 1095              		.loc 1 183 25 is_stmt 0 view .LVU345
 1096 00e8 2946     		mov	r1, r5
 1097 00ea 15A8     		add	r0, sp, #84
 1098 00ec FFF7FEFF 		bl	osThreadCreate
 1099              	.LVL55:
 183:Src/main.c    **** 
 1100              		.loc 1 183 23 view .LVU346
 1101 00f0 244B     		ldr	r3, .L56+32
 1102 00f2 1860     		str	r0, [r3]
 186:Src/main.c    ****   gesundheitTaskHandle = osThreadCreate(osThread(gesundheitTask), NULL);
 1103              		.loc 1 186 3 is_stmt 1 view .LVU347
 1104 00f4 0DF1380C 		add	ip, sp, #56
 1105 00f8 04F18C0E 		add	lr, r4, #140
 1106 00fc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1107 0100 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1108 0104 9EE80700 		ldm	lr, {r0, r1, r2}
 1109 0108 8CE80700 		stm	ip, {r0, r1, r2}
 187:Src/main.c    **** 
 1110              		.loc 1 187 3 view .LVU348
 187:Src/main.c    **** 
 1111              		.loc 1 187 26 is_stmt 0 view .LVU349
 1112 010c 2946     		mov	r1, r5
 1113 010e 0EA8     		add	r0, sp, #56
 1114 0110 FFF7FEFF 		bl	osThreadCreate
 1115              	.LVL56:
 187:Src/main.c    **** 
 1116              		.loc 1 187 24 view .LVU350
 1117 0114 1C4B     		ldr	r3, .L56+36
 1118 0116 1860     		str	r0, [r3]
 190:Src/main.c    ****   sneezeControlHandle = osThreadCreate(osThread(sneezeControl), NULL);
 1119              		.loc 1 190 3 is_stmt 1 view .LVU351
 1120 0118 0DF11C0C 		add	ip, sp, #28
 1121 011c 04F1A80E 		add	lr, r4, #168
 1122 0120 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1123 0124 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1124 0128 9EE80700 		ldm	lr, {r0, r1, r2}
 1125 012c 8CE80700 		stm	ip, {r0, r1, r2}
 191:Src/main.c    **** 
 1126              		.loc 1 191 3 view .LVU352
 191:Src/main.c    **** 
 1127              		.loc 1 191 25 is_stmt 0 view .LVU353
 1128 0130 2946     		mov	r1, r5
 1129 0132 07A8     		add	r0, sp, #28
 1130 0134 FFF7FEFF 		bl	osThreadCreate
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 35


 1131              	.LVL57:
 191:Src/main.c    **** 
 1132              		.loc 1 191 23 view .LVU354
 1133 0138 144B     		ldr	r3, .L56+40
 1134 013a 1860     		str	r0, [r3]
 194:Src/main.c    ****   drivetrainTaskHandle = osThreadCreate(osThread(drivetrainTask), NULL);
 1135              		.loc 1 194 3 is_stmt 1 view .LVU355
 1136 013c EE46     		mov	lr, sp
 1137 013e 04F1C40C 		add	ip, r4, #196
 1138 0142 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1139 0146 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1140 014a 9CE80700 		ldm	ip, {r0, r1, r2}
 1141 014e 8EE80700 		stm	lr, {r0, r1, r2}
 195:Src/main.c    **** 
 1142              		.loc 1 195 3 view .LVU356
 195:Src/main.c    **** 
 1143              		.loc 1 195 26 is_stmt 0 view .LVU357
 1144 0152 2946     		mov	r1, r5
 1145 0154 6846     		mov	r0, sp
 1146 0156 FFF7FEFF 		bl	osThreadCreate
 1147              	.LVL58:
 195:Src/main.c    **** 
 1148              		.loc 1 195 24 view .LVU358
 1149 015a 0D4B     		ldr	r3, .L56+44
 1150 015c 1860     		str	r0, [r3]
 202:Src/main.c    **** 
 1151              		.loc 1 202 3 is_stmt 1 view .LVU359
 1152 015e FFF7FEFF 		bl	osKernelStart
 1153              	.LVL59:
 1154              	.L54:
 208:Src/main.c    ****     /* USER CODE END WHILE */
 1155              		.loc 1 208 3 discriminator 1 view .LVU360
 212:Src/main.c    ****   /* USER CODE END 3 */
 1156              		.loc 1 212 3 discriminator 1 view .LVU361
 208:Src/main.c    ****     /* USER CODE END WHILE */
 1157              		.loc 1 208 9 discriminator 1 view .LVU362
 1158 0162 FEE7     		b	.L54
 1159              	.L57:
 1160              		.align	2
 1161              	.L56:
 1162 0164 00000000 		.word	.LANCHOR3
 1163 0168 00000000 		.word	.LANCHOR4
 1164 016c 00000000 		.word	.LANCHOR5
 1165 0170 00000000 		.word	.LANCHOR6
 1166 0174 00000000 		.word	.LANCHOR7
 1167 0178 00000000 		.word	.LANCHOR8
 1168 017c 00000000 		.word	.LANCHOR9
 1169 0180 00000000 		.word	.LANCHOR10
 1170 0184 00000000 		.word	.LANCHOR11
 1171 0188 00000000 		.word	.LANCHOR12
 1172 018c 00000000 		.word	.LANCHOR13
 1173 0190 00000000 		.word	.LANCHOR14
 1174              		.cfi_endproc
 1175              	.LFE138:
 1177              		.global	xCanRxQueue
 1178              		.global	canTxMutexControlBlock
 1179              		.global	canTxMutexHandle
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 36


 1180              		.global	drivetrainTaskControlBlock
 1181              		.global	drivetrainTaskBuffer
 1182              		.global	drivetrainTaskHandle
 1183              		.global	sneezeControlControlBlock
 1184              		.global	sneezeControlBuffer
 1185              		.global	sneezeControlHandle
 1186              		.global	gesundheitTaskControlBlock
 1187              		.global	gesundheitTaskBuffer
 1188              		.global	gesundheitTaskHandle
 1189              		.global	canRxDispatchControlBlock
 1190              		.global	canRxDispatchBuffer
 1191              		.global	canRxDispatchHandle
 1192              		.global	excavateControllerControlBlock
 1193              		.global	excavateControllerBuffer
 1194              		.global	excavateControllerHandle
 1195              		.global	intakeControllerControlBlock
 1196              		.global	intakeControllerBuffer
 1197              		.global	intakeControllerHandle
 1198              		.global	achooControllerControlBlock
 1199              		.global	achooControllerBuffer
 1200              		.global	achooControllerHandle
 1201              		.global	defaultTaskControlBlock
 1202              		.global	defaultTaskBuffer
 1203              		.global	defaultTaskHandle
 1204              		.global	huart2
 1205              		.global	hcan
 1206              		.global	hadc1
 1207              		.section	.rodata
 1208              		.align	2
 1209              		.set	.LANCHOR6,. + 0
 1210              	.LC16:
 1211 0000 00000000 		.word	.LC0
 1212 0004 00000000 		.word	StartDefaultTask
 1213 0008 0000     		.short	0
 1214 000a 0000     		.space	2
 1215 000c 00000000 		.word	0
 1216 0010 80000000 		.word	128
 1217 0014 00000000 		.word	defaultTaskBuffer
 1218 0018 00000000 		.word	defaultTaskControlBlock
 1219              	.LC17:
 1220 001c 0C000000 		.word	.LC2
 1221 0020 00000000 		.word	achooControllerFunc
 1222 0024 0000     		.short	0
 1223 0026 0000     		.space	2
 1224 0028 00000000 		.word	0
 1225 002c 80000000 		.word	128
 1226 0030 00000000 		.word	achooControllerBuffer
 1227 0034 00000000 		.word	achooControllerControlBlock
 1228              	.LC18:
 1229 0038 1C000000 		.word	.LC4
 1230 003c 00000000 		.word	intakeControllerFunc
 1231 0040 0000     		.short	0
 1232 0042 0000     		.space	2
 1233 0044 00000000 		.word	0
 1234 0048 80000000 		.word	128
 1235 004c 00000000 		.word	intakeControllerBuffer
 1236 0050 00000000 		.word	intakeControllerControlBlock
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 37


 1237              	.LC19:
 1238 0054 30000000 		.word	.LC6
 1239 0058 00000000 		.word	excavateControllerFunc
 1240 005c 0000     		.short	0
 1241 005e 0000     		.space	2
 1242 0060 00000000 		.word	0
 1243 0064 80000000 		.word	128
 1244 0068 00000000 		.word	intakeControllerBuffer
 1245 006c 00000000 		.word	intakeControllerControlBlock
 1246              	.LC20:
 1247 0070 44000000 		.word	.LC8
 1248 0074 00000000 		.word	canRxDispatchTask
 1249 0078 0100     		.short	1
 1250 007a 0000     		.space	2
 1251 007c 00000000 		.word	0
 1252 0080 80000000 		.word	128
 1253 0084 00000000 		.word	canRxDispatchBuffer
 1254 0088 00000000 		.word	canRxDispatchControlBlock
 1255              	.LC21:
 1256 008c 54000000 		.word	.LC10
 1257 0090 00000000 		.word	gesundheitControllerFunc
 1258 0094 0000     		.short	0
 1259 0096 0000     		.space	2
 1260 0098 00000000 		.word	0
 1261 009c 80000000 		.word	128
 1262 00a0 00000000 		.word	gesundheitTaskBuffer
 1263 00a4 00000000 		.word	gesundheitTaskControlBlock
 1264              	.LC22:
 1265 00a8 64000000 		.word	.LC12
 1266 00ac 00000000 		.word	sneezeControllerFunc
 1267 00b0 0000     		.short	0
 1268 00b2 0000     		.space	2
 1269 00b4 00000000 		.word	0
 1270 00b8 80000000 		.word	128
 1271 00bc 00000000 		.word	sneezeControlBuffer
 1272 00c0 00000000 		.word	sneezeControlControlBlock
 1273              	.LC23:
 1274 00c4 74000000 		.word	.LC14
 1275 00c8 00000000 		.word	drivetrain_loop
 1276 00cc 0000     		.short	0
 1277 00ce 0000     		.space	2
 1278 00d0 00000000 		.word	0
 1279 00d4 80000000 		.word	128
 1280 00d8 00000000 		.word	drivetrainTaskBuffer
 1281 00dc 00000000 		.word	drivetrainTaskControlBlock
 1282              		.section	.bss.achooControllerBuffer,"aw",%nobits
 1283              		.align	2
 1286              	achooControllerBuffer:
 1287 0000 00000000 		.space	512
 1287      00000000 
 1287      00000000 
 1287      00000000 
 1287      00000000 
 1288              		.section	.bss.achooControllerControlBlock,"aw",%nobits
 1289              		.align	2
 1292              	achooControllerControlBlock:
 1293 0000 00000000 		.space	84
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 38


 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294              		.section	.bss.achooControllerHandle,"aw",%nobits
 1295              		.align	2
 1296              		.set	.LANCHOR8,. + 0
 1299              	achooControllerHandle:
 1300 0000 00000000 		.space	4
 1301              		.section	.bss.canRxDispatchBuffer,"aw",%nobits
 1302              		.align	2
 1305              	canRxDispatchBuffer:
 1306 0000 00000000 		.space	512
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1307              		.section	.bss.canRxDispatchControlBlock,"aw",%nobits
 1308              		.align	2
 1311              	canRxDispatchControlBlock:
 1312 0000 00000000 		.space	84
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1313              		.section	.bss.canRxDispatchHandle,"aw",%nobits
 1314              		.align	2
 1315              		.set	.LANCHOR11,. + 0
 1318              	canRxDispatchHandle:
 1319 0000 00000000 		.space	4
 1320              		.section	.bss.canTxMutexControlBlock,"aw",%nobits
 1321              		.align	2
 1322              		.set	.LANCHOR3,. + 0
 1325              	canTxMutexControlBlock:
 1326 0000 00000000 		.space	72
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1327              		.section	.bss.canTxMutexHandle,"aw",%nobits
 1328              		.align	2
 1329              		.set	.LANCHOR4,. + 0
 1332              	canTxMutexHandle:
 1333 0000 00000000 		.space	4
 1334              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 1335              		.align	2
 1338              	defaultTaskBuffer:
 1339 0000 00000000 		.space	512
 1339      00000000 
 1339      00000000 
 1339      00000000 
 1339      00000000 
 1340              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 1341              		.align	2
 1344              	defaultTaskControlBlock:
 1345 0000 00000000 		.space	84
 1345      00000000 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 39


 1345      00000000 
 1345      00000000 
 1345      00000000 
 1346              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1347              		.align	2
 1348              		.set	.LANCHOR7,. + 0
 1351              	defaultTaskHandle:
 1352 0000 00000000 		.space	4
 1353              		.section	.bss.drivetrainTaskBuffer,"aw",%nobits
 1354              		.align	2
 1357              	drivetrainTaskBuffer:
 1358 0000 00000000 		.space	512
 1358      00000000 
 1358      00000000 
 1358      00000000 
 1358      00000000 
 1359              		.section	.bss.drivetrainTaskControlBlock,"aw",%nobits
 1360              		.align	2
 1363              	drivetrainTaskControlBlock:
 1364 0000 00000000 		.space	84
 1364      00000000 
 1364      00000000 
 1364      00000000 
 1364      00000000 
 1365              		.section	.bss.drivetrainTaskHandle,"aw",%nobits
 1366              		.align	2
 1367              		.set	.LANCHOR14,. + 0
 1370              	drivetrainTaskHandle:
 1371 0000 00000000 		.space	4
 1372              		.section	.bss.excavateControllerBuffer,"aw",%nobits
 1373              		.align	2
 1376              	excavateControllerBuffer:
 1377 0000 00000000 		.space	512
 1377      00000000 
 1377      00000000 
 1377      00000000 
 1377      00000000 
 1378              		.section	.bss.excavateControllerControlBlock,"aw",%nobits
 1379              		.align	2
 1382              	excavateControllerControlBlock:
 1383 0000 00000000 		.space	84
 1383      00000000 
 1383      00000000 
 1383      00000000 
 1383      00000000 
 1384              		.section	.bss.excavateControllerHandle,"aw",%nobits
 1385              		.align	2
 1386              		.set	.LANCHOR10,. + 0
 1389              	excavateControllerHandle:
 1390 0000 00000000 		.space	4
 1391              		.section	.bss.gesundheitTaskBuffer,"aw",%nobits
 1392              		.align	2
 1395              	gesundheitTaskBuffer:
 1396 0000 00000000 		.space	512
 1396      00000000 
 1396      00000000 
 1396      00000000 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 40


 1396      00000000 
 1397              		.section	.bss.gesundheitTaskControlBlock,"aw",%nobits
 1398              		.align	2
 1401              	gesundheitTaskControlBlock:
 1402 0000 00000000 		.space	84
 1402      00000000 
 1402      00000000 
 1402      00000000 
 1402      00000000 
 1403              		.section	.bss.gesundheitTaskHandle,"aw",%nobits
 1404              		.align	2
 1405              		.set	.LANCHOR12,. + 0
 1408              	gesundheitTaskHandle:
 1409 0000 00000000 		.space	4
 1410              		.section	.bss.hadc1,"aw",%nobits
 1411              		.align	2
 1412              		.set	.LANCHOR2,. + 0
 1415              	hadc1:
 1416 0000 00000000 		.space	80
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1417              		.section	.bss.hcan,"aw",%nobits
 1418              		.align	2
 1419              		.set	.LANCHOR0,. + 0
 1422              	hcan:
 1423 0000 00000000 		.space	40
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1424              		.section	.bss.huart2,"aw",%nobits
 1425              		.align	2
 1426              		.set	.LANCHOR1,. + 0
 1429              	huart2:
 1430 0000 00000000 		.space	128
 1430      00000000 
 1430      00000000 
 1430      00000000 
 1430      00000000 
 1431              		.section	.bss.intakeControllerBuffer,"aw",%nobits
 1432              		.align	2
 1435              	intakeControllerBuffer:
 1436 0000 00000000 		.space	512
 1436      00000000 
 1436      00000000 
 1436      00000000 
 1436      00000000 
 1437              		.section	.bss.intakeControllerControlBlock,"aw",%nobits
 1438              		.align	2
 1441              	intakeControllerControlBlock:
 1442 0000 00000000 		.space	84
 1442      00000000 
 1442      00000000 
 1442      00000000 
 1442      00000000 
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 41


 1443              		.section	.bss.intakeControllerHandle,"aw",%nobits
 1444              		.align	2
 1445              		.set	.LANCHOR9,. + 0
 1448              	intakeControllerHandle:
 1449 0000 00000000 		.space	4
 1450              		.section	.bss.sneezeControlBuffer,"aw",%nobits
 1451              		.align	2
 1454              	sneezeControlBuffer:
 1455 0000 00000000 		.space	512
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1456              		.section	.bss.sneezeControlControlBlock,"aw",%nobits
 1457              		.align	2
 1460              	sneezeControlControlBlock:
 1461 0000 00000000 		.space	84
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.section	.bss.sneezeControlHandle,"aw",%nobits
 1463              		.align	2
 1464              		.set	.LANCHOR13,. + 0
 1467              	sneezeControlHandle:
 1468 0000 00000000 		.space	4
 1469              		.section	.bss.xCanRxQueue,"aw",%nobits
 1470              		.align	2
 1471              		.set	.LANCHOR5,. + 0
 1474              	xCanRxQueue:
 1475 0000 00000000 		.space	4
 1476              		.text
 1477              	.Letext0:
 1478              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1479              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1480              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1481              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1482              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1483              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1484              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1485              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1486              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1487              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1488              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1489              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1490              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1491              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1492              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1493              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1494              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1495              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1496              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1497              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1498              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1499              		.file 23 "Inc/VESC.h"
 1500              		.file 24 "<built-in>"
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:17     .rodata.str1.4:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:45     .text.MX_GPIO_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:50     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:296    .text.MX_GPIO_Init:00000124 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:304    .text.StartDefaultTask:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:310    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:337    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:343    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:377    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:382    .text.Error_Handler:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:388    .text.Error_Handler:00000000 Error_Handler
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:404    .text.Error_Handler:00000008 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:409    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:414    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:478    .text.MX_USART2_UART_Init:00000030 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:484    .text.MX_CAN_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:489    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:644    .text.MX_CAN_Init:00000084 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:650    .text.MX_ADC1_Init:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:655    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:805    .text.MX_ADC1_Init:00000088 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:810    .text.SystemClock_Config:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:816    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:958    .text.main:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:964    .text.main:00000000 main
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1162   .text.main:00000164 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1474   .bss.xCanRxQueue:00000000 xCanRxQueue
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1325   .bss.canTxMutexControlBlock:00000000 canTxMutexControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1332   .bss.canTxMutexHandle:00000000 canTxMutexHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1363   .bss.drivetrainTaskControlBlock:00000000 drivetrainTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1357   .bss.drivetrainTaskBuffer:00000000 drivetrainTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1370   .bss.drivetrainTaskHandle:00000000 drivetrainTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1460   .bss.sneezeControlControlBlock:00000000 sneezeControlControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1454   .bss.sneezeControlBuffer:00000000 sneezeControlBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1467   .bss.sneezeControlHandle:00000000 sneezeControlHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1401   .bss.gesundheitTaskControlBlock:00000000 gesundheitTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1395   .bss.gesundheitTaskBuffer:00000000 gesundheitTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1408   .bss.gesundheitTaskHandle:00000000 gesundheitTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1311   .bss.canRxDispatchControlBlock:00000000 canRxDispatchControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1305   .bss.canRxDispatchBuffer:00000000 canRxDispatchBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1318   .bss.canRxDispatchHandle:00000000 canRxDispatchHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1382   .bss.excavateControllerControlBlock:00000000 excavateControllerControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1376   .bss.excavateControllerBuffer:00000000 excavateControllerBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1389   .bss.excavateControllerHandle:00000000 excavateControllerHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1441   .bss.intakeControllerControlBlock:00000000 intakeControllerControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1435   .bss.intakeControllerBuffer:00000000 intakeControllerBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1448   .bss.intakeControllerHandle:00000000 intakeControllerHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1292   .bss.achooControllerControlBlock:00000000 achooControllerControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1286   .bss.achooControllerBuffer:00000000 achooControllerBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1299   .bss.achooControllerHandle:00000000 achooControllerHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1344   .bss.defaultTaskControlBlock:00000000 defaultTaskControlBlock
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1338   .bss.defaultTaskBuffer:00000000 defaultTaskBuffer
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1351   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1429   .bss.huart2:00000000 huart2
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1422   .bss.hcan:00000000 hcan
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 43


C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1415   .bss.hadc1:00000000 hadc1
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1208   .rodata:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1283   .bss.achooControllerBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1289   .bss.achooControllerControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1295   .bss.achooControllerHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1302   .bss.canRxDispatchBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1308   .bss.canRxDispatchControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1314   .bss.canRxDispatchHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1321   .bss.canTxMutexControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1328   .bss.canTxMutexHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1335   .bss.defaultTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1341   .bss.defaultTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1347   .bss.defaultTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1354   .bss.drivetrainTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1360   .bss.drivetrainTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1366   .bss.drivetrainTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1373   .bss.excavateControllerBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1379   .bss.excavateControllerControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1385   .bss.excavateControllerHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1392   .bss.gesundheitTaskBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1398   .bss.gesundheitTaskControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1404   .bss.gesundheitTaskHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1411   .bss.hadc1:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1418   .bss.hcan:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1425   .bss.huart2:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1432   .bss.intakeControllerBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1438   .bss.intakeControllerControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1444   .bss.intakeControllerHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1451   .bss.sneezeControlBuffer:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1457   .bss.sneezeControlControlBlock:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1463   .bss.sneezeControlHandle:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s:1470   .bss.xCanRxQueue:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_IncTick
HAL_UART_Init
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
vesc_system_init
osMutexCreate
xQueueGenericCreate
osThreadCreate
isThreadCreate
osKernelStart
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccBO1TVu.s 			page 44


achooControllerFunc
intakeControllerFunc
excavateControllerFunc
canRxDispatchTask
gesundheitControllerFunc
sneezeControllerFunc
drivetrain_loop
