ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"gesundheit_controller.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.gesundheitCANCallback,"ax",%progbits
  20              		.align	1
  21              		.global	gesundheitCANCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	gesundheitCANCallback:
  27              	.LFB135:
  28              		.file 1 "Src/gesundheit_controller.c"
   1:Src/gesundheit_controller.c **** //
   2:Src/gesundheit_controller.c **** // Created by julia on 11/5/19.
   3:Src/gesundheit_controller.c **** //
   4:Src/gesundheit_controller.c **** 
   5:Src/gesundheit_controller.c **** #include "gesundheit_controller.h"
   6:Src/gesundheit_controller.c **** #include <can_manager.h>
   7:Src/gesundheit_controller.c **** #include <main.h>
   8:Src/gesundheit_controller.c **** #include <rt_conf.h>
   9:Src/gesundheit_controller.c **** #include "VESC.h"
  10:Src/gesundheit_controller.c **** #include "buffer.h"
  11:Src/gesundheit_controller.c **** 
  12:Src/gesundheit_controller.c **** #include <FreeRTOS.h>
  13:Src/gesundheit_controller.c **** #include <relay.h>
  14:Src/gesundheit_controller.c **** #include <stm32f3xx_hal_conf.h>
  15:Src/gesundheit_controller.c **** #include <task.h>
  16:Src/gesundheit_controller.c **** 
  17:Src/gesundheit_controller.c **** static ExtendState targetState = STOWED;
  18:Src/gesundheit_controller.c **** static ExtendState currentState = STOWED;
  19:Src/gesundheit_controller.c **** static bool doorOpen = false;
  20:Src/gesundheit_controller.c **** static F32 targetRPM = 0.0f;
  21:Src/gesundheit_controller.c **** static VESC* gesundheitMotor;
  22:Src/gesundheit_controller.c **** static Relay extension;
  23:Src/gesundheit_controller.c **** static Relay flipl;
  24:Src/gesundheit_controller.c **** static Relay flipr;
  25:Src/gesundheit_controller.c **** static Relay door;
  26:Src/gesundheit_controller.c **** 
  27:Src/gesundheit_controller.c **** void gesundheitCANCallback(rmc_can_msg msg) {
  29              		.loc 1 27 45 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 2


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 EC46     		mov	ip, sp
  41 0006 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  28:Src/gesundheit_controller.c ****   // Because of the mask we only get messages that have our ID
  29:Src/gesundheit_controller.c ****   U32 msg_type = msg.id >> 8u;
  42              		.loc 1 29 3 view .LVU1
  43              		.loc 1 29 7 is_stmt 0 view .LVU2
  44 000a 030A     		lsrs	r3, r0, #8
  45              	.LVL0:
  30:Src/gesundheit_controller.c ****   if (msg_type == GESUNDHEIT_MSG_SET_EXTEND && msg.length >= 1) {
  46              		.loc 1 30 3 is_stmt 1 view .LVU3
  47              		.loc 1 30 6 is_stmt 0 view .LVU4
  48 000c 322B     		cmp	r3, #50
  49 000e 06D0     		beq	.L7
  50              	.L2:
  31:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
  32:Src/gesundheit_controller.c ****     switch (param) {
  33:Src/gesundheit_controller.c ****       case 1:
  34:Src/gesundheit_controller.c ****         targetState = EXTENDED;
  35:Src/gesundheit_controller.c ****         break;
  36:Src/gesundheit_controller.c ****       default:
  37:Src/gesundheit_controller.c ****       case 0:
  38:Src/gesundheit_controller.c ****         targetState = STOWED;
  39:Src/gesundheit_controller.c ****     }
  40:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_SPEED && msg.length >= 4) {
  51              		.loc 1 40 10 is_stmt 1 view .LVU5
  52              		.loc 1 40 13 is_stmt 0 view .LVU6
  53 0010 332B     		cmp	r3, #51
  54 0012 13D0     		beq	.L8
  55              	.L5:
  41:Src/gesundheit_controller.c ****     S32 idx = 0;
  42:Src/gesundheit_controller.c ****     targetRPM = (F32)buffer_pop_int32(msg.buf, &idx);
  43:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
  56              		.loc 1 43 10 is_stmt 1 view .LVU7
  57              		.loc 1 43 13 is_stmt 0 view .LVU8
  58 0014 342B     		cmp	r3, #52
  59 0016 22D0     		beq	.L9
  60              	.LVL1:
  61              	.L1:
  44:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
  45:Src/gesundheit_controller.c ****     doorOpen = param > 0;
  46:Src/gesundheit_controller.c ****   }
  47:Src/gesundheit_controller.c **** }
  62              		.loc 1 47 1 view .LVU9
  63 0018 07B0     		add	sp, sp, #28
  64              	.LCFI2:
  65              		.cfi_remember_state
  66              		.cfi_def_cfa_offset 4
  67              		@ sp needed
  68 001a 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 3


  69              	.LVL2:
  70              	.L7:
  71              	.LCFI3:
  72              		.cfi_restore_state
  30:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
  73              		.loc 1 30 51 discriminator 1 view .LVU10
  74 001e 039A     		ldr	r2, [sp, #12]
  30:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
  75              		.loc 1 30 45 discriminator 1 view .LVU11
  76 0020 002A     		cmp	r2, #0
  77 0022 F5DD     		ble	.L2
  78              	.LBB2:
  31:Src/gesundheit_controller.c ****     switch (param) {
  79              		.loc 1 31 5 is_stmt 1 view .LVU12
  31:Src/gesundheit_controller.c ****     switch (param) {
  80              		.loc 1 31 8 is_stmt 0 view .LVU13
  81 0024 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
  82              	.LVL3:
  32:Src/gesundheit_controller.c ****       case 1:
  83              		.loc 1 32 5 is_stmt 1 view .LVU14
  84 0028 012B     		cmp	r3, #1
  85 002a 03D0     		beq	.L10
  38:Src/gesundheit_controller.c ****     }
  86              		.loc 1 38 9 view .LVU15
  38:Src/gesundheit_controller.c ****     }
  87              		.loc 1 38 21 is_stmt 0 view .LVU16
  88 002c 114B     		ldr	r3, .L11
  89              	.LVL4:
  38:Src/gesundheit_controller.c ****     }
  90              		.loc 1 38 21 view .LVU17
  91 002e 0022     		movs	r2, #0
  92 0030 1A70     		strb	r2, [r3]
  93 0032 F1E7     		b	.L1
  94              	.LVL5:
  95              	.L10:
  34:Src/gesundheit_controller.c ****         break;
  96              		.loc 1 34 9 is_stmt 1 view .LVU18
  34:Src/gesundheit_controller.c ****         break;
  97              		.loc 1 34 21 is_stmt 0 view .LVU19
  98 0034 0F4B     		ldr	r3, .L11
  99              	.LVL6:
  34:Src/gesundheit_controller.c ****         break;
 100              		.loc 1 34 21 view .LVU20
 101 0036 0322     		movs	r2, #3
 102 0038 1A70     		strb	r2, [r3]
  35:Src/gesundheit_controller.c ****       default:
 103              		.loc 1 35 9 is_stmt 1 view .LVU21
 104 003a EDE7     		b	.L1
 105              	.LVL7:
 106              	.L8:
  35:Src/gesundheit_controller.c ****       default:
 107              		.loc 1 35 9 is_stmt 0 view .LVU22
 108              	.LBE2:
  40:Src/gesundheit_controller.c ****     S32 idx = 0;
 109              		.loc 1 40 57 discriminator 1 view .LVU23
 110 003c 039A     		ldr	r2, [sp, #12]
  40:Src/gesundheit_controller.c ****     S32 idx = 0;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 4


 111              		.loc 1 40 51 discriminator 1 view .LVU24
 112 003e 032A     		cmp	r2, #3
 113 0040 E8DD     		ble	.L5
 114              	.LBB3:
  41:Src/gesundheit_controller.c ****     targetRPM = (F32)buffer_pop_int32(msg.buf, &idx);
 115              		.loc 1 41 5 is_stmt 1 view .LVU25
  41:Src/gesundheit_controller.c ****     targetRPM = (F32)buffer_pop_int32(msg.buf, &idx);
 116              		.loc 1 41 9 is_stmt 0 view .LVU26
 117 0042 0023     		movs	r3, #0
 118              	.LVL8:
  41:Src/gesundheit_controller.c ****     targetRPM = (F32)buffer_pop_int32(msg.buf, &idx);
 119              		.loc 1 41 9 view .LVU27
 120 0044 0593     		str	r3, [sp, #20]
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 121              		.loc 1 42 5 is_stmt 1 view .LVU28
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 122              		.loc 1 42 22 is_stmt 0 view .LVU29
 123 0046 05A9     		add	r1, sp, #20
 124 0048 01A8     		add	r0, sp, #4
 125              	.LVL9:
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 126              		.loc 1 42 22 view .LVU30
 127 004a FFF7FEFF 		bl	buffer_pop_int32
 128              	.LVL10:
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 129              		.loc 1 42 22 view .LVU31
 130 004e 07EE900A 		vmov	s15, r0	@ int
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 131              		.loc 1 42 17 view .LVU32
 132 0052 F8EEE77A 		vcvt.f32.s32	s15, s15
  42:Src/gesundheit_controller.c ****   } else if (msg_type == GESUNDHEIT_MSG_SET_DOOR && msg.length >= 1) {
 133              		.loc 1 42 15 view .LVU33
 134 0056 084B     		ldr	r3, .L11+4
 135 0058 C3ED007A 		vstr.32	s15, [r3]
 136              	.LBE3:
  40:Src/gesundheit_controller.c ****     S32 idx = 0;
 137              		.loc 1 40 71 view .LVU34
 138 005c DCE7     		b	.L1
 139              	.LVL11:
 140              	.L9:
  43:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
 141              		.loc 1 43 56 discriminator 1 view .LVU35
 142 005e 039B     		ldr	r3, [sp, #12]
 143              	.LVL12:
  43:Src/gesundheit_controller.c ****     U8 param = msg.buf[0];
 144              		.loc 1 43 50 discriminator 1 view .LVU36
 145 0060 002B     		cmp	r3, #0
 146 0062 D9DD     		ble	.L1
 147              	.LBB4:
  44:Src/gesundheit_controller.c ****     doorOpen = param > 0;
 148              		.loc 1 44 5 is_stmt 1 view .LVU37
  44:Src/gesundheit_controller.c ****     doorOpen = param > 0;
 149              		.loc 1 44 8 is_stmt 0 view .LVU38
 150 0064 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 151              	.LVL13:
  45:Src/gesundheit_controller.c ****   }
 152              		.loc 1 45 5 is_stmt 1 view .LVU39
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 5


  45:Src/gesundheit_controller.c ****   }
 153              		.loc 1 45 22 is_stmt 0 view .LVU40
 154 0068 003B     		subs	r3, r3, #0
  45:Src/gesundheit_controller.c ****   }
 155              		.loc 1 45 22 view .LVU41
 156 006a 18BF     		it	ne
 157 006c 0123     		movne	r3, #1
 158              	.LVL14:
  45:Src/gesundheit_controller.c ****   }
 159              		.loc 1 45 14 view .LVU42
 160 006e 034A     		ldr	r2, .L11+8
 161 0070 1370     		strb	r3, [r2]
 162              	.LBE4:
 163              		.loc 1 47 1 view .LVU43
 164 0072 D1E7     		b	.L1
 165              	.L12:
 166              		.align	2
 167              	.L11:
 168 0074 00000000 		.word	.LANCHOR0
 169 0078 00000000 		.word	.LANCHOR1
 170 007c 00000000 		.word	.LANCHOR2
 171              		.cfi_endproc
 172              	.LFE135:
 174              		.section	.text.gesundheitControllerFunc,"ax",%progbits
 175              		.align	1
 176              		.global	gesundheitControllerFunc
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	gesundheitControllerFunc:
 182              	.LVL15:
 183              	.LFB136:
  48:Src/gesundheit_controller.c **** 
  49:Src/gesundheit_controller.c **** void gesundheitControllerFunc(void const* argument) {
 184              		.loc 1 49 53 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 32
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		.loc 1 49 53 is_stmt 0 view .LVU45
 189 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 20
 192              		.cfi_offset 4, -20
 193              		.cfi_offset 5, -16
 194              		.cfi_offset 6, -12
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 8BB0     		sub	sp, sp, #44
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 64
  50:Src/gesundheit_controller.c ****   // System setup
  51:Src/gesundheit_controller.c ****   registerCANMsgHandler(GESUNDHEIT_SYS_ID, &gesundheitCANCallback);
 200              		.loc 1 51 3 is_stmt 1 view .LVU46
 201 0004 7B49     		ldr	r1, .L36
 202 0006 6620     		movs	r0, #102
 203              	.LVL16:
 204              		.loc 1 51 3 is_stmt 0 view .LVU47
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 6


 205 0008 FFF7FEFF 		bl	registerCANMsgHandler
 206              	.LVL17:
  52:Src/gesundheit_controller.c ****   gesundheitMotor =
 207              		.loc 1 52 3 is_stmt 1 view .LVU48
  53:Src/gesundheit_controller.c ****       create_vesc(GESUNDHEIT_MOTOR_ID, GESUNDHEIT_MOTOR_POLE_PAIRS);
 208              		.loc 1 53 7 is_stmt 0 view .LVU49
 209 000c 0721     		movs	r1, #7
 210 000e 0C20     		movs	r0, #12
 211 0010 FFF7FEFF 		bl	create_vesc
 212              	.LVL18:
  52:Src/gesundheit_controller.c ****   gesundheitMotor =
 213              		.loc 1 52 19 view .LVU50
 214 0014 784B     		ldr	r3, .L36+4
 215 0016 1860     		str	r0, [r3]
  54:Src/gesundheit_controller.c ****   extension = create_relay(R_GESUNDEXT_FW_GPIO_Port, R_GESUNDEXT_FW_Pin,
 216              		.loc 1 54 3 is_stmt 1 view .LVU51
 217              		.loc 1 54 15 is_stmt 0 view .LVU52
 218 0018 784D     		ldr	r5, .L36+8
 219 001a 02AC     		add	r4, sp, #8
 220 001c 784E     		ldr	r6, .L36+12
 221 001e 1023     		movs	r3, #16
 222 0020 0093     		str	r3, [sp]
 223 0022 3346     		mov	r3, r6
 224 0024 2022     		movs	r2, #32
 225 0026 3146     		mov	r1, r6
 226 0028 2046     		mov	r0, r4
 227 002a FFF7FEFF 		bl	create_relay
 228              	.LVL19:
 229 002e 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 230 0032 85E80F00 		stm	r5, {r0, r1, r2, r3}
  55:Src/gesundheit_controller.c ****                            R_GESUNDEXT_RV_GPIO_Port, R_GESUNDEXT_RV_Pin);
  56:Src/gesundheit_controller.c ****   flipl = create_relay(R_GESUNDL_FW_GPIO_Port, R_GESUNDL_FW_Pin,
 231              		.loc 1 56 3 is_stmt 1 view .LVU53
 232              		.loc 1 56 11 is_stmt 0 view .LVU54
 233 0036 734D     		ldr	r5, .L36+16
 234 0038 734F     		ldr	r7, .L36+20
 235 003a 4FF40063 		mov	r3, #2048
 236 003e 0093     		str	r3, [sp]
 237 0040 3B46     		mov	r3, r7
 238 0042 4FF48052 		mov	r2, #4096
 239 0046 3946     		mov	r1, r7
 240 0048 2046     		mov	r0, r4
 241 004a FFF7FEFF 		bl	create_relay
 242              	.LVL20:
 243 004e 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 244 0052 85E80F00 		stm	r5, {r0, r1, r2, r3}
  57:Src/gesundheit_controller.c ****                        R_GESUNDL_RV_GPIO_Port, R_GESUNDL_RV_Pin);
  58:Src/gesundheit_controller.c ****   flipr = create_relay(R_GESUNDR_FW_GPIO_Port, R_GESUNDR_FW_Pin,
 245              		.loc 1 58 3 is_stmt 1 view .LVU55
 246              		.loc 1 58 11 is_stmt 0 view .LVU56
 247 0056 6D4D     		ldr	r5, .L36+24
 248 0058 4FF40043 		mov	r3, #32768
 249 005c 0093     		str	r3, [sp]
 250 005e 4FF09043 		mov	r3, #1207959552
 251 0062 4FF48062 		mov	r2, #1024
 252 0066 3946     		mov	r1, r7
 253 0068 2046     		mov	r0, r4
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 7


 254 006a FFF7FEFF 		bl	create_relay
 255              	.LVL21:
 256 006e 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 257 0072 85E80F00 		stm	r5, {r0, r1, r2, r3}
  59:Src/gesundheit_controller.c ****                        R_GESUNDR_RV_GPIO_Port, R_GESUNDR_RV_Pin);
  60:Src/gesundheit_controller.c ****   door = create_relay(R_DOOR_FW_GPIO_Port, R_DOOR_FW_Pin, R_DOOR_RV_GPIO_Port,
 258              		.loc 1 60 3 is_stmt 1 view .LVU57
 259              		.loc 1 60 10 is_stmt 0 view .LVU58
 260 0076 664D     		ldr	r5, .L36+28
 261 0078 4FF48053 		mov	r3, #4096
 262 007c 0093     		str	r3, [sp]
 263 007e 3346     		mov	r3, r6
 264 0080 4FF40052 		mov	r2, #8192
 265 0084 3146     		mov	r1, r6
 266 0086 2046     		mov	r0, r4
 267 0088 FFF7FEFF 		bl	create_relay
 268              	.LVL22:
 269 008c 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 270 0090 85E80F00 		stm	r5, {r0, r1, r2, r3}
 271 0094 52E0     		b	.L26
 272              	.L34:
 273              	.LBB5:
  61:Src/gesundheit_controller.c ****                       R_DOOR_RV_Pin);
  62:Src/gesundheit_controller.c **** 
  63:Src/gesundheit_controller.c ****   TickType_t lastWakeTime;
  64:Src/gesundheit_controller.c ****   while (1) {
  65:Src/gesundheit_controller.c ****     vTaskDelayUntil(&lastWakeTime, GESUNDHEIT_LOOP_MS * portTICK_RATE_MS);
  66:Src/gesundheit_controller.c ****     // Handle target state transitions
  67:Src/gesundheit_controller.c ****     if (targetState == STOWED &&
  68:Src/gesundheit_controller.c ****         (currentState == EXTENDED || currentState == MOVING_EXTEND)) {
  69:Src/gesundheit_controller.c ****       currentState = MOVING_STOW;
 274              		.loc 1 69 7 is_stmt 1 view .LVU59
 275              		.loc 1 69 20 is_stmt 0 view .LVU60
 276 0096 5F4B     		ldr	r3, .L36+32
 277 0098 0122     		movs	r2, #1
 278 009a 1A70     		strb	r2, [r3]
 279 009c 5DE0     		b	.L15
 280              	.L35:
  70:Src/gesundheit_controller.c ****     } else if (targetState == EXTENDED &&
  71:Src/gesundheit_controller.c ****                (currentState == STOWED || currentState == MOVING_STOW)) {
 281              		.loc 1 71 40 discriminator 1 view .LVU61
 282 009e 5D4B     		ldr	r3, .L36+32
 283 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70:Src/gesundheit_controller.c ****     } else if (targetState == EXTENDED &&
 284              		.loc 1 70 40 discriminator 1 view .LVU62
 285 00a2 012B     		cmp	r3, #1
 286 00a4 59D8     		bhi	.L15
  72:Src/gesundheit_controller.c ****       currentState = MOVING_EXTEND;
 287              		.loc 1 72 7 is_stmt 1 view .LVU63
 288              		.loc 1 72 20 is_stmt 0 view .LVU64
 289 00a6 5B4B     		ldr	r3, .L36+32
 290 00a8 0222     		movs	r2, #2
 291 00aa 1A70     		strb	r2, [r3]
 292 00ac 55E0     		b	.L15
 293              	.LVL23:
 294              	.L16:
  73:Src/gesundheit_controller.c ****     }
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 8


  74:Src/gesundheit_controller.c ****     bool lowLimitR = HAL_GPIO_ReadPin(GESUNDHEIT_LimitRI_GPIO_Port,
  75:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitRI_Pin) == 0;
  76:Src/gesundheit_controller.c ****     bool lowLimitL = HAL_GPIO_ReadPin(GESUNDHEIT_LimitLI_GPIO_Port,
  77:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitLI_Pin) == 0;
  78:Src/gesundheit_controller.c ****     bool highLimitR = HAL_GPIO_ReadPin(GESUNDHEIT_LimitRO_GPIO_Port,
  79:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitRO_Pin) == 0;
  80:Src/gesundheit_controller.c ****     bool highLimitL = HAL_GPIO_ReadPin(GESUNDHEIT_LimitLO_GPIO_Port,
  81:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitLO_Pin) == 0;
  82:Src/gesundheit_controller.c ****     // Check if our movement has completed
  83:Src/gesundheit_controller.c ****     if (lowLimitR && lowLimitL && currentState == MOVING_STOW) {
  84:Src/gesundheit_controller.c ****       currentState = STOWED;
  85:Src/gesundheit_controller.c ****     }
  86:Src/gesundheit_controller.c ****     if (highLimitR && highLimitL && currentState == MOVING_EXTEND) {
 295              		.loc 1 86 5 is_stmt 1 view .LVU65
 296              		.loc 1 86 8 is_stmt 0 view .LVU66
 297 00ae 25B9     		cbnz	r5, .L17
 298              		.loc 1 86 20 discriminator 1 view .LVU67
 299 00b0 1CB9     		cbnz	r4, .L17
 300              		.loc 1 86 50 discriminator 2 view .LVU68
 301 00b2 584B     		ldr	r3, .L36+32
 302 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303              		.loc 1 86 34 discriminator 2 view .LVU69
 304 00b6 022B     		cmp	r3, #2
 305 00b8 72D0     		beq	.L28
 306              	.L17:
  87:Src/gesundheit_controller.c ****       currentState = EXTENDED;
  88:Src/gesundheit_controller.c ****     }
  89:Src/gesundheit_controller.c **** 
  90:Src/gesundheit_controller.c ****     // Linear actuators have built in stops
  91:Src/gesundheit_controller.c ****     if (currentState == MOVING_EXTEND || currentState == EXTENDED) {
 307              		.loc 1 91 5 is_stmt 1 view .LVU70
 308              		.loc 1 91 39 is_stmt 0 view .LVU71
 309 00ba 564B     		ldr	r3, .L36+32
 310 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311 00be 023B     		subs	r3, r3, #2
 312 00c0 DBB2     		uxtb	r3, r3
 313              		.loc 1 91 8 view .LVU72
 314 00c2 012B     		cmp	r3, #1
 315 00c4 70D9     		bls	.L29
  92:Src/gesundheit_controller.c ****       set_relay(&extension, RELAY_FORWARD);
  93:Src/gesundheit_controller.c ****     } else {
  94:Src/gesundheit_controller.c ****       set_relay(&extension, RELAY_REVERSE);
 316              		.loc 1 94 7 is_stmt 1 view .LVU73
 317 00c6 0221     		movs	r1, #2
 318 00c8 4C48     		ldr	r0, .L36+8
 319 00ca FFF7FEFF 		bl	set_relay
 320              	.LVL24:
 321              	.L19:
  95:Src/gesundheit_controller.c ****     }
  96:Src/gesundheit_controller.c **** 
  97:Src/gesundheit_controller.c ****     // Set relays for motors
  98:Src/gesundheit_controller.c ****     if (currentState == MOVING_EXTEND && !highLimitR) {
 322              		.loc 1 98 5 view .LVU74
 323              		.loc 1 98 22 is_stmt 0 view .LVU75
 324 00ce 514B     		ldr	r3, .L36+32
 325 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326              		.loc 1 98 8 view .LVU76
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 9


 327 00d2 022B     		cmp	r3, #2
 328 00d4 6DD0     		beq	.L30
 329              	.L20:
  99:Src/gesundheit_controller.c ****       set_relay(&flipr, RELAY_FORWARD);
 100:Src/gesundheit_controller.c ****     } else if (currentState == MOVING_STOW && !lowLimitR) {
 330              		.loc 1 100 12 is_stmt 1 view .LVU77
 331              		.loc 1 100 15 is_stmt 0 view .LVU78
 332 00d6 012B     		cmp	r3, #1
 333 00d8 72D0     		beq	.L31
 334              	.L21:
 101:Src/gesundheit_controller.c ****       set_relay(&flipr, RELAY_REVERSE);
 102:Src/gesundheit_controller.c ****     }
 103:Src/gesundheit_controller.c ****     if (currentState == MOVING_EXTEND && !highLimitL) {
 335              		.loc 1 103 5 is_stmt 1 view .LVU79
 336              		.loc 1 103 22 is_stmt 0 view .LVU80
 337 00da 4E4B     		ldr	r3, .L36+32
 338 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339              		.loc 1 103 8 view .LVU81
 340 00de 022B     		cmp	r3, #2
 341 00e0 75D0     		beq	.L32
 342              	.L22:
 104:Src/gesundheit_controller.c ****       set_relay(&flipl, RELAY_FORWARD);
 105:Src/gesundheit_controller.c ****     } else if (currentState == MOVING_STOW && !lowLimitL) {
 343              		.loc 1 105 12 is_stmt 1 view .LVU82
 344              		.loc 1 105 15 is_stmt 0 view .LVU83
 345 00e2 012B     		cmp	r3, #1
 346 00e4 7AD0     		beq	.L33
 347              	.L23:
 106:Src/gesundheit_controller.c ****       set_relay(&flipl, RELAY_REVERSE);
 107:Src/gesundheit_controller.c ****     }
 108:Src/gesundheit_controller.c **** 
 109:Src/gesundheit_controller.c ****     // Set RPM
 110:Src/gesundheit_controller.c ****     vesc_set_rpm(gesundheitMotor, targetRPM);
 348              		.loc 1 110 5 is_stmt 1 view .LVU84
 349 00e6 4C4B     		ldr	r3, .L36+36
 350 00e8 93ED000A 		vldr.32	s0, [r3]
 351 00ec 424B     		ldr	r3, .L36+4
 352 00ee 1868     		ldr	r0, [r3]
 353 00f0 FFF7FEFF 		bl	vesc_set_rpm
 354              	.LVL25:
 111:Src/gesundheit_controller.c **** 
 112:Src/gesundheit_controller.c ****     // Set door (linear actuator)
 113:Src/gesundheit_controller.c ****     if (doorOpen) {
 355              		.loc 1 113 5 view .LVU85
 356              		.loc 1 113 9 is_stmt 0 view .LVU86
 357 00f4 494B     		ldr	r3, .L36+40
 358 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359              		.loc 1 113 8 view .LVU87
 360 00f8 002B     		cmp	r3, #0
 361 00fa 76D0     		beq	.L24
 114:Src/gesundheit_controller.c ****       set_relay(&door, RELAY_FORWARD);
 362              		.loc 1 114 7 is_stmt 1 view .LVU88
 363 00fc 0121     		movs	r1, #1
 364 00fe 4448     		ldr	r0, .L36+28
 365 0100 FFF7FEFF 		bl	set_relay
 366              	.LVL26:
 367              	.L25:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 10


 115:Src/gesundheit_controller.c ****     } else {
 116:Src/gesundheit_controller.c ****       set_relay(&door, RELAY_REVERSE);
 117:Src/gesundheit_controller.c ****     }
 118:Src/gesundheit_controller.c **** 
 119:Src/gesundheit_controller.c ****     // Send status message
 120:Src/gesundheit_controller.c ****     U8 data[6];
 368              		.loc 1 120 5 view .LVU89
 121:Src/gesundheit_controller.c ****     data[0] = currentState;
 369              		.loc 1 121 5 view .LVU90
 370              		.loc 1 121 13 is_stmt 0 view .LVU91
 371 0104 434B     		ldr	r3, .L36+32
 372 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 0108 8DF81C30 		strb	r3, [sp, #28]
 122:Src/gesundheit_controller.c ****     data[1] = doorOpen;
 374              		.loc 1 122 5 is_stmt 1 view .LVU92
 375              		.loc 1 122 13 is_stmt 0 view .LVU93
 376 010c 434B     		ldr	r3, .L36+40
 377 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 0110 8DF81D30 		strb	r3, [sp, #29]
 123:Src/gesundheit_controller.c ****     S32 rpm = (S32)vesc_get_rpm(gesundheitMotor);
 379              		.loc 1 123 5 is_stmt 1 view .LVU94
 380              		.loc 1 123 20 is_stmt 0 view .LVU95
 381 0114 384B     		ldr	r3, .L36+4
 382 0116 1868     		ldr	r0, [r3]
 383 0118 FFF7FEFF 		bl	vesc_get_rpm
 384              	.LVL27:
 124:Src/gesundheit_controller.c ****     S32 idx = 2;
 385              		.loc 1 124 5 is_stmt 1 view .LVU96
 386              		.loc 1 124 9 is_stmt 0 view .LVU97
 387 011c 0223     		movs	r3, #2
 388 011e 0693     		str	r3, [sp, #24]
 125:Src/gesundheit_controller.c ****     buffer_put_int32(data, &idx, rpm);
 389              		.loc 1 125 5 is_stmt 1 view .LVU98
 390 0120 FDEEC07A 		vcvt.s32.f32	s15, s0
 391              	.LVL28:
 392              		.loc 1 125 5 is_stmt 0 view .LVU99
 393 0124 17EE902A 		vmov	r2, s15	@ int
 394 0128 06A9     		add	r1, sp, #24
 395 012a 07A8     		add	r0, sp, #28
 396 012c FFF7FEFF 		bl	buffer_put_int32
 397              	.LVL29:
 126:Src/gesundheit_controller.c ****     do_send_can_message((GESUNDHEIT_MSG_STATUS << 8u) | GESUNDHEIT_SYS_ID, data,
 398              		.loc 1 126 5 is_stmt 1 view .LVU100
 399 0130 0122     		movs	r2, #1
 400 0132 07A9     		add	r1, sp, #28
 401 0134 43F26650 		movw	r0, #13670
 402 0138 FFF7FEFF 		bl	do_send_can_message
 403              	.LVL30:
 404              	.LBE5:
  64:Src/gesundheit_controller.c ****     vTaskDelayUntil(&lastWakeTime, GESUNDHEIT_LOOP_MS * portTICK_RATE_MS);
 405              		.loc 1 64 9 view .LVU101
 406              	.L26:
  63:Src/gesundheit_controller.c ****   while (1) {
 407              		.loc 1 63 3 view .LVU102
  64:Src/gesundheit_controller.c ****     vTaskDelayUntil(&lastWakeTime, GESUNDHEIT_LOOP_MS * portTICK_RATE_MS);
 408              		.loc 1 64 3 view .LVU103
 409              	.LBB6:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 11


  65:Src/gesundheit_controller.c ****     // Handle target state transitions
 410              		.loc 1 65 5 view .LVU104
 411 013c 1421     		movs	r1, #20
 412 013e 09A8     		add	r0, sp, #36
 413 0140 FFF7FEFF 		bl	vTaskDelayUntil
 414              	.LVL31:
  67:Src/gesundheit_controller.c ****         (currentState == EXTENDED || currentState == MOVING_EXTEND)) {
 415              		.loc 1 67 5 view .LVU105
  67:Src/gesundheit_controller.c ****         (currentState == EXTENDED || currentState == MOVING_EXTEND)) {
 416              		.loc 1 67 21 is_stmt 0 view .LVU106
 417 0144 364B     		ldr	r3, .L36+44
 418 0146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  67:Src/gesundheit_controller.c ****         (currentState == EXTENDED || currentState == MOVING_EXTEND)) {
 419              		.loc 1 67 8 view .LVU107
 420 0148 2AB9     		cbnz	r2, .L14
  68:Src/gesundheit_controller.c ****       currentState = MOVING_STOW;
 421              		.loc 1 68 35 discriminator 1 view .LVU108
 422 014a 324B     		ldr	r3, .L36+32
 423 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 424 014e 023B     		subs	r3, r3, #2
 425 0150 DBB2     		uxtb	r3, r3
  67:Src/gesundheit_controller.c ****         (currentState == EXTENDED || currentState == MOVING_EXTEND)) {
 426              		.loc 1 67 31 discriminator 1 view .LVU109
 427 0152 012B     		cmp	r3, #1
 428 0154 9FD9     		bls	.L34
 429              	.L14:
  70:Src/gesundheit_controller.c ****                (currentState == STOWED || currentState == MOVING_STOW)) {
 430              		.loc 1 70 12 is_stmt 1 view .LVU110
  70:Src/gesundheit_controller.c ****                (currentState == STOWED || currentState == MOVING_STOW)) {
 431              		.loc 1 70 15 is_stmt 0 view .LVU111
 432 0156 032A     		cmp	r2, #3
 433 0158 A1D0     		beq	.L35
 434              	.L15:
  74:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitRI_Pin) == 0;
 435              		.loc 1 74 5 is_stmt 1 view .LVU112
  74:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitRI_Pin) == 0;
 436              		.loc 1 74 22 is_stmt 0 view .LVU113
 437 015a 294C     		ldr	r4, .L36+12
 438 015c 4FF48061 		mov	r1, #1024
 439 0160 2046     		mov	r0, r4
 440 0162 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 441              	.LVL32:
 442 0166 0646     		mov	r6, r0
 443              	.LVL33:
  76:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitLI_Pin) == 0;
 444              		.loc 1 76 5 is_stmt 1 view .LVU114
  76:Src/gesundheit_controller.c ****                                       GESUNDHEIT_LimitLI_Pin) == 0;
 445              		.loc 1 76 22 is_stmt 0 view .LVU115
 446 0168 0221     		movs	r1, #2
 447 016a 2046     		mov	r0, r4
 448 016c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 449              	.LVL34:
 450 0170 0746     		mov	r7, r0
 451              	.LVL35:
  78:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitRO_Pin) == 0;
 452              		.loc 1 78 5 is_stmt 1 view .LVU116
  78:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitRO_Pin) == 0;
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 12


 453              		.loc 1 78 23 is_stmt 0 view .LVU117
 454 0172 4FF40061 		mov	r1, #2048
 455 0176 2046     		mov	r0, r4
 456 0178 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 457              	.LVL36:
 458 017c 0546     		mov	r5, r0
 459              	.LVL37:
  80:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitLO_Pin) == 0;
 460              		.loc 1 80 5 is_stmt 1 view .LVU118
  80:Src/gesundheit_controller.c ****                                        GESUNDHEIT_LimitLO_Pin) == 0;
 461              		.loc 1 80 23 is_stmt 0 view .LVU119
 462 017e 0421     		movs	r1, #4
 463 0180 2046     		mov	r0, r4
 464 0182 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 465              	.LVL38:
 466 0186 0446     		mov	r4, r0
 467              	.LVL39:
  83:Src/gesundheit_controller.c ****       currentState = STOWED;
 468              		.loc 1 83 5 is_stmt 1 view .LVU120
  83:Src/gesundheit_controller.c ****       currentState = STOWED;
 469              		.loc 1 83 8 is_stmt 0 view .LVU121
 470 0188 002E     		cmp	r6, #0
 471 018a 90D1     		bne	.L16
  83:Src/gesundheit_controller.c ****       currentState = STOWED;
 472              		.loc 1 83 19 discriminator 1 view .LVU122
 473 018c 002F     		cmp	r7, #0
 474 018e 8ED1     		bne	.L16
  83:Src/gesundheit_controller.c ****       currentState = STOWED;
 475              		.loc 1 83 48 discriminator 2 view .LVU123
 476 0190 204B     		ldr	r3, .L36+32
 477 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  83:Src/gesundheit_controller.c ****       currentState = STOWED;
 478              		.loc 1 83 32 discriminator 2 view .LVU124
 479 0194 012B     		cmp	r3, #1
 480 0196 8AD1     		bne	.L16
  84:Src/gesundheit_controller.c ****     }
 481              		.loc 1 84 7 is_stmt 1 view .LVU125
  84:Src/gesundheit_controller.c ****     }
 482              		.loc 1 84 20 is_stmt 0 view .LVU126
 483 0198 1E4B     		ldr	r3, .L36+32
 484 019a 0022     		movs	r2, #0
 485 019c 1A70     		strb	r2, [r3]
 486 019e 86E7     		b	.L16
 487              	.L28:
  87:Src/gesundheit_controller.c ****     }
 488              		.loc 1 87 7 is_stmt 1 view .LVU127
  87:Src/gesundheit_controller.c ****     }
 489              		.loc 1 87 20 is_stmt 0 view .LVU128
 490 01a0 1C4B     		ldr	r3, .L36+32
 491 01a2 0322     		movs	r2, #3
 492 01a4 1A70     		strb	r2, [r3]
 493 01a6 88E7     		b	.L17
 494              	.L29:
  92:Src/gesundheit_controller.c ****     } else {
 495              		.loc 1 92 7 is_stmt 1 view .LVU129
 496 01a8 0121     		movs	r1, #1
 497 01aa 1448     		ldr	r0, .L36+8
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 13


 498 01ac FFF7FEFF 		bl	set_relay
 499              	.LVL40:
 500 01b0 8DE7     		b	.L19
 501              	.L30:
  98:Src/gesundheit_controller.c ****       set_relay(&flipr, RELAY_FORWARD);
 502              		.loc 1 98 39 is_stmt 0 discriminator 1 view .LVU130
 503 01b2 002D     		cmp	r5, #0
 504 01b4 8FD0     		beq	.L20
  99:Src/gesundheit_controller.c ****     } else if (currentState == MOVING_STOW && !lowLimitR) {
 505              		.loc 1 99 7 is_stmt 1 view .LVU131
 506 01b6 0121     		movs	r1, #1
 507 01b8 1448     		ldr	r0, .L36+24
 508 01ba FFF7FEFF 		bl	set_relay
 509              	.LVL41:
 510 01be 8CE7     		b	.L21
 511              	.L31:
 100:Src/gesundheit_controller.c ****       set_relay(&flipr, RELAY_REVERSE);
 512              		.loc 1 100 44 is_stmt 0 discriminator 1 view .LVU132
 513 01c0 002E     		cmp	r6, #0
 514 01c2 8AD0     		beq	.L21
 101:Src/gesundheit_controller.c ****     }
 515              		.loc 1 101 7 is_stmt 1 view .LVU133
 516 01c4 0221     		movs	r1, #2
 517 01c6 1148     		ldr	r0, .L36+24
 518 01c8 FFF7FEFF 		bl	set_relay
 519              	.LVL42:
 520 01cc 85E7     		b	.L21
 521              	.L32:
 103:Src/gesundheit_controller.c ****       set_relay(&flipl, RELAY_FORWARD);
 522              		.loc 1 103 39 is_stmt 0 discriminator 1 view .LVU134
 523 01ce 002C     		cmp	r4, #0
 524 01d0 87D0     		beq	.L22
 104:Src/gesundheit_controller.c ****     } else if (currentState == MOVING_STOW && !lowLimitL) {
 525              		.loc 1 104 7 is_stmt 1 view .LVU135
 526 01d2 0121     		movs	r1, #1
 527 01d4 0B48     		ldr	r0, .L36+16
 528 01d6 FFF7FEFF 		bl	set_relay
 529              	.LVL43:
 530 01da 84E7     		b	.L23
 531              	.L33:
 105:Src/gesundheit_controller.c ****       set_relay(&flipl, RELAY_REVERSE);
 532              		.loc 1 105 44 is_stmt 0 discriminator 1 view .LVU136
 533 01dc 002F     		cmp	r7, #0
 534 01de 82D0     		beq	.L23
 106:Src/gesundheit_controller.c ****     }
 535              		.loc 1 106 7 is_stmt 1 view .LVU137
 536 01e0 0221     		movs	r1, #2
 537 01e2 0848     		ldr	r0, .L36+16
 538 01e4 FFF7FEFF 		bl	set_relay
 539              	.LVL44:
 540 01e8 7DE7     		b	.L23
 541              	.L24:
 116:Src/gesundheit_controller.c ****     }
 542              		.loc 1 116 7 view .LVU138
 543 01ea 0221     		movs	r1, #2
 544 01ec 0848     		ldr	r0, .L36+28
 545 01ee FFF7FEFF 		bl	set_relay
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 14


 546              	.LVL45:
 547 01f2 87E7     		b	.L25
 548              	.L37:
 549              		.align	2
 550              	.L36:
 551 01f4 00000000 		.word	gesundheitCANCallback
 552 01f8 00000000 		.word	.LANCHOR3
 553 01fc 00000000 		.word	.LANCHOR4
 554 0200 00040048 		.word	1207960576
 555 0204 00000000 		.word	.LANCHOR5
 556 0208 00080048 		.word	1207961600
 557 020c 00000000 		.word	.LANCHOR6
 558 0210 00000000 		.word	.LANCHOR7
 559 0214 00000000 		.word	.LANCHOR8
 560 0218 00000000 		.word	.LANCHOR1
 561 021c 00000000 		.word	.LANCHOR2
 562 0220 00000000 		.word	.LANCHOR0
 563              	.LBE6:
 564              		.cfi_endproc
 565              	.LFE136:
 567              		.section	.text.getGESUNDHEITState,"ax",%progbits
 568              		.align	1
 569              		.global	getGESUNDHEITState
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 574              	getGESUNDHEITState:
 575              	.LFB137:
 127:Src/gesundheit_controller.c ****                         1);
 128:Src/gesundheit_controller.c ****   }
 129:Src/gesundheit_controller.c **** }
 130:Src/gesundheit_controller.c **** 
 131:Src/gesundheit_controller.c **** ExtendState getGESUNDHEITState() { return currentState; }
 576              		.loc 1 131 34 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              		.loc 1 131 36 view .LVU140
 582              		.loc 1 131 57 is_stmt 0 view .LVU141
 583 0000 014B     		ldr	r3, .L39
 584 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 585 0004 7047     		bx	lr
 586              	.L40:
 587 0006 00BF     		.align	2
 588              	.L39:
 589 0008 00000000 		.word	.LANCHOR8
 590              		.cfi_endproc
 591              	.LFE137:
 593              		.section	.bss.currentState,"aw",%nobits
 594              		.set	.LANCHOR8,. + 0
 597              	currentState:
 598 0000 00       		.space	1
 599              		.section	.bss.door,"aw",%nobits
 600              		.align	2
 601              		.set	.LANCHOR7,. + 0
 604              	door:
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 15


 605 0000 00000000 		.space	16
 605      00000000 
 605      00000000 
 605      00000000 
 606              		.section	.bss.doorOpen,"aw",%nobits
 607              		.set	.LANCHOR2,. + 0
 610              	doorOpen:
 611 0000 00       		.space	1
 612              		.section	.bss.extension,"aw",%nobits
 613              		.align	2
 614              		.set	.LANCHOR4,. + 0
 617              	extension:
 618 0000 00000000 		.space	16
 618      00000000 
 618      00000000 
 618      00000000 
 619              		.section	.bss.flipl,"aw",%nobits
 620              		.align	2
 621              		.set	.LANCHOR5,. + 0
 624              	flipl:
 625 0000 00000000 		.space	16
 625      00000000 
 625      00000000 
 625      00000000 
 626              		.section	.bss.flipr,"aw",%nobits
 627              		.align	2
 628              		.set	.LANCHOR6,. + 0
 631              	flipr:
 632 0000 00000000 		.space	16
 632      00000000 
 632      00000000 
 632      00000000 
 633              		.section	.bss.gesundheitMotor,"aw",%nobits
 634              		.align	2
 635              		.set	.LANCHOR3,. + 0
 638              	gesundheitMotor:
 639 0000 00000000 		.space	4
 640              		.section	.bss.targetRPM,"aw",%nobits
 641              		.align	2
 642              		.set	.LANCHOR1,. + 0
 645              	targetRPM:
 646 0000 00000000 		.space	4
 647              		.section	.bss.targetState,"aw",%nobits
 648              		.set	.LANCHOR0,. + 0
 651              	targetState:
 652 0000 00       		.space	1
 653              		.text
 654              	.Letext0:
 655              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 656              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 657              		.file 4 "Inc/types.h"
 658              		.file 5 "Inc/can_manager.h"
 659              		.file 6 "Inc/gesundheit_controller.h"
 660              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 661              		.file 8 "Inc/VESC.h"
 662              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 663              		.file 10 "Inc/relay.h"
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 16


 664              		.file 11 "Inc/buffer.h"
 665              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 666              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 gesundheit_controller.c
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:20     .text.gesundheitCANCallback:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:26     .text.gesundheitCANCallback:00000000 gesundheitCANCallback
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:168    .text.gesundheitCANCallback:00000074 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:175    .text.gesundheitControllerFunc:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:181    .text.gesundheitControllerFunc:00000000 gesundheitControllerFunc
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:551    .text.gesundheitControllerFunc:000001f4 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:568    .text.getGESUNDHEITState:00000000 $t
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:574    .text.getGESUNDHEITState:00000000 getGESUNDHEITState
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:589    .text.getGESUNDHEITState:00000008 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:597    .bss.currentState:00000000 currentState
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:598    .bss.currentState:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:600    .bss.door:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:604    .bss.door:00000000 door
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:610    .bss.doorOpen:00000000 doorOpen
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:611    .bss.doorOpen:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:613    .bss.extension:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:617    .bss.extension:00000000 extension
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:620    .bss.flipl:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:624    .bss.flipl:00000000 flipl
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:627    .bss.flipr:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:631    .bss.flipr:00000000 flipr
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:634    .bss.gesundheitMotor:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:638    .bss.gesundheitMotor:00000000 gesundheitMotor
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:641    .bss.targetRPM:00000000 $d
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:645    .bss.targetRPM:00000000 targetRPM
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:651    .bss.targetState:00000000 targetState
C:\Users\jmbli\AppData\Local\Temp\ccy1d5NR.s:652    .bss.targetState:00000000 $d

UNDEFINED SYMBOLS
buffer_pop_int32
registerCANMsgHandler
create_vesc
create_relay
set_relay
vesc_set_rpm
vesc_get_rpm
buffer_put_int32
do_send_can_message
vTaskDelayUntil
HAL_GPIO_ReadPin
